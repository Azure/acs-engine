version: 2
jobs:
  test:
    working_directory: /go/src/github.com/Azure/acs-engine
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: make bootstrap
      - run:
          name: Run style and unit tests
          command: make test-style build test
      - run:
          name: Generate test coverage results
          command:  make build coverage
  e2e:
    working_directory: /go/src/github.com/Azure/acs-engine
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - setup_remote_docker:
          reusable: true
      - checkout
      - run: |
          echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
          echo 'export IMAGE_TAG=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
      - run:
          name: Build current image
          command: |
            docker build -t microsoft/acs-engine:$IMAGE_TAG .
      - run:
          name: e2e tests
          command: |
            cat > ./env.list <<END
              CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM}
              SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID}
              SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET}
              TENANT_ID=${TENANT_ID}
              SUBSCRIPTION_ID=${SUBSCRIPTION_ID}
              CLUSTER_SERVICE_PRINCIPAL_CLIENT_ID=${CLUSTER_SERVICE_PRINCIPAL_CLIENT_ID}
              CLUSTER_SERVICE_PRINCIPAL_CLIENT_SECRET=${CLUSTER_SERVICE_PRINCIPAL_CLIENT_SECRET}
              CERT_KEYVAULT_ID=${CERT_KEYVAULT_ID}
              CERT_SECRET_URL=${CERT_SECRET_URL}
              COVERALLS_TOKEN=${COVERALLS_TOKEN}
              RESOURCE_GROUP_PREFIX=y
              SKIP_METRICS=y
              STAGE_TIMEOUT_MIN=30
              NUM_OF_RETRIES=2
              TEST_CONFIG=test/acse-conf/acse-pr.json
            END
            docker run --rm --env-file ./env.list microsoft/acs-engine:${IMAGE_TAG} make build test-e2e

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - e2e-hold:
          type: approval
      - e2e:
          requires:
            - e2e-hold

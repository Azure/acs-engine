version: 2
jobs:
  test:
    working_directory: /go/src/github.com/Azure/acs-engine
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: make bootstrap
      - run:
          name: Run style and unit tests
          command: make test-style build test
      - run:
          name: Generate test coverage results
          command:  make build coverage
  e2e:
    working_directory: /go/src/github.com/Azure/acs-engine
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: |
          echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
          echo 'export BUILD_NUM=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
          echo 'export RESOURCE_GROUP_PREFIX=y' >> $BASH_ENV
          echo 'export SKIP_METRICS=y' >> $BASH_ENV
          echo 'export STAGE_TIMEOUT_MIN=30' >> $BASH_ENV
          echo 'export NUM_OF_RETRIES=2' >> $BASH_ENV
          echo 'export TEST_CONFIG=test/acse-conf/acse-pr.json' >> $BASH_ENV
      - run:
          name: e2e tests
          command: make test-e2e
      - store_artifacts:
          path: /go/src/github.com/Azure/acs-engine/_logs
  master-kubernetes-e2e:
    working_directory: /go/src/github.com/Azure/acs-engine
    no_output_timeout: "30m"
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: |
          echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
          echo 'export BUILD_NUM=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
          echo 'export RESOURCE_GROUP_PREFIX=y' >> $BASH_ENV
          echo 'export SKIP_METRICS=y' >> $BASH_ENV
          echo 'export STAGE_TIMEOUT_MIN=30' >> $BASH_ENV
          echo 'export NUM_OF_RETRIES=2' >> $BASH_ENV
          echo 'export SUBSCRIPTION_ID=${SUBSCRIPTION_ID_E2E_KUBERNETES}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_KUBERNETES}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_KUBERNETES}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_KUBERNETES}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_KUBERNETES}' >> $BASH_ENV
          echo 'export TEST_CONFIG=test/e2e/kubernetes-deployments.json' >> $BASH_ENV
      - run:
          name: Kubernetes feature validation tests
          command: make bootstrap build test-e2e
      - store_artifacts:
          path: /go/src/github.com/Azure/acs-engine/_logs
  master-swarm-e2e:
    working_directory: /go/src/github.com/Azure/acs-engine
    no_output_timeout: "30m"
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: |
          echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
          echo 'export BUILD_NUM=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
          echo 'export RESOURCE_GROUP_PREFIX=y' >> $BASH_ENV
          echo 'export SKIP_METRICS=y' >> $BASH_ENV
          echo 'export STAGE_TIMEOUT_MIN=30' >> $BASH_ENV
          echo 'export NUM_OF_RETRIES=2' >> $BASH_ENV
          echo 'export SUBSCRIPTION_ID=${SUBSCRIPTION_ID_E2E_SWARM}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_SWARM}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_SWARM}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_SWARM}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_SWARM}' >> $BASH_ENV
          echo 'export TEST_CONFIG=test/e2e/swarm-deployments.json' >> $BASH_ENV
      - run:
          name: Swarm feature validation tests
          command: make bootstrap build test-e2e
      - store_artifacts:
          path: /go/src/github.com/Azure/acs-engine/_logs
  master-dcos-e2e:
    working_directory: /go/src/github.com/Azure/acs-engine
    no_output_timeout: "30m"
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: |
          echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
          echo 'export BUILD_NUM=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
          echo 'export RESOURCE_GROUP_PREFIX=y' >> $BASH_ENV
          echo 'export SKIP_METRICS=y' >> $BASH_ENV
          echo 'export STAGE_TIMEOUT_MIN=30' >> $BASH_ENV
          echo 'export NUM_OF_RETRIES=2' >> $BASH_ENV
          echo 'export SUBSCRIPTION_ID=${SUBSCRIPTION_ID_E2E_DCOS}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_DCOS}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_DCOS}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_DCOS}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_DCOS}' >> $BASH_ENV
          echo 'export TEST_CONFIG=test/e2e/dcos-deployments.json' >> $BASH_ENV
      - run:
          name: DC/OS feature validation tests
          command: make bootstrap build test-e2e
      - store_artifacts:
          path: /go/src/github.com/Azure/acs-engine/_logs
  master-swarmmode-e2e:
    working_directory: /go/src/github.com/Azure/acs-engine
    no_output_timeout: "30m"
    docker:
      - image: microsoft/acs-engine:latest
        environment:
          GOPATH: /go
    steps:
      - checkout
      - run: |
          echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
          echo 'export BUILD_NUM=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
          echo 'export RESOURCE_GROUP_PREFIX=y' >> $BASH_ENV
          echo 'export SKIP_METRICS=y' >> $BASH_ENV
          echo 'export STAGE_TIMEOUT_MIN=30' >> $BASH_ENV
          echo 'export NUM_OF_RETRIES=2' >> $BASH_ENV
          echo 'export SUBSCRIPTION_ID=${SUBSCRIPTION_ID_E2E_SWARMMODE}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_SWARMMODE}' >> $BASH_ENV
          echo 'export SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_SWARMMODE}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_ID=${SERVICE_PRINCIPAL_CLIENT_ID_E2E_SWARMMODE}' >> $BASH_ENV
          echo 'export CLUSTER_SERVICE_PRINCIPAL_CLIENT_SECRET=${SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_SWARMMODE}' >> $BASH_ENV
          echo 'export TEST_CONFIG=test/e2e/swarmmode-deployments.json' >> $BASH_ENV
      - run:
          name: Swarm Mode feature validation tests
          command: make bootstrap build test-e2e
      - store_artifacts:
          path: /go/src/github.com/Azure/acs-engine/_logs
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - e2e-hold:
          type: approval
      - e2e:
          requires:
            - e2e-hold
          filters:
            branches:
              ignore: /master/
      - master-kubernetes-e2e:
          requires:
            - test
          filters:
            branches:
              only: increase-feature-e2e-timeout
      - master-swarm-e2e:
          requires:
            - test
          filters:
            branches:
              only: increase-feature-e2e-timeout
      - master-dcos-e2e:
          requires:
            - test
          filters:
            branches:
              only: increase-feature-e2e-timeout
      - master-swarmmode-e2e:
          requires:
            - test
          filters:
            branches:
              only: increase-feature-e2e-timeout


{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agentpri2Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri2Subnet": {
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri2'."
      },
      "type": "string"
    },
    "agentpri2VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64ms",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpriCount": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpriSubnet": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri'."
      },
      "type": "string"
    },
    "agentpriVMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64ms",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "dcosBootstrapURL": {
      "defaultValue": "https://dcosio.azureedge.net/dcos/stable/bootstrap/58fd0833ce81b6244fc73bf65b5deb43217b0bd7.bootstrap.tar.xz",
      "metadata": {
        "description": "The default mesosphere bootstrap package."
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "172.16.0.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterSubnet": {
      "defaultValue": "172.16.0.0/24",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F8",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64ms",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "25033075",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzurePublicCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
      },
      "type": "string"
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "agentpri2Count": "[parameters('agentpri2Count')]",
    "agentpri2NSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentpri2NSGName'))]",
    "agentpri2NSGName": "[concat(variables('orchestratorName'), '-agentpri2-nsg-', variables('nameSuffix'))]",
    "agentpri2Subnet": "[parameters('agentpri2Subnet')]",
    "agentpri2SubnetName": "[concat(variables('orchestratorName'), '-agentpri2Subnet')]",
    "agentpri2VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri2-', variables('nameSuffix'))]",
    "agentpri2VMSize": "[parameters('agentpri2VMSize')]",
    "agentpri2VMSizeTier": "[split(parameters('agentpri2VMSize'),'_')[0]]",
    "agentpri2VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri2SubnetName'))]",
    "agentpriCount": "[parameters('agentpriCount')]",
    "agentpriNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentpriNSGName'))]",
    "agentpriNSGName": "[concat(variables('orchestratorName'), '-agentpri-nsg-', variables('nameSuffix'))]",
    "agentpriSubnet": "[parameters('agentpriSubnet')]",
    "agentpriSubnetName": "[concat(variables('orchestratorName'), '-agentpriSubnet')]",
    "agentpriVMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri-', variables('nameSuffix'))]",
    "agentpriVMSize": "[parameters('agentpriVMSize')]",
    "agentpriVMSizeTier": "[split(parameters('agentpriVMSize'),'_')[0]]",
    "agentpriVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpriSubnetName'))]",
    "apiVersionDefault": "2016-03-30",
    "apiVersionStorage": "2015-06-15",
    "apiVersionStorageManagedDisks": "2016-04-30-preview",
    "dcosBootstrapURL": "[parameters('dcosBootstrapURL')]",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterCount": 1,
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterHttpSourceAddressPrefix": "*",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbInboundNatRules": [
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'0')]"
        },
        {
          "id": "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'1')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'2')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'3')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'4')]"
        }
      ]
    ],
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
    "masterNSGName": "[concat(variables('orchestratorName'), '-master-nsg-', variables('nameSuffix'))]",
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "masterSshInboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterStorageAccountExhibitorName": "[concat(variables('storageAccountBaseName'), 'exhb0')]",
    "masterSubnet": "[parameters('masterSubnet')]",
    "masterSubnetName": "[concat(variables('orchestratorName'), '-masterSubnet')]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMNic": [
      "[concat(variables('masterVMNamePrefix'), 'nic-0')]",
      "[concat(variables('masterVMNamePrefix'), 'nic-1')]",
      "[concat(variables('masterVMNamePrefix'), 'nic-2')]",
      "[concat(variables('masterVMNamePrefix'), 'nic-3')]",
      "[concat(variables('masterVMNamePrefix'), 'nic-4')]",
      "[concat(variables('masterVMNamePrefix'), 'nic-5')]",
      "[concat(variables('masterVMNamePrefix'), 'nic-6')]"
    ],
    "masterVMSize": "[parameters('masterVMSize')]",
    "masterVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('masterSubnetName'))]",
    "maxVMsPerPool": 100,
    "nameSuffix": "[parameters('nameSuffix')]",
    "oauthEnabled": "false",
    "orchestratorName": "dcos",
    "osImageOffer": "UbuntuServer",
    "osImagePublisher": "Canonical",
    "osImageSKU": "16.04-LTS",
    "osImageVersion": "16.04.201706191",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterEndpointDNSNamePrefix'),variables('location'),variables('orchestratorName')))]",
    "storageAccountPrefixes": [],
    "storageAccountType": "Standard_LRS",
    "targetEnvironment": "[parameters('targetEnvironment')]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpriNSGName')]",
      "properties": {
        "securityRules": []
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpriVMNamePrefix'), '-vmss')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpriVnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": "true"
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[variables('adminUsername')]",
            "computerNamePrefix": "[variables('agentpriVMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\n', '{\"bootcmd\":[\"bash -c \\\"if [ ! -f /var/lib/sdb-gpt ];then echo DCOS-5890;parted -s /dev/sdb mklabel gpt;touch /var/lib/sdb-gpt;fi\\\"\"],\"disk_setup\":{\"ephemeral0\":{\"layout\":[45,45,10],\"overwrite\":true,\"table_type\":\"gpt\"}},\"fs_setup\":[{\"device\":\"ephemeral0.1\",\"filesystem\":\"ext4\",\"overwrite\":true},{\"device\":\"ephemeral0.2\",\"filesystem\":\"ext4\",\"overwrite\":true},{\"device\":\"ephemeral0.3\",\"filesystem\":\"ext4\",\"overwrite\":true}],\"mounts\":[[\"ephemeral0.1\",\"/var/lib/mesos\"],[\"ephemeral0.2\",\"/var/lib/docker\"],[\"ephemeral0.3\",\"/var/tmp\"]],\"runcmd\":[\"/usr/lib/apt/apt.systemd.daily\",\"echo 2dd1ce17-079e-403c-b352-a1921ee207ee \\u003e /sys/bus/vmbus/drivers/hv_util/unbind\",\"sed -i \\\"13i\\\\echo 2dd1ce17-079e-403c-b352-a1921ee207ee \\u003e /sys/bus/vmbus/drivers/hv_util/unbind\\\\n\\\" /etc/rc.local\",[\"ln\",\"-s\",\"/bin/rm\",\"/usr/bin/rm\"],[\"ln\",\"-s\",\"/bin/mkdir\",\"/usr/bin/mkdir\"],[\"ln\",\"-s\",\"/bin/tar\",\"/usr/bin/tar\"],[\"ln\",\"-s\",\"/bin/ln\",\"/usr/bin/ln\"],[\"ln\",\"-s\",\"/bin/cp\",\"/usr/bin/cp\"],[\"ln\",\"-s\",\"/bin/systemctl\",\"/usr/bin/systemctl\"],[\"ln\",\"-s\",\"/bin/mount\",\"/usr/bin/mount\"],[\"ln\",\"-s\",\"/bin/bash\",\"/usr/bin/bash\"],[\"ln\",\"-s\",\"/usr/sbin/useradd\",\"/usr/bin/useradd\"],[\"systemctl\",\"disable\",\"--now\",\"resolvconf.service\"],[\"systemctl\",\"mask\",\"--now\",\"lxc-net.service\"],[\"systemctl\",\"disable\",\"--now\",\"unscd.service\"],[\"systemctl\",\"stop\",\"--now\",\"unscd.service\"],\"sed -i \\\"s/^Port 22$/Port 22\\\\nPort 2222/1\\\" /etc/ssh/sshd_config\",\"service ssh restart\",\"/opt/azure/containers/provision.sh\",[\"cp\",\"-p\",\"/etc/resolv.conf\",\"/tmp/resolv.conf\"],[\"rm\",\"-f\",\"/etc/resolv.conf\"],[\"cp\",\"-p\",\"/tmp/resolv.conf\",\"/etc/resolv.conf\"],[\"systemctl\",\"start\",\"dcos-docker-install.service\"],[\"systemctl\",\"start\",\"dcos-config-writer.service\"],[\"systemctl\",\"restart\",\"systemd-journald.service\"],[\"systemctl\",\"restart\",\"docker.service\"],[\"systemctl\",\"start\",\"dcos-link-env.service\"],[\"systemctl\",\"enable\",\"dcos-setup.service\"],[\"systemctl\",\"--no-block\",\"start\",\"dcos-setup.service\"],\"/opt/azure/containers/add_admin_to_docker_group.sh\"],\"write_files\":[{\"content\":\"https://dcosio.azureedge.net/dcos/stable\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/repository-url\",\"permissions\":\"0644\"},{\"content\":\"[\\\"3dt--7847ebb24bf6756c3103902971b34c3f09c3afbd\\\", \\\"adminrouter--0493a6fdaed08e1971871818e194aa4607df4f09\\\", \\\"avro-cpp--760c214063f6b038b522eaf4b768b905fed56ebc\\\", \\\"boost-libs--2015ccb58fb756f61c02ee6aa05cc1e27459a9ec\\\", \\\"bootstrap--59a905ecee27e71168ed44cefda4481fb76b816d\\\", \\\"boto--6344d31eef082c7bd13259b17034ea7b5c34aedf\\\", \\\"check-time--be7d0ba757ec87f9965378fee7c76a6ee5ae996d\\\", \\\"cni--e48337da39a8cd379414acfe0da52a9226a10d24\\\", \\\"cosmos--20decef90f0623ed253a12ec4cf5c148b18d8249\\\", \\\"curl--fc3486c43f98e63f9b12675f1356e8fe842f26b0\\\", \\\"dcos-config--setup_bcc883b7a3191412cf41824bdee06c1142187a0b\\\", \\\"dcos-history--77b0e97d7b25c8bedf8f7da0689cac65b83e3813\\\", \\\"dcos-image--bda6a02bcb2eb21c4218453a870cc584f921a800\\\", \\\"dcos-image-deps--83584fd868e5b470f7cf754424a9a75b328e9b68\\\", \\\"dcos-integration-test--c28bcb2347799dca43083f55e4c7b28503176f9c\\\", \\\"dcos-log--4d630df863228f38c6333e44670b4c4b20a74832\\\", \\\"dcos-metadata--setup_bcc883b7a3191412cf41824bdee06c1142187a0b\\\", \\\"dcos-metrics--23ee2f89c58b1258bc959f1d0dd7debcbb3d79d2\\\", \\\"dcos-oauth--0079529da183c0f23a06d2b069721b6fa6cc7b52\\\", \\\"dcos-signal--1bcd3b612cbdc379380dcba17cdf9a3b6652d9dc\\\", \\\"dcos-ui--d4afd695796404a5b35950c3daddcae322481ac4\\\", \\\"dnspython--0f833eb9a8abeba3179b43f3a200a8cd42d3795a\\\", \\\"docker-gc--59a98ed6446a084bf74e4ff4b8e3479f59ea8528\\\", \\\"dvdcli--5374dd4ffb519f1dcefdec89b2247e3404f2e2e3\\\", \\\"erlang--a9ee2530357a3301e53056b36a93420847b339a3\\\", \\\"exhibitor--72d9d8f947e5411eda524d40dde1a58edeb158ed\\\", \\\"flask--26d1bcdb2d1c3dcf1d2c03bc0d4f29c86d321b21\\\", \\\"java--cd5e921ce66b0d3303883c06d73a657314044304\\\", \\\"libevent--208be855d2be29c9271a7bd6c04723ff79946e02\\\", \\\"libffi--83ce3bd7eda2ef089e57efd2bc16c144d5a1f094\\\", \\\"libsodium--9ff915db08c6bba7d6738af5084e782b13c84bf8\\\", \\\"logrotate--7f7bc4416d3ad101d0c5218872858483b516be07\\\", \\\"marathon--bfb24f7f90cb3cd52a1cb22a07caafa5013bba21\\\", \\\"mesos--aaedd03eee0d57f5c0d49c74ff1e5721862cad98\\\", \\\"mesos-dns--0401501b2b5152d01bfa84ff6d007fdafe414b16\\\", \\\"mesos-modules--311849eaae42696b8a7eefe86b9ab3ebd9bd48f5\\\", \\\"metronome--467e4c64f804dbd4cd8572516e111a3f9298c10d\\\", \\\"navstar--1128db0234105a64fb4be52f4453cd6aa895ff30\\\", \\\"ncurses--d889894b71aa1a5b311bafef0e85479025b4dacb\\\", \\\"octarine--e86d3312691b12523280d56f6260216729aaa0ad\\\", \\\"openssl--b01a32a42e3ccba52b417276e9509a441e1d4a82\\\", \\\"pkgpanda-api--541feb8a8be58bdde8fecf1d2e5bfa0515f5a7d0\\\", \\\"pkgpanda-role--f8a749a4a821476ad2ef7e9dd9d12b6a8c4643a4\\\", \\\"pytest--78aee3e58a049cdab0d266af74f77d658b360b4f\\\", \\\"python--b7a144a49577a223d37d447c568f51330ee95390\\\", \\\"python-azure-mgmt-resource--03c05550f43b0e7a4455c33fe43b0deb755d87f0\\\", \\\"python-cryptography--4184767c68e48801dd394072cb370c610a05029d\\\", \\\"python-dateutil--fdc6ff929f65dd0918cf75a9ad56704683d31781\\\", \\\"python-docopt--beba78faa13e5bf4c52393b4b82d81f3c391aa65\\\", \\\"python-gunicorn--a537f95661fb2689c52fe12510eb0d01cb83af60\\\", \\\"python-isodate--40d378c688e6badfd16676dd8b51b742bfebc8d5\\\", \\\"python-jinja2--7450f5ae5a822f63f7a58c717207be0456df51ed\\\", \\\"python-kazoo--cb7ce13a1068cd82dd84ea0de32b529a760a4bdd\\\", \\\"python-markupsafe--dd46d2a3c58611656a235f96d4adc51b2a7a590e\\\", \\\"python-passlib--802ec3605c0b82428fedba60983b1bafaa036bb8\\\", \\\"python-pyyaml--81dd44cc4a24db7cefa7016c6586a131acf279c3\\\", \\\"python-requests--1b2cadbd3811cc0c2ee235ce927e13ea1d6af41d\\\", \\\"python-retrying--eb7b8bac133f50492b1e1349cbe77c3e38bd02c3\\\", \\\"python-tox--07244f8a939a10353634c952c6d88ec4a3c05736\\\", \\\"rexray--869621bb411c9f2a793ea42cdfeed489e1972aaa\\\", \\\"six--f06424b68523c4dfa2a7c3e7475d479f3d361e42\\\", \\\"spartan--9cc57a3d55452b905d90e3201f56913140914ecc\\\", \\\"strace--7d01796d64994451c1b2b82d161a335cbe90569b\\\", \\\"teamcity-messages--e623a4d86eb3a8d199cefcc240dd4c5460cb2962\\\", \\\"toybox--f235594ab8ea9a2864ee72abe86723d76f92e848\\\"]\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/cluster-packages.json\",\"permissions\":\"0644\"},{\"content\":\"[Journal]\\nMaxLevelConsole=warning\\nRateLimitInterval=1s\\nRateLimitBurst=20000\\n\",\"owner\":\"root\",\"path\":\"/etc/systemd/journald.conf.d/dcos.conf\",\"permissions\":\"0644\"},{\"content\":\"rexray:\\n  loglevel: info\\n  modules:\\n    default-admin:\\n      host: tcp://127.0.0.1:61003\\n    default-docker:\\n      disabled: true\\n\",\"path\":\"/etc/rexray/config.yml\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nAfter=network-online.target\\nWants=network-online.target\\n[Service]\\nType=oneshot\\nEnvironment=DEBIAN_FRONTEND=noninteractive\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/curl -fLsSv --retry 20 -Y 100000 -y 60 -o /var/tmp/d.deb https://az837203.vo.msecnd.net/dcos-deps/docker-engine_1.13.1-0-ubuntu-xenial_amd64.deb\\nExecStart=/usr/bin/bash -c \\\"try=1;until dpkg -D3 -i /var/tmp/d.deb || ((try\\u003e9));do echo retry $((try++));sleep $((try*try));done;systemctl --now start docker;systemctl restart docker.socket\\\"\\n\",\"path\":\"/etc/systemd/system/dcos-docker-install.service\",\"permissions\":\"0644\"},{\"content\":\"[Service]\\nRestart=always\\nStartLimitInterval=0\\nRestartSec=15\\nLimitNOFILE=16384\\nExecStartPre=-/sbin/ip link del docker0\\nExecStart=\\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay\\n\",\"path\":\"/etc/systemd/system/docker.service.d/execstart.conf\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nRequires=dcos-setup.service\\nAfter=dcos-setup.service\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/environment\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/usr/bin/bash -c \\\"echo $(detect_ip) $(hostname) \\u003e /etc/hosts\\\"\\n\",\"path\":\"/etc/systemd/system/dcos-config-writer.service\",\"permissions\":\"0644\"},{\"content\":\"\\\"bound_values\\\":\\n  \\\"adminrouter_auth_enabled\\\": |-\\n    ',variables('oauthEnabled'),'\\n  \\\"cluster_name\\\": |-\\n    ',variables('masterPublicIPAddressName'),'\\n  \\\"exhibitor_azure_account_key\\\": |-\\n    ', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('masterStorageAccountExhibitorName')), '2015-06-15').key1, '\\n  \\\"exhibitor_azure_account_name\\\": |-\\n    ',variables('masterStorageAccountExhibitorName'),'\\n  \\\"exhibitor_azure_prefix\\\": |-\\n    ',variables('masterPublicIPAddressName'),'\\n  \\\"master_list\\\": |-\\n    [\\\"', reference(variables('masterVMNic')[0]).ipConfigurations[0].properties.privateIPAddress,'\\\"]\\n  \\\"oauth_enabled\\\": |-\\n    ',variables('oauthEnabled'),'\\n\\\"late_bound_package_id\\\": |-\\n  dcos-provider-bcc883b7a3191412cf41824bdee06c1142187a0b-azure--setup\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/late-config.yaml\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nBefore=dcos.target\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/mkdir -p /etc/profile.d\\nExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh /etc/profile.d/dcos.sh\\n\",\"path\":\"/etc/systemd/system/dcos-link-env.service\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nDescription=Pkgpanda: Download DC/OS to this host.\\nAfter=network-online.target\\nWants=network-online.target\\nConditionPathExists=!/opt/mesosphere/\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o //var/tmp/bootstrap.tar.xz ',variables('dcosBootstrapURL'),'\\nExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\\nExecStart=/usr/bin/tar -axf //var/tmp/bootstrap.tar.xz -C /opt/mesosphere\\nExecStartPost=-/usr/bin/rm -f //var/tmp/bootstrap.tar.xz\\n\",\"path\":\"/etc/systemd/system/dcos-download.service\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nDescription=Pkgpanda: Specialize DC/OS for this host.\\nRequires=dcos-download.service\\nAfter=dcos-download.service\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\\n[Install]\\nWantedBy=multi-user.target\\n\",\"path\":\"/etc/systemd/system/dcos-setup.service\",\"permissions\":\"0644\"},{\"content\":\"\",\"path\":\"/etc/mesosphere/roles/azure\"},{\"content\":\"#!/bin/bash\\n\\n\\nMESOSDIR=/var/lib/mesos/dl\\nmkdir $MESOSDIR\\n\\n\\n# load the env vars\\n. /etc/mesosphere/setup-flags/dcos-deploy-environment\\n\\n\\n# default dc/os component download address (Azure CDN)\\nDOCKER_ENGINE_DOWNLOAD_URL=https://mesosphere.blob.core.windows.net/dcos-deps/docker-engine_1.13.1-0-ubuntu-xenial_amd64.deb\\nLIBIPSET_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/libipset3_6.29-1_amd64.deb\\nIPSET_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/ipset_6.29-1_amd64.deb\\nUNZIP_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/unzip_6.0-20ubuntu1_amd64.deb\\nLIBLTDL_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/libltdl7_2.4.6-0.1_amd64.deb\\n\\n\\ncase $DCOS_ENVIRONMENT in\\n# because of Chinese GreatWall Firewall, the default packages on Azure CDN is blocked. So the following Chinese local mirror url should be used instead.\\nAzureChinaCloud)\\nDOCKER_ENGINE_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/docker-engine_1.11.2-0~xenial_amd64.deb\\nLIBIPSET_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/libipset3_6.29-1_amd64.deb\\nIPSET_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/ipset_6.29-1_amd64.deb\\nUNZIP_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/unzip_6.0-20ubuntu1_amd64.deb\\nLIBLTDL_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/libltdl7_2.4.6-0.1_amd64.deb\\n;;\\nesac\\n\\n\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/d.deb $DOCKER_ENGINE_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/1.deb $LIBIPSET_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/2.deb $IPSET_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/3.deb $UNZIP_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/4.deb $LIBLTDL_DOWNLOAD_URL \\u0026\\nwait\\n\\n\\nfor i in {1..300}; do\\ndpkg -i $MESOSDIR/{1,2,3,4}.deb\\nif [ \\\"$?\\\" = \\\"0\\\" ]\\nthen\\necho \\\"succeeded\\\"\\nbreak\\nfi\\nsleep 1\\ndone\\n\\n\\ntouch /etc/mesosphere/roles/slave\\n\",\"owner\":\"root\",\"path\":\"/opt/azure/containers/provision.sh\",\"permissions\":\"0744\"},{\"content\":\"\",\"owner\":\"root\",\"path\":\"/var/lib/dcos/mesos-slave-common\",\"permissions\":\"0644\"},{\"content\":\"#!/bin/bash\\nadduser ',variables('adminUsername'),' docker\\n\",\"owner\":\"root\",\"path\":\"/opt/azure/containers/add_admin_to_docker_group.sh\",\"permissions\":\"0744\"}]}'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "offer": "[variables('osImageOffer')]",
              "publisher": "[variables('osImagePublisher')]",
              "sku": "[variables('osImageSKU')]",
              "version": "[variables('osImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": "[variables('agentpriCount')]",
        "name": "[variables('agentpriVMSize')]",
        "tier": "[variables('agentpriVMSizeTier')]"
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpriVMNamePrefix'), '-vmss')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri2NSGName')]",
      "properties": {
        "securityRules": []
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri2VMNamePrefix'), '-vmss')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agentpri2VnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": "true"
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[variables('adminUsername')]",
            "computerNamePrefix": "[variables('agentpri2VMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\n', '{\"bootcmd\":[\"bash -c \\\"if [ ! -f /var/lib/sdb-gpt ];then echo DCOS-5890;parted -s /dev/sdb mklabel gpt;touch /var/lib/sdb-gpt;fi\\\"\"],\"disk_setup\":{\"ephemeral0\":{\"layout\":[45,45,10],\"overwrite\":true,\"table_type\":\"gpt\"}},\"fs_setup\":[{\"device\":\"ephemeral0.1\",\"filesystem\":\"ext4\",\"overwrite\":true},{\"device\":\"ephemeral0.2\",\"filesystem\":\"ext4\",\"overwrite\":true},{\"device\":\"ephemeral0.3\",\"filesystem\":\"ext4\",\"overwrite\":true}],\"mounts\":[[\"ephemeral0.1\",\"/var/lib/mesos\"],[\"ephemeral0.2\",\"/var/lib/docker\"],[\"ephemeral0.3\",\"/var/tmp\"]],\"runcmd\":[\"/usr/lib/apt/apt.systemd.daily\",\"echo 2dd1ce17-079e-403c-b352-a1921ee207ee \\u003e /sys/bus/vmbus/drivers/hv_util/unbind\",\"sed -i \\\"13i\\\\echo 2dd1ce17-079e-403c-b352-a1921ee207ee \\u003e /sys/bus/vmbus/drivers/hv_util/unbind\\\\n\\\" /etc/rc.local\",[\"ln\",\"-s\",\"/bin/rm\",\"/usr/bin/rm\"],[\"ln\",\"-s\",\"/bin/mkdir\",\"/usr/bin/mkdir\"],[\"ln\",\"-s\",\"/bin/tar\",\"/usr/bin/tar\"],[\"ln\",\"-s\",\"/bin/ln\",\"/usr/bin/ln\"],[\"ln\",\"-s\",\"/bin/cp\",\"/usr/bin/cp\"],[\"ln\",\"-s\",\"/bin/systemctl\",\"/usr/bin/systemctl\"],[\"ln\",\"-s\",\"/bin/mount\",\"/usr/bin/mount\"],[\"ln\",\"-s\",\"/bin/bash\",\"/usr/bin/bash\"],[\"ln\",\"-s\",\"/usr/sbin/useradd\",\"/usr/bin/useradd\"],[\"systemctl\",\"disable\",\"--now\",\"resolvconf.service\"],[\"systemctl\",\"mask\",\"--now\",\"lxc-net.service\"],[\"systemctl\",\"disable\",\"--now\",\"unscd.service\"],[\"systemctl\",\"stop\",\"--now\",\"unscd.service\"],\"sed -i \\\"s/^Port 22$/Port 22\\\\nPort 2222/1\\\" /etc/ssh/sshd_config\",\"service ssh restart\",\"/opt/azure/containers/provision.sh\",[\"cp\",\"-p\",\"/etc/resolv.conf\",\"/tmp/resolv.conf\"],[\"rm\",\"-f\",\"/etc/resolv.conf\"],[\"cp\",\"-p\",\"/tmp/resolv.conf\",\"/etc/resolv.conf\"],[\"systemctl\",\"start\",\"dcos-docker-install.service\"],[\"systemctl\",\"start\",\"dcos-config-writer.service\"],[\"systemctl\",\"restart\",\"systemd-journald.service\"],[\"systemctl\",\"restart\",\"docker.service\"],[\"systemctl\",\"start\",\"dcos-link-env.service\"],[\"systemctl\",\"enable\",\"dcos-setup.service\"],[\"systemctl\",\"--no-block\",\"start\",\"dcos-setup.service\"],\"/opt/azure/containers/add_admin_to_docker_group.sh\"],\"write_files\":[{\"content\":\"https://dcosio.azureedge.net/dcos/stable\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/repository-url\",\"permissions\":\"0644\"},{\"content\":\"[\\\"3dt--7847ebb24bf6756c3103902971b34c3f09c3afbd\\\", \\\"adminrouter--0493a6fdaed08e1971871818e194aa4607df4f09\\\", \\\"avro-cpp--760c214063f6b038b522eaf4b768b905fed56ebc\\\", \\\"boost-libs--2015ccb58fb756f61c02ee6aa05cc1e27459a9ec\\\", \\\"bootstrap--59a905ecee27e71168ed44cefda4481fb76b816d\\\", \\\"boto--6344d31eef082c7bd13259b17034ea7b5c34aedf\\\", \\\"check-time--be7d0ba757ec87f9965378fee7c76a6ee5ae996d\\\", \\\"cni--e48337da39a8cd379414acfe0da52a9226a10d24\\\", \\\"cosmos--20decef90f0623ed253a12ec4cf5c148b18d8249\\\", \\\"curl--fc3486c43f98e63f9b12675f1356e8fe842f26b0\\\", \\\"dcos-config--setup_bcc883b7a3191412cf41824bdee06c1142187a0b\\\", \\\"dcos-history--77b0e97d7b25c8bedf8f7da0689cac65b83e3813\\\", \\\"dcos-image--bda6a02bcb2eb21c4218453a870cc584f921a800\\\", \\\"dcos-image-deps--83584fd868e5b470f7cf754424a9a75b328e9b68\\\", \\\"dcos-integration-test--c28bcb2347799dca43083f55e4c7b28503176f9c\\\", \\\"dcos-log--4d630df863228f38c6333e44670b4c4b20a74832\\\", \\\"dcos-metadata--setup_bcc883b7a3191412cf41824bdee06c1142187a0b\\\", \\\"dcos-metrics--23ee2f89c58b1258bc959f1d0dd7debcbb3d79d2\\\", \\\"dcos-oauth--0079529da183c0f23a06d2b069721b6fa6cc7b52\\\", \\\"dcos-signal--1bcd3b612cbdc379380dcba17cdf9a3b6652d9dc\\\", \\\"dcos-ui--d4afd695796404a5b35950c3daddcae322481ac4\\\", \\\"dnspython--0f833eb9a8abeba3179b43f3a200a8cd42d3795a\\\", \\\"docker-gc--59a98ed6446a084bf74e4ff4b8e3479f59ea8528\\\", \\\"dvdcli--5374dd4ffb519f1dcefdec89b2247e3404f2e2e3\\\", \\\"erlang--a9ee2530357a3301e53056b36a93420847b339a3\\\", \\\"exhibitor--72d9d8f947e5411eda524d40dde1a58edeb158ed\\\", \\\"flask--26d1bcdb2d1c3dcf1d2c03bc0d4f29c86d321b21\\\", \\\"java--cd5e921ce66b0d3303883c06d73a657314044304\\\", \\\"libevent--208be855d2be29c9271a7bd6c04723ff79946e02\\\", \\\"libffi--83ce3bd7eda2ef089e57efd2bc16c144d5a1f094\\\", \\\"libsodium--9ff915db08c6bba7d6738af5084e782b13c84bf8\\\", \\\"logrotate--7f7bc4416d3ad101d0c5218872858483b516be07\\\", \\\"marathon--bfb24f7f90cb3cd52a1cb22a07caafa5013bba21\\\", \\\"mesos--aaedd03eee0d57f5c0d49c74ff1e5721862cad98\\\", \\\"mesos-dns--0401501b2b5152d01bfa84ff6d007fdafe414b16\\\", \\\"mesos-modules--311849eaae42696b8a7eefe86b9ab3ebd9bd48f5\\\", \\\"metronome--467e4c64f804dbd4cd8572516e111a3f9298c10d\\\", \\\"navstar--1128db0234105a64fb4be52f4453cd6aa895ff30\\\", \\\"ncurses--d889894b71aa1a5b311bafef0e85479025b4dacb\\\", \\\"octarine--e86d3312691b12523280d56f6260216729aaa0ad\\\", \\\"openssl--b01a32a42e3ccba52b417276e9509a441e1d4a82\\\", \\\"pkgpanda-api--541feb8a8be58bdde8fecf1d2e5bfa0515f5a7d0\\\", \\\"pkgpanda-role--f8a749a4a821476ad2ef7e9dd9d12b6a8c4643a4\\\", \\\"pytest--78aee3e58a049cdab0d266af74f77d658b360b4f\\\", \\\"python--b7a144a49577a223d37d447c568f51330ee95390\\\", \\\"python-azure-mgmt-resource--03c05550f43b0e7a4455c33fe43b0deb755d87f0\\\", \\\"python-cryptography--4184767c68e48801dd394072cb370c610a05029d\\\", \\\"python-dateutil--fdc6ff929f65dd0918cf75a9ad56704683d31781\\\", \\\"python-docopt--beba78faa13e5bf4c52393b4b82d81f3c391aa65\\\", \\\"python-gunicorn--a537f95661fb2689c52fe12510eb0d01cb83af60\\\", \\\"python-isodate--40d378c688e6badfd16676dd8b51b742bfebc8d5\\\", \\\"python-jinja2--7450f5ae5a822f63f7a58c717207be0456df51ed\\\", \\\"python-kazoo--cb7ce13a1068cd82dd84ea0de32b529a760a4bdd\\\", \\\"python-markupsafe--dd46d2a3c58611656a235f96d4adc51b2a7a590e\\\", \\\"python-passlib--802ec3605c0b82428fedba60983b1bafaa036bb8\\\", \\\"python-pyyaml--81dd44cc4a24db7cefa7016c6586a131acf279c3\\\", \\\"python-requests--1b2cadbd3811cc0c2ee235ce927e13ea1d6af41d\\\", \\\"python-retrying--eb7b8bac133f50492b1e1349cbe77c3e38bd02c3\\\", \\\"python-tox--07244f8a939a10353634c952c6d88ec4a3c05736\\\", \\\"rexray--869621bb411c9f2a793ea42cdfeed489e1972aaa\\\", \\\"six--f06424b68523c4dfa2a7c3e7475d479f3d361e42\\\", \\\"spartan--9cc57a3d55452b905d90e3201f56913140914ecc\\\", \\\"strace--7d01796d64994451c1b2b82d161a335cbe90569b\\\", \\\"teamcity-messages--e623a4d86eb3a8d199cefcc240dd4c5460cb2962\\\", \\\"toybox--f235594ab8ea9a2864ee72abe86723d76f92e848\\\"]\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/cluster-packages.json\",\"permissions\":\"0644\"},{\"content\":\"[Journal]\\nMaxLevelConsole=warning\\nRateLimitInterval=1s\\nRateLimitBurst=20000\\n\",\"owner\":\"root\",\"path\":\"/etc/systemd/journald.conf.d/dcos.conf\",\"permissions\":\"0644\"},{\"content\":\"rexray:\\n  loglevel: info\\n  modules:\\n    default-admin:\\n      host: tcp://127.0.0.1:61003\\n    default-docker:\\n      disabled: true\\n\",\"path\":\"/etc/rexray/config.yml\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nAfter=network-online.target\\nWants=network-online.target\\n[Service]\\nType=oneshot\\nEnvironment=DEBIAN_FRONTEND=noninteractive\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/curl -fLsSv --retry 20 -Y 100000 -y 60 -o /var/tmp/d.deb https://az837203.vo.msecnd.net/dcos-deps/docker-engine_1.13.1-0-ubuntu-xenial_amd64.deb\\nExecStart=/usr/bin/bash -c \\\"try=1;until dpkg -D3 -i /var/tmp/d.deb || ((try\\u003e9));do echo retry $((try++));sleep $((try*try));done;systemctl --now start docker;systemctl restart docker.socket\\\"\\n\",\"path\":\"/etc/systemd/system/dcos-docker-install.service\",\"permissions\":\"0644\"},{\"content\":\"[Service]\\nRestart=always\\nStartLimitInterval=0\\nRestartSec=15\\nLimitNOFILE=16384\\nExecStartPre=-/sbin/ip link del docker0\\nExecStart=\\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay\\n\",\"path\":\"/etc/systemd/system/docker.service.d/execstart.conf\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nRequires=dcos-setup.service\\nAfter=dcos-setup.service\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/environment\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/usr/bin/bash -c \\\"echo $(detect_ip) $(hostname) \\u003e /etc/hosts\\\"\\n\",\"path\":\"/etc/systemd/system/dcos-config-writer.service\",\"permissions\":\"0644\"},{\"content\":\"\\\"bound_values\\\":\\n  \\\"adminrouter_auth_enabled\\\": |-\\n    ',variables('oauthEnabled'),'\\n  \\\"cluster_name\\\": |-\\n    ',variables('masterPublicIPAddressName'),'\\n  \\\"exhibitor_azure_account_key\\\": |-\\n    ', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('masterStorageAccountExhibitorName')), '2015-06-15').key1, '\\n  \\\"exhibitor_azure_account_name\\\": |-\\n    ',variables('masterStorageAccountExhibitorName'),'\\n  \\\"exhibitor_azure_prefix\\\": |-\\n    ',variables('masterPublicIPAddressName'),'\\n  \\\"master_list\\\": |-\\n    [\\\"', reference(variables('masterVMNic')[0]).ipConfigurations[0].properties.privateIPAddress,'\\\"]\\n  \\\"oauth_enabled\\\": |-\\n    ',variables('oauthEnabled'),'\\n\\\"late_bound_package_id\\\": |-\\n  dcos-provider-bcc883b7a3191412cf41824bdee06c1142187a0b-azure--setup\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/late-config.yaml\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nBefore=dcos.target\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/mkdir -p /etc/profile.d\\nExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh /etc/profile.d/dcos.sh\\n\",\"path\":\"/etc/systemd/system/dcos-link-env.service\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nDescription=Pkgpanda: Download DC/OS to this host.\\nAfter=network-online.target\\nWants=network-online.target\\nConditionPathExists=!/opt/mesosphere/\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o //var/tmp/bootstrap.tar.xz ',variables('dcosBootstrapURL'),'\\nExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\\nExecStart=/usr/bin/tar -axf //var/tmp/bootstrap.tar.xz -C /opt/mesosphere\\nExecStartPost=-/usr/bin/rm -f //var/tmp/bootstrap.tar.xz\\n\",\"path\":\"/etc/systemd/system/dcos-download.service\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nDescription=Pkgpanda: Specialize DC/OS for this host.\\nRequires=dcos-download.service\\nAfter=dcos-download.service\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\\n[Install]\\nWantedBy=multi-user.target\\n\",\"path\":\"/etc/systemd/system/dcos-setup.service\",\"permissions\":\"0644\"},{\"content\":\"\",\"path\":\"/etc/mesosphere/roles/azure\"},{\"content\":\"#!/bin/bash\\n\\n\\nMESOSDIR=/var/lib/mesos/dl\\nmkdir $MESOSDIR\\n\\n\\n# load the env vars\\n. /etc/mesosphere/setup-flags/dcos-deploy-environment\\n\\n\\n# default dc/os component download address (Azure CDN)\\nDOCKER_ENGINE_DOWNLOAD_URL=https://mesosphere.blob.core.windows.net/dcos-deps/docker-engine_1.13.1-0-ubuntu-xenial_amd64.deb\\nLIBIPSET_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/libipset3_6.29-1_amd64.deb\\nIPSET_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/ipset_6.29-1_amd64.deb\\nUNZIP_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/unzip_6.0-20ubuntu1_amd64.deb\\nLIBLTDL_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/libltdl7_2.4.6-0.1_amd64.deb\\n\\n\\ncase $DCOS_ENVIRONMENT in\\n# because of Chinese GreatWall Firewall, the default packages on Azure CDN is blocked. So the following Chinese local mirror url should be used instead.\\nAzureChinaCloud)\\nDOCKER_ENGINE_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/docker-engine_1.11.2-0~xenial_amd64.deb\\nLIBIPSET_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/libipset3_6.29-1_amd64.deb\\nIPSET_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/ipset_6.29-1_amd64.deb\\nUNZIP_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/unzip_6.0-20ubuntu1_amd64.deb\\nLIBLTDL_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/libltdl7_2.4.6-0.1_amd64.deb\\n;;\\nesac\\n\\n\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/d.deb $DOCKER_ENGINE_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/1.deb $LIBIPSET_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/2.deb $IPSET_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/3.deb $UNZIP_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/4.deb $LIBLTDL_DOWNLOAD_URL \\u0026\\nwait\\n\\n\\nfor i in {1..300}; do\\ndpkg -i $MESOSDIR/{1,2,3,4}.deb\\nif [ \\\"$?\\\" = \\\"0\\\" ]\\nthen\\necho \\\"succeeded\\\"\\nbreak\\nfi\\nsleep 1\\ndone\\n\\n\\ntouch /etc/mesosphere/roles/slave\\n\",\"owner\":\"root\",\"path\":\"/opt/azure/containers/provision.sh\",\"permissions\":\"0744\"},{\"content\":\"\",\"owner\":\"root\",\"path\":\"/var/lib/dcos/mesos-slave-common\",\"permissions\":\"0644\"},{\"content\":\"#!/bin/bash\\nadduser ',variables('adminUsername'),' docker\\n\",\"owner\":\"root\",\"path\":\"/opt/azure/containers/add_admin_to_docker_group.sh\",\"permissions\":\"0744\"}]}'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "offer": "[variables('osImageOffer')]",
              "publisher": "[variables('osImagePublisher')]",
              "sku": "[variables('osImageSKU')]",
              "version": "[variables('osImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": "[variables('agentpri2Count')]",
        "name": "[variables('agentpri2VMSize')]",
        "tier": "[variables('agentpri2VMSizeTier')]"
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri2VMNamePrefix'), '-vmss')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "managed": "true",
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "3"
      },
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterStorageAccountExhibitorName')]",
      "properties": {
        "accountType": "Standard_LRS"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('agentpriNSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('agentpri2NSGName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('masterSubnet')]",
            "[variables('agentpriSubnet')]",
            "[variables('agentpri2Subnet')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('masterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('masterSubnet')]"
            }
          },
          {
            "name": "[variables('agentpriSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpriSubnet')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('agentpriNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('agentpri2SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri2Subnet')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('agentpri2NSGName'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[copyIndex(2200)]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('masterLbName'), '/', 'SSHPort22-', variables('masterVMNamePrefix'), '0')]",
      "properties": {
        "backendPort": 2222,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "22",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterNSGName')]",
      "properties": {
        "securityRules": [
          {
            "name": "sshPort22",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "2222",
              "direction": "Inbound",
              "priority": 201,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "direction": "Inbound",
              "priority": 200,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('masterNSGID')]",
        "[variables('vnetID')]",
        "[variables('masterLbID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSHPort22-',variables('masterVMNamePrefix'),0)]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": "[variables('masterLbInboundNatRules')[copyIndex()]]",
              "privateIPAddress": "[concat(variables('masterFirstAddrPrefix'), copyIndex(int(variables('masterFirstAddrOctet4'))))]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('masterVnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('masterNSGID')]"
        }
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountExhibitorName')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "customData": "[base64(concat('#cloud-config\n\n', '{\"bootcmd\":[\"bash -c \\\"if [ ! -f /var/lib/sdb-gpt ];then echo DCOS-5890;parted -s /dev/sdb mklabel gpt;touch /var/lib/sdb-gpt;fi\\\"\"],\"disk_setup\":{\"ephemeral0\":{\"layout\":[45,45,10],\"overwrite\":true,\"table_type\":\"gpt\"}},\"fs_setup\":[{\"device\":\"ephemeral0.1\",\"filesystem\":\"ext4\",\"overwrite\":true},{\"device\":\"ephemeral0.2\",\"filesystem\":\"ext4\",\"overwrite\":true},{\"device\":\"ephemeral0.3\",\"filesystem\":\"ext4\",\"overwrite\":true}],\"mounts\":[[\"ephemeral0.1\",\"/var/lib/mesos\"],[\"ephemeral0.2\",\"/var/lib/docker\"],[\"ephemeral0.3\",\"/var/tmp\"]],\"runcmd\":[\"/usr/lib/apt/apt.systemd.daily\",\"echo 2dd1ce17-079e-403c-b352-a1921ee207ee \\u003e /sys/bus/vmbus/drivers/hv_util/unbind\",\"sed -i \\\"13i\\\\echo 2dd1ce17-079e-403c-b352-a1921ee207ee \\u003e /sys/bus/vmbus/drivers/hv_util/unbind\\\\n\\\" /etc/rc.local\",[\"ln\",\"-s\",\"/bin/rm\",\"/usr/bin/rm\"],[\"ln\",\"-s\",\"/bin/mkdir\",\"/usr/bin/mkdir\"],[\"ln\",\"-s\",\"/bin/tar\",\"/usr/bin/tar\"],[\"ln\",\"-s\",\"/bin/ln\",\"/usr/bin/ln\"],[\"ln\",\"-s\",\"/bin/cp\",\"/usr/bin/cp\"],[\"ln\",\"-s\",\"/bin/systemctl\",\"/usr/bin/systemctl\"],[\"ln\",\"-s\",\"/bin/mount\",\"/usr/bin/mount\"],[\"ln\",\"-s\",\"/bin/bash\",\"/usr/bin/bash\"],[\"ln\",\"-s\",\"/usr/sbin/useradd\",\"/usr/bin/useradd\"],[\"systemctl\",\"disable\",\"--now\",\"resolvconf.service\"],[\"systemctl\",\"mask\",\"--now\",\"lxc-net.service\"],[\"systemctl\",\"disable\",\"--now\",\"unscd.service\"],[\"systemctl\",\"stop\",\"--now\",\"unscd.service\"],\"sed -i \\\"s/^Port 22$/Port 22\\\\nPort 2222/1\\\" /etc/ssh/sshd_config\",\"service ssh restart\",\"/opt/azure/containers/provision.sh\",[\"cp\",\"-p\",\"/etc/resolv.conf\",\"/tmp/resolv.conf\"],[\"rm\",\"-f\",\"/etc/resolv.conf\"],[\"cp\",\"-p\",\"/tmp/resolv.conf\",\"/etc/resolv.conf\"],[\"systemctl\",\"start\",\"dcos-docker-install.service\"],[\"systemctl\",\"start\",\"dcos-config-writer.service\"],[\"systemctl\",\"restart\",\"systemd-journald.service\"],[\"systemctl\",\"restart\",\"docker.service\"],[\"systemctl\",\"start\",\"dcos-link-env.service\"],[\"systemctl\",\"enable\",\"dcos-setup.service\"],[\"systemctl\",\"--no-block\",\"start\",\"dcos-setup.service\"],\"/opt/azure/containers/add_admin_to_docker_group.sh\"],\"write_files\":[{\"content\":\"https://dcosio.azureedge.net/dcos/stable\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/repository-url\",\"permissions\":\"0644\"},{\"content\":\"[\\\"3dt--7847ebb24bf6756c3103902971b34c3f09c3afbd\\\", \\\"adminrouter--0493a6fdaed08e1971871818e194aa4607df4f09\\\", \\\"avro-cpp--760c214063f6b038b522eaf4b768b905fed56ebc\\\", \\\"boost-libs--2015ccb58fb756f61c02ee6aa05cc1e27459a9ec\\\", \\\"bootstrap--59a905ecee27e71168ed44cefda4481fb76b816d\\\", \\\"boto--6344d31eef082c7bd13259b17034ea7b5c34aedf\\\", \\\"check-time--be7d0ba757ec87f9965378fee7c76a6ee5ae996d\\\", \\\"cni--e48337da39a8cd379414acfe0da52a9226a10d24\\\", \\\"cosmos--20decef90f0623ed253a12ec4cf5c148b18d8249\\\", \\\"curl--fc3486c43f98e63f9b12675f1356e8fe842f26b0\\\", \\\"dcos-config--setup_bcc883b7a3191412cf41824bdee06c1142187a0b\\\", \\\"dcos-history--77b0e97d7b25c8bedf8f7da0689cac65b83e3813\\\", \\\"dcos-image--bda6a02bcb2eb21c4218453a870cc584f921a800\\\", \\\"dcos-image-deps--83584fd868e5b470f7cf754424a9a75b328e9b68\\\", \\\"dcos-integration-test--c28bcb2347799dca43083f55e4c7b28503176f9c\\\", \\\"dcos-log--4d630df863228f38c6333e44670b4c4b20a74832\\\", \\\"dcos-metadata--setup_bcc883b7a3191412cf41824bdee06c1142187a0b\\\", \\\"dcos-metrics--23ee2f89c58b1258bc959f1d0dd7debcbb3d79d2\\\", \\\"dcos-oauth--0079529da183c0f23a06d2b069721b6fa6cc7b52\\\", \\\"dcos-signal--1bcd3b612cbdc379380dcba17cdf9a3b6652d9dc\\\", \\\"dcos-ui--d4afd695796404a5b35950c3daddcae322481ac4\\\", \\\"dnspython--0f833eb9a8abeba3179b43f3a200a8cd42d3795a\\\", \\\"docker-gc--59a98ed6446a084bf74e4ff4b8e3479f59ea8528\\\", \\\"dvdcli--5374dd4ffb519f1dcefdec89b2247e3404f2e2e3\\\", \\\"erlang--a9ee2530357a3301e53056b36a93420847b339a3\\\", \\\"exhibitor--72d9d8f947e5411eda524d40dde1a58edeb158ed\\\", \\\"flask--26d1bcdb2d1c3dcf1d2c03bc0d4f29c86d321b21\\\", \\\"java--cd5e921ce66b0d3303883c06d73a657314044304\\\", \\\"libevent--208be855d2be29c9271a7bd6c04723ff79946e02\\\", \\\"libffi--83ce3bd7eda2ef089e57efd2bc16c144d5a1f094\\\", \\\"libsodium--9ff915db08c6bba7d6738af5084e782b13c84bf8\\\", \\\"logrotate--7f7bc4416d3ad101d0c5218872858483b516be07\\\", \\\"marathon--bfb24f7f90cb3cd52a1cb22a07caafa5013bba21\\\", \\\"mesos--aaedd03eee0d57f5c0d49c74ff1e5721862cad98\\\", \\\"mesos-dns--0401501b2b5152d01bfa84ff6d007fdafe414b16\\\", \\\"mesos-modules--311849eaae42696b8a7eefe86b9ab3ebd9bd48f5\\\", \\\"metronome--467e4c64f804dbd4cd8572516e111a3f9298c10d\\\", \\\"navstar--1128db0234105a64fb4be52f4453cd6aa895ff30\\\", \\\"ncurses--d889894b71aa1a5b311bafef0e85479025b4dacb\\\", \\\"octarine--e86d3312691b12523280d56f6260216729aaa0ad\\\", \\\"openssl--b01a32a42e3ccba52b417276e9509a441e1d4a82\\\", \\\"pkgpanda-api--541feb8a8be58bdde8fecf1d2e5bfa0515f5a7d0\\\", \\\"pkgpanda-role--f8a749a4a821476ad2ef7e9dd9d12b6a8c4643a4\\\", \\\"pytest--78aee3e58a049cdab0d266af74f77d658b360b4f\\\", \\\"python--b7a144a49577a223d37d447c568f51330ee95390\\\", \\\"python-azure-mgmt-resource--03c05550f43b0e7a4455c33fe43b0deb755d87f0\\\", \\\"python-cryptography--4184767c68e48801dd394072cb370c610a05029d\\\", \\\"python-dateutil--fdc6ff929f65dd0918cf75a9ad56704683d31781\\\", \\\"python-docopt--beba78faa13e5bf4c52393b4b82d81f3c391aa65\\\", \\\"python-gunicorn--a537f95661fb2689c52fe12510eb0d01cb83af60\\\", \\\"python-isodate--40d378c688e6badfd16676dd8b51b742bfebc8d5\\\", \\\"python-jinja2--7450f5ae5a822f63f7a58c717207be0456df51ed\\\", \\\"python-kazoo--cb7ce13a1068cd82dd84ea0de32b529a760a4bdd\\\", \\\"python-markupsafe--dd46d2a3c58611656a235f96d4adc51b2a7a590e\\\", \\\"python-passlib--802ec3605c0b82428fedba60983b1bafaa036bb8\\\", \\\"python-pyyaml--81dd44cc4a24db7cefa7016c6586a131acf279c3\\\", \\\"python-requests--1b2cadbd3811cc0c2ee235ce927e13ea1d6af41d\\\", \\\"python-retrying--eb7b8bac133f50492b1e1349cbe77c3e38bd02c3\\\", \\\"python-tox--07244f8a939a10353634c952c6d88ec4a3c05736\\\", \\\"rexray--869621bb411c9f2a793ea42cdfeed489e1972aaa\\\", \\\"six--f06424b68523c4dfa2a7c3e7475d479f3d361e42\\\", \\\"spartan--9cc57a3d55452b905d90e3201f56913140914ecc\\\", \\\"strace--7d01796d64994451c1b2b82d161a335cbe90569b\\\", \\\"teamcity-messages--e623a4d86eb3a8d199cefcc240dd4c5460cb2962\\\", \\\"toybox--f235594ab8ea9a2864ee72abe86723d76f92e848\\\"]\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/cluster-packages.json\",\"permissions\":\"0644\"},{\"content\":\"[Journal]\\nMaxLevelConsole=warning\\nRateLimitInterval=1s\\nRateLimitBurst=20000\\n\",\"owner\":\"root\",\"path\":\"/etc/systemd/journald.conf.d/dcos.conf\",\"permissions\":\"0644\"},{\"content\":\"rexray:\\n  loglevel: info\\n  modules:\\n    default-admin:\\n      host: tcp://127.0.0.1:61003\\n    default-docker:\\n      disabled: true\\n\",\"path\":\"/etc/rexray/config.yml\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nAfter=network-online.target\\nWants=network-online.target\\n[Service]\\nType=oneshot\\nEnvironment=DEBIAN_FRONTEND=noninteractive\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/curl -fLsSv --retry 20 -Y 100000 -y 60 -o /var/tmp/d.deb https://az837203.vo.msecnd.net/dcos-deps/docker-engine_1.13.1-0-ubuntu-xenial_amd64.deb\\nExecStart=/usr/bin/bash -c \\\"try=1;until dpkg -D3 -i /var/tmp/d.deb || ((try\\u003e9));do echo retry $((try++));sleep $((try*try));done;systemctl --now start docker;systemctl restart docker.socket\\\"\\n\",\"path\":\"/etc/systemd/system/dcos-docker-install.service\",\"permissions\":\"0644\"},{\"content\":\"[Service]\\nRestart=always\\nStartLimitInterval=0\\nRestartSec=15\\nLimitNOFILE=16384\\nExecStartPre=-/sbin/ip link del docker0\\nExecStart=\\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay\\n\",\"path\":\"/etc/systemd/system/docker.service.d/execstart.conf\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nRequires=dcos-setup.service\\nAfter=dcos-setup.service\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/environment\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/usr/bin/bash -c \\\"echo $(detect_ip) $(hostname) \\u003e /etc/hosts\\\"\\n\",\"path\":\"/etc/systemd/system/dcos-config-writer.service\",\"permissions\":\"0644\"},{\"content\":\"\\\"bound_values\\\":\\n  \\\"adminrouter_auth_enabled\\\": |-\\n    ',variables('oauthEnabled'),'\\n  \\\"cluster_name\\\": |-\\n    ',variables('masterPublicIPAddressName'),'\\n  \\\"exhibitor_azure_account_key\\\": |-\\n    ', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('masterStorageAccountExhibitorName')), '2015-06-15').key1, '\\n  \\\"exhibitor_azure_account_name\\\": |-\\n    ',variables('masterStorageAccountExhibitorName'),'\\n  \\\"exhibitor_azure_prefix\\\": |-\\n    ',variables('masterPublicIPAddressName'),'\\n  \\\"master_list\\\": |-\\n    [\\\"', reference(variables('masterVMNic')[0]).ipConfigurations[0].properties.privateIPAddress,'\\\"]\\n  \\\"oauth_enabled\\\": |-\\n    ',variables('oauthEnabled'),'\\n\\\"late_bound_package_id\\\": |-\\n  dcos-provider-bcc883b7a3191412cf41824bdee06c1142187a0b-azure--setup\\n\",\"owner\":\"root\",\"path\":\"/etc/mesosphere/setup-flags/late-config.yaml\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nBefore=dcos.target\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/mkdir -p /etc/profile.d\\nExecStart=/usr/bin/ln -sf /opt/mesosphere/bin/add_dcos_path.sh /etc/profile.d/dcos.sh\\n\",\"path\":\"/etc/systemd/system/dcos-link-env.service\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nDescription=Pkgpanda: Download DC/OS to this host.\\nAfter=network-online.target\\nWants=network-online.target\\nConditionPathExists=!/opt/mesosphere/\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o //var/tmp/bootstrap.tar.xz ',variables('dcosBootstrapURL'),'\\nExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\\nExecStart=/usr/bin/tar -axf //var/tmp/bootstrap.tar.xz -C /opt/mesosphere\\nExecStartPost=-/usr/bin/rm -f //var/tmp/bootstrap.tar.xz\\n\",\"path\":\"/etc/systemd/system/dcos-download.service\",\"permissions\":\"0644\"},{\"content\":\"[Unit]\\nDescription=Pkgpanda: Specialize DC/OS for this host.\\nRequires=dcos-download.service\\nAfter=dcos-download.service\\n[Service]\\nType=oneshot\\nStandardOutput=journal+console\\nStandardError=journal+console\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\\n[Install]\\nWantedBy=multi-user.target\\n\",\"path\":\"/etc/systemd/system/dcos-setup.service\",\"permissions\":\"0644\"},{\"content\":\"\",\"path\":\"/etc/mesosphere/roles/azure\"},{\"content\":\"#!/bin/bash\\n\\n\\nMESOSDIR=/var/lib/mesos/dl\\nmkdir $MESOSDIR\\n\\n\\n# load the env vars\\n. /etc/mesosphere/setup-flags/dcos-deploy-environment\\n\\n\\n# default dc/os component download address (Azure CDN)\\nDOCKER_ENGINE_DOWNLOAD_URL=https://mesosphere.blob.core.windows.net/dcos-deps/docker-engine_1.13.1-0-ubuntu-xenial_amd64.deb\\nLIBIPSET_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/libipset3_6.29-1_amd64.deb\\nIPSET_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/ipset_6.29-1_amd64.deb\\nUNZIP_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/unzip_6.0-20ubuntu1_amd64.deb\\nLIBLTDL_DOWNLOAD_URL=https://az837203.vo.msecnd.net/dcos-deps/libltdl7_2.4.6-0.1_amd64.deb\\n\\n\\ncase $DCOS_ENVIRONMENT in\\n# because of Chinese GreatWall Firewall, the default packages on Azure CDN is blocked. So the following Chinese local mirror url should be used instead.\\nAzureChinaCloud)\\nDOCKER_ENGINE_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/docker-engine_1.11.2-0~xenial_amd64.deb\\nLIBIPSET_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/libipset3_6.29-1_amd64.deb\\nIPSET_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/ipset_6.29-1_amd64.deb\\nUNZIP_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/unzip_6.0-20ubuntu1_amd64.deb\\nLIBLTDL_DOWNLOAD_URL=http://acsengine.blob.core.chinacloudapi.cn/dcos/libltdl7_2.4.6-0.1_amd64.deb\\n;;\\nesac\\n\\n\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/d.deb $DOCKER_ENGINE_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/1.deb $LIBIPSET_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/2.deb $IPSET_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/3.deb $UNZIP_DOWNLOAD_URL \\u0026\\ncurl -fLsSv --retry 20 -Y 100000 -y 60 -o $MESOSDIR/4.deb $LIBLTDL_DOWNLOAD_URL \\u0026\\nwait\\n\\n\\nfor i in {1..300}; do\\ndpkg -i $MESOSDIR/{1,2,3,4}.deb\\nif [ \\\"$?\\\" = \\\"0\\\" ]\\nthen\\necho \\\"succeeded\\\"\\nbreak\\nfi\\nsleep 1\\ndone\\n\\n\\ntouch /etc/mesosphere/roles/master\\ntouch /etc/mesosphere/roles/azure_master\\n\",\"owner\":\"root\",\"path\":\"/opt/azure/containers/provision.sh\",\"permissions\":\"0744\"},{\"content\":\"\",\"owner\":\"root\",\"path\":\"/var/lib/dcos/mesos-slave-common\",\"permissions\":\"0644\"},{\"content\":\"#!/bin/bash\\nadduser ',variables('adminUsername'),' docker\\n\",\"owner\":\"root\",\"path\":\"/opt/azure/containers/add_admin_to_docker_group.sh\",\"permissions\":\"0744\"}]}'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('masterVMNamePrefix'), copyIndex())]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), sub(variables('masterCount'), 1))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), sub(variables('masterCount'), 1), '/waitforleader')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.OSTCExtensions",
        "settings": {
          "commandToExecute": "sh -c 'until ping -c1 leader.mesos;do echo waiting for leader.mesos;sleep 15;done;echo leader.mesos up'"
        },
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}
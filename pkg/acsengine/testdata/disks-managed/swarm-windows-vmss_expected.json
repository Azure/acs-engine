{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agent128Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agent128Subnet": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agent128'."
      },
      "type": "string"
    },
    "agent128VMSize": {
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agent1publicCount": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agent1publicEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "agent1publicSubnet": {
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agent1public'."
      },
      "type": "string"
    },
    "agent1publicVMSize": {
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "192.168.255.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterSubnet": {
      "defaultValue": "192.168.255.0/24",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "31559618",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzureCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzureCloud, AzureChinaCloud"
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "metadata": {
        "description": "Password for the Windows Swarm Agent Virtual Machines."
      },
      "type": "securestring"
    },
    "windowsAdminUsername": {
      "metadata": {
        "description": "User name for the Windows Swarm Agent Virtual Machines (Password Only Supported)."
      },
      "type": "string"
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "agent128Count": "[parameters('agent128Count')]",
    "agent128Index": 0,
    "agent128StorageAccountsCount": "[variables('maxStorageAccountsPerAgent')]",
    "agent128Subnet": "[parameters('agent128Subnet')]",
    "agent128SubnetName": "[concat(variables('orchestratorName'), '-agent128subnet')]",
    "agent128VMNamePrefix": "[concat(variables('orchestratorName'), '-agent128-', variables('nameSuffix'))]",
    "agent128VMSize": "[parameters('agent128VMSize')]",
    "agent128VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agent128SubnetName'))]",
    "agent1publicCount": "[parameters('agent1publicCount')]",
    "agent1publicEndpointDNSNamePrefix": "[tolower(parameters('agent1publicEndpointDNSNamePrefix'))]",
    "agent1publicIPAddressName": "[concat(variables('orchestratorName'), '-agent-ip-', variables('agent1publicEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "agent1publicIndex": 1,
    "agent1publicLbBackendPoolName": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agent1publicLbName'))]",
    "agent1publicLbIPConfigID": "[concat(variables('agent1publicLbID'),'/frontendIPConfigurations/', variables('agent1publicLbIPConfigName'))]",
    "agent1publicLbIPConfigName": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicLbName": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicStorageAccountsCount": "[variables('maxStorageAccountsPerAgent')]",
    "agent1publicSubnet": "[parameters('agent1publicSubnet')]",
    "agent1publicSubnetName": "[concat(variables('orchestratorName'), '-agent1publicsubnet')]",
    "agent1publicVMNamePrefix": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicVMSize": "[parameters('agent1publicVMSize')]",
    "agent1publicVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agent1publicSubnetName'))]",
    "agent1publicWindowsRDPEndRangeStop": "[add(variables('agent1publicWindowsRDPNatRangeStart'), add(variables('agent1publicCount'),variables('agent1publicCount')))]",
    "agent1publicWindowsRDPNatRangeStart": 3389,
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/',variables('configureClusterScriptFile'), ' ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]",
    "agentMaxVMs": 100,
    "agentRunCmd": "[concat('runcmd:\n -  [ /bin/bash, /opt/azure/containers/install-cluster.sh ]\n\n')]",
    "agentRunCmdFile": "[concat(' -  content: |\n        #!/bin/bash\n        ','sudo mkdir -p /var/log/azure\n        ',variables('agentCustomScript'),'\n    path: /opt/azure/containers/install-cluster.sh\n    permissions: \"0744\"\n')]",
    "agentWindowsBackendPort": 3389,
    "agentWindowsOffer": "WindowsServer",
    "agentWindowsPublisher": "MicrosoftWindowsServer",
    "agentWindowsSku": "2016-Datacenter-with-Containers",
    "agentWindowsVersion": "latest",
    "apiVersionDefault": "2016-03-30",
    "apiVersionStorage": "2015-06-15",
    "apiVersionStorageManagedDisks": "2016-04-30-preview",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddrOctet4'), ' ',variables('adminUsername'),' ',variables('postInstallScriptURI'),' ',variables('masterFirstAddrPrefix'))]",
    "configureClusterScriptFile": "configure-swarm-cluster.sh",
    "dataStorageAccountPrefixSeed": 97,
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterCount": 3,
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/',variables('configureClusterScriptFile'), ' ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbInboundNatRules": [
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'0')]"
        },
        {
          "id": "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'1')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'2')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'3')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'4')]"
        }
      ]
    ],
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "masterSshInboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleNamePrefix": "[concat(variables('masterLbName'),'/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "masterSubnet": "[parameters('masterSubnet')]",
    "masterSubnetName": "[concat(variables('orchestratorName'), '-masterSubnet')]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMSize": "[parameters('masterVMSize')]",
    "masterVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('masterSubnetName'))]",
    "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
    "maxVMsPerPool": 100,
    "maxVMsPerStorageAccount": 20,
    "nameSuffix": "[parameters('nameSuffix')]",
    "orchestratorName": "swarm",
    "osImageOffer": "UbuntuServer",
    "osImagePublisher": "Canonical",
    "osImageSKU": "14.04.4-LTS",
    "osImageVersion": "latest",
    "postInstallScriptURI": "disabled",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterEndpointDNSNamePrefix'),resourceGroup().location))]",
    "storageAccountPrefixes": [
      "0",
      "6",
      "c",
      "i",
      "o",
      "u",
      "1",
      "7",
      "d",
      "j",
      "p",
      "v",
      "2",
      "8",
      "e",
      "k",
      "q",
      "w",
      "3",
      "9",
      "f",
      "l",
      "r",
      "x",
      "4",
      "a",
      "g",
      "m",
      "s",
      "y",
      "5",
      "b",
      "h",
      "n",
      "t",
      "z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vmSizesMap": {
      "Basic_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Basic_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Basic_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A10": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A9": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D15_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_DS11": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS15_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_G1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_GS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_H16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16mr": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV6": {
        "storageAccountType": "Standard_LRS"
      }
    },
    "vmsPerStorageAccount": 20,
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "windowsAdminPassword": "[parameters('windowsAdminPassword')]",
    "windowsAdminUsername": "[parameters('windowsAdminUsername')]",
    "windowsCustomScript": "[concat('powershell.exe -ExecutionPolicy Unrestricted -command \"', variables('windowsCustomScriptArguments'), variables('windowsCustomScriptSuffix'), '\" > %SYSTEMDRIVE%\\AzureData\\CustomDataSetupScript.log 2>&1')]",
    "windowsCustomScriptArguments": "[concat('$arguments = ', variables('singleQuote'),'-SwarmMasterIP ', variables('masterFirstAddrPrefix'), variables('masterFirstAddrOctet4'), variables('singleQuote'), ' ; ')]",
    "windowsCustomScriptSuffix": " $inputFile = '%SYSTEMDRIVE%\\AzureData\\CustomData.bin' ; $outputFile = '%SYSTEMDRIVE%\\AzureData\\CustomDataSetupScript.ps1' ; $inputStream = New-Object System.IO.FileStream $inputFile, ([IO.FileMode]::Open), ([IO.FileAccess]::Read), ([IO.FileShare]::Read) ; $sr = New-Object System.IO.StreamReader(New-Object System.IO.Compression.GZipStream($inputStream, [System.IO.Compression.CompressionMode]::Decompress)) ; $sr.ReadToEnd() | Out-File($outputFile) ; Invoke-Expression('{0} {1}' -f $outputFile, $arguments) ; "
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]",
        "[variables('vnetID')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('agent128VMNamePrefix'), '-vmss')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssCustomScriptExtension",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.Compute",
                  "settings": {
                    "commandToExecute": "[variables('windowsCustomScript')]"
                  },
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.8"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agent128VnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": "true"
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[variables('windowsAdminPassword')]",
            "adminUsername": "[variables('windowsAdminUsername')]",
            "computerNamePrefix": "[concat(substring(variables('nameSuffix'), 0, 5), 'acs')]",
            "customData": "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"
          },
          "storageProfile": {
            "imageReference": {
              "offer": "[variables('agentWindowsOffer')]",
              "publisher": "[variables('agentWindowsPublisher')]",
              "sku": "[variables('agentWindowsSku')]",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": "[variables('agent128Count')]",
        "name": "[variables('agent128VMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agent128VMNamePrefix'), '-vmss')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('agent1publicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('agent1publicEndpointDNSNamePrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agent1publicIPAddressName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('agent1publicLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('agent1publicLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('agent1publicLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('agent1publicIPAddressName'))]"
              }
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "[concat('RDP-', variables('agent1publicVMNamePrefix'))]",
            "properties": {
              "backendPort": "[variables('agentWindowsBackendPort')]",
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPortRangeEnd": "[variables('agent1publicWindowsRDPEndRangeStop')]",
              "frontendPortRangeStart": "[variables('agent1publicWindowsRDPNatRangeStart')]",
              "protocol": "tcp"
            }
          }
        ],
        "inboundNatRules": [],
        "loadBalancingRules": [
          {
            "name": "LBRule80",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
              },
              "backendPort": 80,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPort": 80,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agent1publicLbID'),'/probes/tcp80Probe')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBRule443",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agent1publicLbID'),'/probes/tcp443Probe')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBRule8080",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
              },
              "backendPort": 8080,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPort": 8080,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agent1publicLbID'),'/probes/tcp8080Probe')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcp80Probe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 80,
              "protocol": "tcp"
            }
          },
          {
            "name": "tcp443Probe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 443,
              "protocol": "tcp"
            }
          },
          {
            "name": "tcp8080Probe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 8080,
              "protocol": "tcp"
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]",
        "[variables('vnetID')]",
        "[variables('agent1publicLbID')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('agent1publicVMNamePrefix'), '-vmss')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssCustomScriptExtension",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.Compute",
                  "settings": {
                    "commandToExecute": "[variables('windowsCustomScript')]"
                  },
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.8"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat(variables('agent1publicLbID'), '/inboundNatPools/', 'RDP-', variables('agent1publicVMNamePrefix'))]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('agent1publicVnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": "true"
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[variables('windowsAdminPassword')]",
            "adminUsername": "[variables('windowsAdminUsername')]",
            "computerNamePrefix": "[concat(substring(variables('nameSuffix'), 0, 5), 'acs')]",
            "customData": "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"
          },
          "storageProfile": {
            "imageReference": {
              "offer": "[variables('agentWindowsOffer')]",
              "publisher": "[variables('agentWindowsPublisher')]",
              "sku": "[variables('agentWindowsSku')]",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": "[variables('agent1publicCount')]",
        "name": "[variables('agent1publicVMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agent1publicVMNamePrefix'), '-vmss')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('masterStorageAccountName')]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('masterVMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('masterSubnet')]",
            "[variables('agent128Subnet')]",
            "[variables('agent1publicSubnet')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('masterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('masterSubnet')]"
            }
          },
          {
            "name": "[variables('agent128SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agent128Subnet')]"
            }
          },
          {
            "name": "[variables('agent1publicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agent1publicSubnet')]"
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[copyIndex(2200)]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('masterSshPort22InboundNatRuleNamePrefix'), '0')]",
      "properties": {
        "backendPort": 2222,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "22",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('masterLbID')]",
        "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]",
        "[concat(variables('masterSshInboundNatRuleIdPrefix'),copyIndex())]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": "[variables('masterLbInboundNatRules')[copyIndex()]]",
              "privateIPAddress": "[concat(variables('masterFirstAddrPrefix'), copyIndex(int(variables('masterFirstAddrOctet4'))))]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('masterVnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountName')]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarm-cluster.sh\n    permissions: \"0744\"\n\n')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('masterStorageAccountName')), variables('apiVersionStorage')).primaryEndpoints.blob, 'vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('masterVMNamePrefix'), copyIndex())]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('masterVMNamePrefix'), copyIndex()))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "settings": {
          "commandToExecute": "[variables('masterCustomScript')]",
          "fileUris": []
        },
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agent1publicFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('agent1publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}
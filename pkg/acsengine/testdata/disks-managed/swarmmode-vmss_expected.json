{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agent128Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agent128Subnet": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agent128'."
      },
      "type": "string"
    },
    "agent128VMSize": {
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agent1publicCount": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agent1publicEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "agent1publicSubnet": {
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agent1public'."
      },
      "type": "string"
    },
    "agent1publicVMSize": {
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "172.16.0.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterSubnet": {
      "defaultValue": "172.16.0.0/24",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "31559618",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzureCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzureCloud, AzureChinaCloud"
      },
      "type": "string"
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "agent128Count": "[parameters('agent128Count')]",
    "agent128Index": 0,
    "agent128StorageAccountsCount": "[variables('maxStorageAccountsPerAgent')]",
    "agent128Subnet": "[parameters('agent128Subnet')]",
    "agent128SubnetName": "[concat(variables('orchestratorName'), '-agent128subnet')]",
    "agent128VMNamePrefix": "[concat(variables('orchestratorName'), '-agent128-', variables('nameSuffix'))]",
    "agent128VMSize": "[parameters('agent128VMSize')]",
    "agent128VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agent128SubnetName'))]",
    "agent1publicCount": "[parameters('agent1publicCount')]",
    "agent1publicEndpointDNSNamePrefix": "[tolower(parameters('agent1publicEndpointDNSNamePrefix'))]",
    "agent1publicIPAddressName": "[concat(variables('orchestratorName'), '-agent-ip-', variables('agent1publicEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "agent1publicIndex": 1,
    "agent1publicLbBackendPoolName": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agent1publicLbName'))]",
    "agent1publicLbIPConfigID": "[concat(variables('agent1publicLbID'),'/frontendIPConfigurations/', variables('agent1publicLbIPConfigName'))]",
    "agent1publicLbIPConfigName": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicLbName": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicStorageAccountsCount": "[variables('maxStorageAccountsPerAgent')]",
    "agent1publicSubnet": "[parameters('agent1publicSubnet')]",
    "agent1publicSubnetName": "[concat(variables('orchestratorName'), '-agent1publicsubnet')]",
    "agent1publicVMNamePrefix": "[concat(variables('orchestratorName'), '-agent1public-', variables('nameSuffix'))]",
    "agent1publicVMSize": "[parameters('agent1publicVMSize')]",
    "agent1publicVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agent1publicSubnetName'))]",
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/',variables('configureClusterScriptFile'), ' ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]",
    "agentMaxVMs": 100,
    "agentRunCmd": "[concat('runcmd:\n -  [ /bin/bash, /opt/azure/containers/install-cluster.sh ]\n\n')]",
    "agentRunCmdFile": "[concat(' -  content: |\n        #!/bin/bash\n        ','sudo mkdir -p /var/log/azure\n        ',variables('agentCustomScript'),'\n    path: /opt/azure/containers/install-cluster.sh\n    permissions: \"0744\"\n')]",
    "apiVersionDefault": "2016-03-30",
    "apiVersionStorage": "2015-06-15",
    "apiVersionStorageManagedDisks": "2016-04-30-preview",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddrOctet4'), ' ',variables('adminUsername'),' ',variables('postInstallScriptURI'),' ',variables('masterFirstAddrPrefix'))]",
    "configureClusterScriptFile": "configure-swarmmode-cluster.sh",
    "dataStorageAccountPrefixSeed": 97,
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterCount": 3,
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/',variables('configureClusterScriptFile'), ' ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbInboundNatRules": [
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'0')]"
        },
        {
          "id": "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'1')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'2')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'3')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'4')]"
        }
      ]
    ],
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "masterSshInboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleNamePrefix": "[concat(variables('masterLbName'),'/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "masterSubnet": "[parameters('masterSubnet')]",
    "masterSubnetName": "[concat(variables('orchestratorName'), '-masterSubnet')]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMSize": "[parameters('masterVMSize')]",
    "masterVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('masterSubnetName'))]",
    "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
    "maxVMsPerPool": 100,
    "maxVMsPerStorageAccount": 20,
    "nameSuffix": "[parameters('nameSuffix')]",
    "orchestratorName": "swarmm",
    "osImageOffer": "UbuntuServer",
    "osImagePublisher": "Canonical",
    "osImageSKU": "16.04-LTS",
    "osImageVersion": "16.04.201703070",
    "postInstallScriptURI": "disabled",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterEndpointDNSNamePrefix'),variables('location')))]",
    "storageAccountPrefixes": [
      "0",
      "6",
      "c",
      "i",
      "o",
      "u",
      "1",
      "7",
      "d",
      "j",
      "p",
      "v",
      "2",
      "8",
      "e",
      "k",
      "q",
      "w",
      "3",
      "9",
      "f",
      "l",
      "r",
      "x",
      "4",
      "a",
      "g",
      "m",
      "s",
      "y",
      "5",
      "b",
      "h",
      "n",
      "t",
      "z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vmSizesMap": {
      "Basic_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Basic_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Basic_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A10": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A9": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D15_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_DS11": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS15_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_G1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_GS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_H16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16mr": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV6": {
        "storageAccountType": "Standard_LRS"
      }
    },
    "vmsPerStorageAccount": 20,
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]",
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agent128VMNamePrefix'), '-vmss')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('agent128VnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": "true"
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[variables('adminUsername')]",
            "computerNamePrefix": "[variables('agent128VMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "dataDisks": [
              {
                "createOption": "Empty",
                "diskSizeGB": "128",
                "lun": 0
              },
              {
                "createOption": "Empty",
                "diskSizeGB": "128",
                "lun": 1
              },
              {
                "createOption": "Empty",
                "diskSizeGB": "128",
                "lun": 2
              },
              {
                "createOption": "Empty",
                "diskSizeGB": "128",
                "lun": 3
              }
            ],
            "imageReference": {
              "offer": "[variables('osImageOffer')]",
              "publisher": "[variables('osImagePublisher')]",
              "sku": "[variables('osImageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": "[variables('agent128Count')]",
        "name": "[variables('agent128VMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agent128VMNamePrefix'), '-vmss')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agent1publicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('agent1publicEndpointDNSNamePrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agent1publicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('agent1publicLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('agent1publicLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('agent1publicLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('agent1publicIPAddressName'))]"
              }
            }
          }
        ],
        "inboundNatRules": [],
        "loadBalancingRules": [
          {
            "name": "LBRule80",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
              },
              "backendPort": 80,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPort": 80,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agent1publicLbID'),'/probes/tcp80Probe')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBRule443",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agent1publicLbID'),'/probes/tcp443Probe')]"
              },
              "protocol": "tcp"
            }
          },
          {
            "name": "LBRule8080",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
              },
              "backendPort": 8080,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('agent1publicLbIPConfigID')]"
              },
              "frontendPort": 8080,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agent1publicLbID'),'/probes/tcp8080Probe')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcp80Probe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 80,
              "protocol": "tcp"
            }
          },
          {
            "name": "tcp443Probe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 443,
              "protocol": "tcp"
            }
          },
          {
            "name": "tcp8080Probe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 8080,
              "protocol": "tcp"
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]",
        "[variables('vnetID')]",
        "[variables('agent1publicLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agent1publicVMNamePrefix'), '-vmss')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agent1publicLbID'), '/backendAddressPools/', variables('agent1publicLbBackendPoolName'))]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('agent1publicVnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": "true"
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[variables('adminUsername')]",
            "computerNamePrefix": "[variables('agent1publicVMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "dataDisks": [
              {
                "createOption": "Empty",
                "diskSizeGB": "1",
                "lun": 0
              }
            ],
            "imageReference": {
              "offer": "[variables('osImageOffer')]",
              "publisher": "[variables('osImagePublisher')]",
              "sku": "[variables('osImageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": "[variables('agent1publicCount')]",
        "name": "[variables('agent1publicVMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agent1publicVMNamePrefix'), '-vmss')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterStorageAccountName')]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('masterVMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('masterSubnet')]",
            "[variables('agent128Subnet')]",
            "[variables('agent1publicSubnet')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('masterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('masterSubnet')]"
            }
          },
          {
            "name": "[variables('agent128SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agent128Subnet')]"
            }
          },
          {
            "name": "[variables('agent1publicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agent1publicSubnet')]"
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[copyIndex(2200)]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterSshPort22InboundNatRuleNamePrefix'), '0')]",
      "properties": {
        "backendPort": 2222,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "22",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('masterLbID')]",
        "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]",
        "[concat(variables('masterSshInboundNatRuleIdPrefix'),copyIndex())]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": "[variables('masterLbInboundNatRules')[copyIndex()]]",
              "privateIPAddress": "[concat(variables('masterFirstAddrPrefix'), copyIndex(int(variables('masterFirstAddrOctet4'))))]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('masterVnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountName')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('masterStorageAccountName')), variables('apiVersionStorage')).primaryEndpoints.blob, 'vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('masterVMNamePrefix'), copyIndex())]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('masterVMNamePrefix'), copyIndex()))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "settings": {
          "commandToExecute": "[variables('masterCustomScript')]",
          "fileUris": []
        },
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agent1publicFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('agent1publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}
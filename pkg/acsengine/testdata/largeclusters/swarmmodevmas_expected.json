{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agentpri0Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri0Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri0Subnet": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri0'."
      },
      "type": "string"
    },
    "agentpri0VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri10Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri10Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri10Subnet": {
      "defaultValue": "10.10.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri10'."
      },
      "type": "string"
    },
    "agentpri10VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri11Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri11Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri11Subnet": {
      "defaultValue": "10.11.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri11'."
      },
      "type": "string"
    },
    "agentpri11VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri1Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri1Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri1Subnet": {
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri1'."
      },
      "type": "string"
    },
    "agentpri1VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri2Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri2Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri2Subnet": {
      "defaultValue": "10.2.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri2'."
      },
      "type": "string"
    },
    "agentpri2VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri3Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri3Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri3Subnet": {
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri3'."
      },
      "type": "string"
    },
    "agentpri3VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri4Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri4Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri4Subnet": {
      "defaultValue": "10.4.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri4'."
      },
      "type": "string"
    },
    "agentpri4VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri5Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri5Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri5Subnet": {
      "defaultValue": "10.5.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri5'."
      },
      "type": "string"
    },
    "agentpri5VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri6Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri6Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri6Subnet": {
      "defaultValue": "10.6.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri6'."
      },
      "type": "string"
    },
    "agentpri6VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri7Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri7Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri7Subnet": {
      "defaultValue": "10.7.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri7'."
      },
      "type": "string"
    },
    "agentpri7VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri8Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri8Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri8Subnet": {
      "defaultValue": "10.8.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri8'."
      },
      "type": "string"
    },
    "agentpri8VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpri9Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpri9Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpri9Subnet": {
      "defaultValue": "10.9.0.0/16",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpri9'."
      },
      "type": "string"
    },
    "agentpri9VMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "172.16.0.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterSubnet": {
      "defaultValue": "172.16.0.0/24",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A10",
        "Standard_A11",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F8",
        "Standard_F8s",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "31559618",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzureCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzureCloud, AzureChinaCloud"
      },
      "type": "string"
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/',variables('configureClusterScriptFile'), ' ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]",
    "agentMaxVMs": 100,
    "agentRunCmd": "[concat('runcmd:\n -  [ /bin/bash, /opt/azure/containers/install-cluster.sh ]\n\n')]",
    "agentRunCmdFile": "[concat(' -  content: |\n        #!/bin/bash\n        ','sudo mkdir -p /var/log/azure\n        ',variables('agentCustomScript'),'\n    path: /opt/azure/containers/install-cluster.sh\n    permissions: \"0744\"\n')]",
    "agentpri0AccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
    "agentpri0AvailabilitySet": "[concat('agentpri0-availabilitySet-', variables('nameSuffix'))]",
    "agentpri0Count": "[parameters('agentpri0Count')]",
    "agentpri0Index": 0,
    "agentpri0Offset": "[parameters('agentpri0Offset')]",
    "agentpri0StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),0)]",
    "agentpri0StorageAccountsCount": "[add(div(variables('agentpri0Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri0Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri0Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri0Subnet": "[parameters('agentpri0Subnet')]",
    "agentpri0SubnetName": "[concat(variables('orchestratorName'), '-agentpri0subnet')]",
    "agentpri0VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri0-', variables('nameSuffix'))]",
    "agentpri0VMSize": "[parameters('agentpri0VMSize')]",
    "agentpri0VMSizeTier": "[(split(parameters('agentpri0VMSize'),'_')[0]]",
    "agentpri0VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri0SubnetName'))]",
    "agentpri10AccountName": "[concat(variables('storageAccountBaseName'), 'agnt10')]",
    "agentpri10AvailabilitySet": "[concat('agentpri10-availabilitySet-', variables('nameSuffix'))]",
    "agentpri10Count": "[parameters('agentpri10Count')]",
    "agentpri10Index": 10,
    "agentpri10Offset": "[parameters('agentpri10Offset')]",
    "agentpri10StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),10)]",
    "agentpri10StorageAccountsCount": "[add(div(variables('agentpri10Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri10Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri10Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri10Subnet": "[parameters('agentpri10Subnet')]",
    "agentpri10SubnetName": "[concat(variables('orchestratorName'), '-agentpri10subnet')]",
    "agentpri10VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri10-', variables('nameSuffix'))]",
    "agentpri10VMSize": "[parameters('agentpri10VMSize')]",
    "agentpri10VMSizeTier": "[(split(parameters('agentpri10VMSize'),'_')[0]]",
    "agentpri10VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri10SubnetName'))]",
    "agentpri11AccountName": "[concat(variables('storageAccountBaseName'), 'agnt11')]",
    "agentpri11AvailabilitySet": "[concat('agentpri11-availabilitySet-', variables('nameSuffix'))]",
    "agentpri11Count": "[parameters('agentpri11Count')]",
    "agentpri11Index": 11,
    "agentpri11Offset": "[parameters('agentpri11Offset')]",
    "agentpri11StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),11)]",
    "agentpri11StorageAccountsCount": "[add(div(variables('agentpri11Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri11Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri11Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri11Subnet": "[parameters('agentpri11Subnet')]",
    "agentpri11SubnetName": "[concat(variables('orchestratorName'), '-agentpri11subnet')]",
    "agentpri11VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri11-', variables('nameSuffix'))]",
    "agentpri11VMSize": "[parameters('agentpri11VMSize')]",
    "agentpri11VMSizeTier": "[(split(parameters('agentpri11VMSize'),'_')[0]]",
    "agentpri11VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri11SubnetName'))]",
    "agentpri1AccountName": "[concat(variables('storageAccountBaseName'), 'agnt1')]",
    "agentpri1AvailabilitySet": "[concat('agentpri1-availabilitySet-', variables('nameSuffix'))]",
    "agentpri1Count": "[parameters('agentpri1Count')]",
    "agentpri1Index": 1,
    "agentpri1Offset": "[parameters('agentpri1Offset')]",
    "agentpri1StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),1)]",
    "agentpri1StorageAccountsCount": "[add(div(variables('agentpri1Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri1Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri1Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri1Subnet": "[parameters('agentpri1Subnet')]",
    "agentpri1SubnetName": "[concat(variables('orchestratorName'), '-agentpri1subnet')]",
    "agentpri1VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri1-', variables('nameSuffix'))]",
    "agentpri1VMSize": "[parameters('agentpri1VMSize')]",
    "agentpri1VMSizeTier": "[(split(parameters('agentpri1VMSize'),'_')[0]]",
    "agentpri1VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri1SubnetName'))]",
    "agentpri2AccountName": "[concat(variables('storageAccountBaseName'), 'agnt2')]",
    "agentpri2AvailabilitySet": "[concat('agentpri2-availabilitySet-', variables('nameSuffix'))]",
    "agentpri2Count": "[parameters('agentpri2Count')]",
    "agentpri2Index": 2,
    "agentpri2Offset": "[parameters('agentpri2Offset')]",
    "agentpri2StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),2)]",
    "agentpri2StorageAccountsCount": "[add(div(variables('agentpri2Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri2Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri2Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri2Subnet": "[parameters('agentpri2Subnet')]",
    "agentpri2SubnetName": "[concat(variables('orchestratorName'), '-agentpri2subnet')]",
    "agentpri2VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri2-', variables('nameSuffix'))]",
    "agentpri2VMSize": "[parameters('agentpri2VMSize')]",
    "agentpri2VMSizeTier": "[(split(parameters('agentpri2VMSize'),'_')[0]]",
    "agentpri2VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri2SubnetName'))]",
    "agentpri3AccountName": "[concat(variables('storageAccountBaseName'), 'agnt3')]",
    "agentpri3AvailabilitySet": "[concat('agentpri3-availabilitySet-', variables('nameSuffix'))]",
    "agentpri3Count": "[parameters('agentpri3Count')]",
    "agentpri3Index": 3,
    "agentpri3Offset": "[parameters('agentpri3Offset')]",
    "agentpri3StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),3)]",
    "agentpri3StorageAccountsCount": "[add(div(variables('agentpri3Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri3Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri3Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri3Subnet": "[parameters('agentpri3Subnet')]",
    "agentpri3SubnetName": "[concat(variables('orchestratorName'), '-agentpri3subnet')]",
    "agentpri3VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri3-', variables('nameSuffix'))]",
    "agentpri3VMSize": "[parameters('agentpri3VMSize')]",
    "agentpri3VMSizeTier": "[(split(parameters('agentpri3VMSize'),'_')[0]]",
    "agentpri3VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri3SubnetName'))]",
    "agentpri4AccountName": "[concat(variables('storageAccountBaseName'), 'agnt4')]",
    "agentpri4AvailabilitySet": "[concat('agentpri4-availabilitySet-', variables('nameSuffix'))]",
    "agentpri4Count": "[parameters('agentpri4Count')]",
    "agentpri4Index": 4,
    "agentpri4Offset": "[parameters('agentpri4Offset')]",
    "agentpri4StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),4)]",
    "agentpri4StorageAccountsCount": "[add(div(variables('agentpri4Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri4Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri4Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri4Subnet": "[parameters('agentpri4Subnet')]",
    "agentpri4SubnetName": "[concat(variables('orchestratorName'), '-agentpri4subnet')]",
    "agentpri4VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri4-', variables('nameSuffix'))]",
    "agentpri4VMSize": "[parameters('agentpri4VMSize')]",
    "agentpri4VMSizeTier": "[(split(parameters('agentpri4VMSize'),'_')[0]]",
    "agentpri4VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri4SubnetName'))]",
    "agentpri5AccountName": "[concat(variables('storageAccountBaseName'), 'agnt5')]",
    "agentpri5AvailabilitySet": "[concat('agentpri5-availabilitySet-', variables('nameSuffix'))]",
    "agentpri5Count": "[parameters('agentpri5Count')]",
    "agentpri5Index": 5,
    "agentpri5Offset": "[parameters('agentpri5Offset')]",
    "agentpri5StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),5)]",
    "agentpri5StorageAccountsCount": "[add(div(variables('agentpri5Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri5Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri5Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri5Subnet": "[parameters('agentpri5Subnet')]",
    "agentpri5SubnetName": "[concat(variables('orchestratorName'), '-agentpri5subnet')]",
    "agentpri5VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri5-', variables('nameSuffix'))]",
    "agentpri5VMSize": "[parameters('agentpri5VMSize')]",
    "agentpri5VMSizeTier": "[(split(parameters('agentpri5VMSize'),'_')[0]]",
    "agentpri5VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri5SubnetName'))]",
    "agentpri6AccountName": "[concat(variables('storageAccountBaseName'), 'agnt6')]",
    "agentpri6AvailabilitySet": "[concat('agentpri6-availabilitySet-', variables('nameSuffix'))]",
    "agentpri6Count": "[parameters('agentpri6Count')]",
    "agentpri6Index": 6,
    "agentpri6Offset": "[parameters('agentpri6Offset')]",
    "agentpri6StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),6)]",
    "agentpri6StorageAccountsCount": "[add(div(variables('agentpri6Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri6Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri6Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri6Subnet": "[parameters('agentpri6Subnet')]",
    "agentpri6SubnetName": "[concat(variables('orchestratorName'), '-agentpri6subnet')]",
    "agentpri6VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri6-', variables('nameSuffix'))]",
    "agentpri6VMSize": "[parameters('agentpri6VMSize')]",
    "agentpri6VMSizeTier": "[(split(parameters('agentpri6VMSize'),'_')[0]]",
    "agentpri6VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri6SubnetName'))]",
    "agentpri7AccountName": "[concat(variables('storageAccountBaseName'), 'agnt7')]",
    "agentpri7AvailabilitySet": "[concat('agentpri7-availabilitySet-', variables('nameSuffix'))]",
    "agentpri7Count": "[parameters('agentpri7Count')]",
    "agentpri7Index": 7,
    "agentpri7Offset": "[parameters('agentpri7Offset')]",
    "agentpri7StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),7)]",
    "agentpri7StorageAccountsCount": "[add(div(variables('agentpri7Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri7Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri7Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri7Subnet": "[parameters('agentpri7Subnet')]",
    "agentpri7SubnetName": "[concat(variables('orchestratorName'), '-agentpri7subnet')]",
    "agentpri7VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri7-', variables('nameSuffix'))]",
    "agentpri7VMSize": "[parameters('agentpri7VMSize')]",
    "agentpri7VMSizeTier": "[(split(parameters('agentpri7VMSize'),'_')[0]]",
    "agentpri7VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri7SubnetName'))]",
    "agentpri8AccountName": "[concat(variables('storageAccountBaseName'), 'agnt8')]",
    "agentpri8AvailabilitySet": "[concat('agentpri8-availabilitySet-', variables('nameSuffix'))]",
    "agentpri8Count": "[parameters('agentpri8Count')]",
    "agentpri8Index": 8,
    "agentpri8Offset": "[parameters('agentpri8Offset')]",
    "agentpri8StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),8)]",
    "agentpri8StorageAccountsCount": "[add(div(variables('agentpri8Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri8Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri8Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri8Subnet": "[parameters('agentpri8Subnet')]",
    "agentpri8SubnetName": "[concat(variables('orchestratorName'), '-agentpri8subnet')]",
    "agentpri8VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri8-', variables('nameSuffix'))]",
    "agentpri8VMSize": "[parameters('agentpri8VMSize')]",
    "agentpri8VMSizeTier": "[(split(parameters('agentpri8VMSize'),'_')[0]]",
    "agentpri8VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri8SubnetName'))]",
    "agentpri9AccountName": "[concat(variables('storageAccountBaseName'), 'agnt9')]",
    "agentpri9AvailabilitySet": "[concat('agentpri9-availabilitySet-', variables('nameSuffix'))]",
    "agentpri9Count": "[parameters('agentpri9Count')]",
    "agentpri9Index": 9,
    "agentpri9Offset": "[parameters('agentpri9Offset')]",
    "agentpri9StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),9)]",
    "agentpri9StorageAccountsCount": "[add(div(variables('agentpri9Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri9Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri9Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpri9Subnet": "[parameters('agentpri9Subnet')]",
    "agentpri9SubnetName": "[concat(variables('orchestratorName'), '-agentpri9subnet')]",
    "agentpri9VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri9-', variables('nameSuffix'))]",
    "agentpri9VMSize": "[parameters('agentpri9VMSize')]",
    "agentpri9VMSizeTier": "[(split(parameters('agentpri9VMSize'),'_')[0]]",
    "agentpri9VnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('agentpri9SubnetName'))]",
    "apiVersionDefault": "2016-03-30",
    "apiVersionStorage": "2015-06-15",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddrOctet4'), ' ',variables('adminUsername'),' ',variables('postInstallScriptURI'),' ',variables('masterFirstAddrPrefix'))]",
    "configureClusterScriptFile": "configure-swarmmode-cluster.sh",
    "dataStorageAccountPrefixSeed": 97,
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterCount": 3,
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/',variables('configureClusterScriptFile'), ' ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbInboundNatRules": [
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'0')]"
        },
        {
          "id": "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'1')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'2')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'3')]"
        }
      ],
      [
        {
          "id": "[concat(variables('masterSshInboundNatRuleIdPrefix'),'4')]"
        }
      ]
    ],
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "masterSshInboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleIdPrefix": "[concat(variables('masterLbID'),'/inboundNatRules/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterSshPort22InboundNatRuleNamePrefix": "[concat(variables('masterLbName'),'/SSHPort22-',variables('masterVMNamePrefix'))]",
    "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "masterSubnet": "[parameters('masterSubnet')]",
    "masterSubnetName": "[concat(variables('orchestratorName'), '-masterSubnet')]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMSize": "[parameters('masterVMSize')]",
    "masterVnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('masterSubnetName'))]",
    "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
    "maxVMsPerPool": 100,
    "maxVMsPerStorageAccount": 20,
    "nameSuffix": "[parameters('nameSuffix')]",
    "orchestratorName": "swarmm",
    "osImageOffer": "UbuntuServer",
    "osImagePublisher": "Canonical",
    "osImageSKU": "16.04-LTS",
    "osImageVersion": "16.04.201703070",
    "postInstallScriptURI": "disabled",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterEndpointDNSNamePrefix'),variables('location')))]",
    "storageAccountPrefixes": [
      "0",
      "6",
      "c",
      "i",
      "o",
      "u",
      "1",
      "7",
      "d",
      "j",
      "p",
      "v",
      "2",
      "8",
      "e",
      "k",
      "q",
      "w",
      "3",
      "9",
      "f",
      "l",
      "r",
      "x",
      "4",
      "a",
      "g",
      "m",
      "s",
      "y",
      "5",
      "b",
      "h",
      "n",
      "t",
      "z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vmSizesMap": {
      "Standard_A10": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A9": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D15_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_DS11": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS15_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_G1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_GS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_H16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16mr": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_L16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L32s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV6": {
        "storageAccountType": "Standard_LRS"
      }
    },
    "vmsPerStorageAccount": 20,
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri0Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri0VMNamePrefix'), 'nic-', copyIndex(variables('agentpri0Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri0VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri0StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri0StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri0StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri0AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri0VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri0AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri0Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri0Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri0StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri0Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri0StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri0AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri0VMNamePrefix'), 'nic-', copyIndex(variables('agentpri0Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri0AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri0VMNamePrefix'), copyIndex(variables('agentpri0Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri0AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri0VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri0VMNamePrefix'), 'nic-', copyIndex(variables('agentpri0Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri0VMNamePrefix'), copyIndex(variables('agentpri0Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri0VMNamePrefix'), copyIndex(variables('agentpri0Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri0Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri0StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri0Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri0StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri0AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri0VMNamePrefix'), copyIndex(variables('agentpri0Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri0VMNamePrefix'), copyIndex(variables('agentpri0Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri1Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri1VMNamePrefix'), 'nic-', copyIndex(variables('agentpri1Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri1VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri1StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri1AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri1VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri1AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri1Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri1AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri1VMNamePrefix'), 'nic-', copyIndex(variables('agentpri1Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri1AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri1VMNamePrefix'), copyIndex(variables('agentpri1Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri1AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri1VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri1VMNamePrefix'), 'nic-', copyIndex(variables('agentpri1Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri1VMNamePrefix'), copyIndex(variables('agentpri1Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri1VMNamePrefix'), copyIndex(variables('agentpri1Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri1AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri1VMNamePrefix'), copyIndex(variables('agentpri1Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri1VMNamePrefix'), copyIndex(variables('agentpri1Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri2Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri2VMNamePrefix'), 'nic-', copyIndex(variables('agentpri2Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri2VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri2StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri2AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri2VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri2AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri2Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri2AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri2VMNamePrefix'), 'nic-', copyIndex(variables('agentpri2Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri2AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri2AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri2VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri2VMNamePrefix'), 'nic-', copyIndex(variables('agentpri2Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri2AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri3Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri3VMNamePrefix'), 'nic-', copyIndex(variables('agentpri3Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri3VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri3StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri3StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri3StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri3AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri3VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri3AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri3Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri3Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri3StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri3Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri3StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri3AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri3VMNamePrefix'), 'nic-', copyIndex(variables('agentpri3Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri3AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri3VMNamePrefix'), copyIndex(variables('agentpri3Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri3AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri3VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri3VMNamePrefix'), 'nic-', copyIndex(variables('agentpri3Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri3VMNamePrefix'), copyIndex(variables('agentpri3Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri3VMNamePrefix'), copyIndex(variables('agentpri3Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri3Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri3StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri3Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri3StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri3AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri3VMNamePrefix'), copyIndex(variables('agentpri3Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri3VMNamePrefix'), copyIndex(variables('agentpri3Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri4Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri4VMNamePrefix'), 'nic-', copyIndex(variables('agentpri4Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri4VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri4StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri4StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri4StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri4AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri4VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri4AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri4Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri4Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri4StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri4Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri4StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri4AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri4VMNamePrefix'), 'nic-', copyIndex(variables('agentpri4Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri4AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri4VMNamePrefix'), copyIndex(variables('agentpri4Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri4AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri4VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri4VMNamePrefix'), 'nic-', copyIndex(variables('agentpri4Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri4VMNamePrefix'), copyIndex(variables('agentpri4Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAAAAAAA/8xZe3PbNhL/H59iS2tqOw1FSWkuU2eUG8dWzp6rLY9ld24uTmOIXFk4U4ACgH7U1Xe/wYsPWUrcNpmpMglJcIH97S5+i11m47tkzHgypmpKyMaf/5EN2BN8wq4KiTC6pXIGRyJDGHKEt+KOGIGzKVPAuNI0zxXoKcJE5Lm4ZfwKUjGbC45cK7IBMeyL9Bpl7Rb2jIBCO1Rbf0aVRqmWh+mVW+ovGEQUaojvCMF0KiBSmkptkNa0pHlhtEPqLaeaCR6RjGokcwX0jpD94d6/B6cf94ZHJ8PR4OMvg9PR4fC4H3XbP7U7EVn24QmVdIbOoiaao93R2eB0b3h+fNZvPXQXfuDkdPDu8D/91kMvjLw7PB2d7e7vn/ZbDy8WZPe/56eD89HAPP64ICfD0dnh8ehs9+efR3unhydn56eH/dbDywV5uzsajM7fHg/M+v9YkF+OjnePBv3LqVCa0xlempHzo7eD0/6ldUnLScDvoDCDTZW0n73/tRP/9OFi6729/HCx/ayVXHSTTTPXI10z92KrnL39zE8Pc30EjmyoYU8UXO9Aq+aQqClxInHC7koRp3hJ5h2TSsNulslSrnRcEL2ZGbt3AtgwHNzgXtjb5xDss4NNjZVjd6BVPYTXZYB2oFXeRyvJaEk2mwkO7wqems22cosTglwVEnd/KyQeo74V8nprmzwQgA1wryz7uHsF5h9FIDwfIM319L7fJQATIYEB4/DQbbe7vcVryAQBALi9MuwYJhneJLzIc5hqPd9JTDK5aqdiZoXYBN5D658Q4yfowAc7pqfI7Y0BE/YWTKmCMSKHiSh4ZgilGS/QCy4B6/hh57+6JUzB1AlFXmYskV7b+wmzF5UjzqFr1sgENxocyqYOiDl6yCXgleq40EHlc6Bj4XKET3KR94LLD+5hDtStdsc09IjH1YiL8YoRTCkHiUrkN/ik6HSq8JSOjdnfPRLfIhAp5ebZO886PcskKvXnY7RYQSpyMPSp9rLm8EtCmHLnEnjaWcuiZj6Cfh+iKlk0TZSoC8nB+BdzhfWxbsDDJlDqeR2mBt9Yj2RoPEP9IRmRCTPQ7NlYAXu8RkPVsvpOQ71d6/PauTuMnXbngc7hifVa1Hqo8uGi9bCUhxers6BLhCG2CvOJocD+8WidsE+0rRCtMqGb46fIBGhEiCkkqNPEBFI91ks24NBtmLI2WaPGi5ktRh2BbG1gnt3MiBC/99yzD0WTzJ3lVBtryVDBjxDHErW8j1PBucRJYQ7QOL6lTNvxfvclxJ+GsU3IaidJrlC3M6vI5GVj8vSrpgRnta/SvGGYgSrSFJWaFHn+9GS8IJrNEBruIcTGqFAoZyKDmP4LnDm14zL4/nyeUV15GjKK5rQUc3tWRoQURgDd2337cuje+SCA2xCz64xJiOduS6h7pXGW+WvinalQ3rAU2xlx7hqZAjEoNpHPmdLIQXDY6b149RK2uABa6OlzGBfaBPqGo942on4FmisBU2oSloYx4xloYQ+EgrM7UGZlDVRDckNlIgteIhHpdYXdlPIQp7DpXPJ+5HC6AA/uMLVA+0uPSaGk7QSyhufiA9CpOdc7bfvHWRIfWEg7SbIGSgRvnuS6RNyglCzDtqHJZoj/2iit4FizPYia1PKjZfFjHRQz8i3pxvS0GBuqeWuT1IFIJOZIFaokE7c8FzRLWqu7Az8x9hPjy8KdLOqyvJ1dGg+bmOUipXktcmHWN+B4U8G34Hpo8tKpofoPd18w0WUGt7dSnftNG0s03vUv3VYLKUOi7eNChdxIwLUajOowoapjLG4ztrYCe1FtIqs7LMEn4qtGowmjszIPPyq/6ojmCmL6Rwvkhtb1ZVkFoFaRRc0aKiT21ef1uh/ZKA9Ts22YBlnkqEJMwZzNcynMTsQ/2vqT1dVUWbmF0iGCflnH+Somgg+v62GsXLEn0Z1GFDje+g8HgsPE9p6hKKtm+egoK2cNjGOa3aDUTGFsKlhobdUKzW2TjV9BHLuTZq2Ei06o4yp8I0wFz6i891iAao2zuYWsBfxPMG7KN7xjqvryUQG2OGciQy2ukfejdW92008Fk5hZwrjf+sZlzeKtLe+c+ACa7ncnkvOZQRzbCRB/ghnl9ArldmPdJQ4+itxnDeg8EqzYU5rGmnZYNr0kVYx5FQYHZrWyGsPc7xHQNUFMRZFnfFMbsnBMtQmljdy63qdcL3Q7jwxpbEy7LWLv5iXwK2LzKuQW23ysb1kO6I1BptQ0FE5awFxIDb1erwdUwS3mubn2ega3z+4ZQMwgUsmvJ062lfibC34SZifdyJcjamr+Zh99t/cFTCPUjr83lOV0zHKm70FMgqdNi7MDm76b2LSAaWGKkNJltgty5Ywhc30dKxpakQrJUkcVoOza4acTdDU5P0vMz5PyKxDStMx1Pn6Zi0/iYZODtW1b517JuydzrgGmHoSSYNb/X6RWjVYe21+jk98p76G16lsufNeHKGOKjnPMIvhAGhs6VJ6MXz23Pco1S68NajGZwNx+dvJNrkolm2tjRfn/A6apiBrVca/z5PJ4NdjfgYtpMa/pePPGtTe5uErob4XExH9kj8dCaKUlnccGqMfZzsUV9N5834Xv3QcGZ2dZBph2CXlmSBssch/m7Td6J2yqyRw1Zk/4tO+nhJLDlZ6Gi8FvlN+DxBll3GYzMdG3VJq2ZAW31bTQJiIQm0RxS/wRvQHGfdCFGeOFRrN60OcSz6Og1BcKnvh/AAAA//+L8+RX2RkAAA==\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri4VMNamePrefix'), copyIndex(variables('agentpri4Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri4Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri4StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri4Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri4StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri4AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri4VMNamePrefix'), copyIndex(variables('agentpri4Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri4VMNamePrefix'), copyIndex(variables('agentpri4Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri5Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri5VMNamePrefix'), 'nic-', copyIndex(variables('agentpri5Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri5VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri5StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri5StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri5StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri5AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri5VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri5AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri5Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri5Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri5StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri5Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri5StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri5AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri5VMNamePrefix'), 'nic-', copyIndex(variables('agentpri5Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri5AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri5VMNamePrefix'), copyIndex(variables('agentpri5Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri5AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri5VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri5VMNamePrefix'), 'nic-', copyIndex(variables('agentpri5Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri5VMNamePrefix'), copyIndex(variables('agentpri5Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri5VMNamePrefix'), copyIndex(variables('agentpri5Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri5Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri5StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri5Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri5StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri5AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri5VMNamePrefix'), copyIndex(variables('agentpri5Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri5VMNamePrefix'), copyIndex(variables('agentpri5Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri6Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri6VMNamePrefix'), 'nic-', copyIndex(variables('agentpri6Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri6VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri6StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri6StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri6StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri6AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri6VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri6AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri6Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri6Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri6StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri6Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri6StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri6AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri6VMNamePrefix'), 'nic-', copyIndex(variables('agentpri6Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri6AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri6VMNamePrefix'), copyIndex(variables('agentpri6Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri6AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri6VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri6VMNamePrefix'), 'nic-', copyIndex(variables('agentpri6Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri6VMNamePrefix'), copyIndex(variables('agentpri6Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri6VMNamePrefix'), copyIndex(variables('agentpri6Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri6Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri6StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri6Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri6StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri6AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri6VMNamePrefix'), copyIndex(variables('agentpri6Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri6VMNamePrefix'), copyIndex(variables('agentpri6Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri7Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri7VMNamePrefix'), 'nic-', copyIndex(variables('agentpri7Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri7VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri7StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri7StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri7StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri7AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri7VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri7AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri7Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri7Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri7StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri7Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri7StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri7AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri7VMNamePrefix'), 'nic-', copyIndex(variables('agentpri7Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri7AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri7VMNamePrefix'), copyIndex(variables('agentpri7Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri7AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri7VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri7VMNamePrefix'), 'nic-', copyIndex(variables('agentpri7Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri7VMNamePrefix'), copyIndex(variables('agentpri7Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri7VMNamePrefix'), copyIndex(variables('agentpri7Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri7Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri7StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri7Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri7StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri7AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri7VMNamePrefix'), copyIndex(variables('agentpri7Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri7VMNamePrefix'), copyIndex(variables('agentpri7Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri8Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri8VMNamePrefix'), 'nic-', copyIndex(variables('agentpri8Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri8VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri8StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri8StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri8StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri8AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri8VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri8AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri8Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri8Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri8StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri8Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri8StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri8AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri8VMNamePrefix'), 'nic-', copyIndex(variables('agentpri8Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri8AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri8VMNamePrefix'), copyIndex(variables('agentpri8Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri8AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri8VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri8VMNamePrefix'), 'nic-', copyIndex(variables('agentpri8Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri8VMNamePrefix'), copyIndex(variables('agentpri8Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri8VMNamePrefix'), copyIndex(variables('agentpri8Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri8Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri8StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri8Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri8StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri8AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri8VMNamePrefix'), copyIndex(variables('agentpri8Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri8VMNamePrefix'), copyIndex(variables('agentpri8Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri9Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri9VMNamePrefix'), 'nic-', copyIndex(variables('agentpri9Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri9VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri9StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri9StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri9StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri9AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri9VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri9AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri9Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri9Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri9StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri9Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri9StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri9AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri9VMNamePrefix'), 'nic-', copyIndex(variables('agentpri9Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri9AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri9VMNamePrefix'), copyIndex(variables('agentpri9Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri9AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri9VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri9VMNamePrefix'), 'nic-', copyIndex(variables('agentpri9Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri9VMNamePrefix'), copyIndex(variables('agentpri9Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri9VMNamePrefix'), copyIndex(variables('agentpri9Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri9Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri9StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri9Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri9StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri9AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri9VMNamePrefix'), copyIndex(variables('agentpri9Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri9VMNamePrefix'), copyIndex(variables('agentpri9Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri10Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri10VMNamePrefix'), 'nic-', copyIndex(variables('agentpri10Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri10VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri10StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri10StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri10StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri10AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri10VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri10AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri10Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri10Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri10StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri10Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri10StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri10AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri10VMNamePrefix'), 'nic-', copyIndex(variables('agentpri10Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri10AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri10VMNamePrefix'), copyIndex(variables('agentpri10Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri10AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri10VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri10VMNamePrefix'), 'nic-', copyIndex(variables('agentpri10Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri10VMNamePrefix'), copyIndex(variables('agentpri10Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri10VMNamePrefix'), copyIndex(variables('agentpri10Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri10Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri10StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri10Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri10StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri10AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri10VMNamePrefix'), copyIndex(variables('agentpri10Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri10VMNamePrefix'), copyIndex(variables('agentpri10Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri11Count')]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri11VMNamePrefix'), 'nic-', copyIndex(variables('agentpri11Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpri11VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpri11StorageAccountsCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri11StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri11StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri11AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpri11VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpri11AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('agentpri11Count')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri11Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri11StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri11Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri11StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri11AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri11VMNamePrefix'), 'nic-', copyIndex(variables('agentpri11Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri11AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpri11VMNamePrefix'), copyIndex(variables('agentpri11Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri11AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpri11VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri11VMNamePrefix'), 'nic-', copyIndex(variables('agentpri11Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('agentpri11VMNamePrefix'), copyIndex(variables('agentpri11Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n',variables('agentRunCmdFile'),variables('agentRunCmd')))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpri11VMNamePrefix'), copyIndex(variables('agentpri11Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri11Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri11StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri11Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri11StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri11AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri11VMNamePrefix'), copyIndex(variables('agentpri11Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('agentpri11VMNamePrefix'), copyIndex(variables('agentpri11Offset')))]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterStorageAccountName')]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('masterVMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('masterSubnet')]",
            "[variables('agentpri0Subnet')]",
            "[variables('agentpri1Subnet')]",
            "[variables('agentpri2Subnet')]",
            "[variables('agentpri3Subnet')]",
            "[variables('agentpri4Subnet')]",
            "[variables('agentpri5Subnet')]",
            "[variables('agentpri6Subnet')]",
            "[variables('agentpri7Subnet')]",
            "[variables('agentpri8Subnet')]",
            "[variables('agentpri9Subnet')]",
            "[variables('agentpri10Subnet')]",
            "[variables('agentpri11Subnet')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('masterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('masterSubnet')]"
            }
          },
          {
            "name": "[variables('agentpri0SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri0Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri1SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri1Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri2SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri2Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri3SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri3Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri4SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri4Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri5SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri5Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri6SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri6Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri7SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri7Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri8SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri8Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri9SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri9Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri10SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri10Subnet')]"
            }
          },
          {
            "name": "[variables('agentpri11SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentpri11Subnet')]"
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[copyIndex(2200)]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterSshPort22InboundNatRuleNamePrefix'), '0')]",
      "properties": {
        "backendPort": 2222,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "22",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('masterLbID')]",
        "[concat(variables('masterSshPort22InboundNatRuleIdPrefix'),'0')]",
        "[concat(variables('masterSshInboundNatRuleIdPrefix'),copyIndex())]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": "[variables('masterLbInboundNatRules')[copyIndex()]]",
              "privateIPAddress": "[concat(variables('masterFirstAddrPrefix'), copyIndex(int(variables('masterFirstAddrOctet4'))))]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('masterVnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountName')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-swarmmode-cluster.sh\n    permissions: \"0744\"\n\n')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('masterStorageAccountName')), variables('apiVersionStorage')).primaryEndpoints.blob, 'vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat('acsengine-', variables('masterVMNamePrefix'), copyIndex())]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[variables('masterCount')]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('masterVMNamePrefix'), copyIndex()))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "settings": {
          "commandToExecute": "[variables('masterCustomScript')]",
          "fileUris": []
        },
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agentStorageAccountPrefixes": {
      "type": "array",
      "value": "[variables('storageAccountPrefixes')]"
    },
    "agentStorageAccountSuffix": {
      "type": "string",
      "value": "[variables('storageAccountBaseName')]"
    },
    "agentpri0StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri0Count')]"
    },
    "agentpri0StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri0Offset')]"
    },
    "agentpri10StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri10Count')]"
    },
    "agentpri10StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri10Offset')]"
    },
    "agentpri11StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri11Count')]"
    },
    "agentpri11StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri11Offset')]"
    },
    "agentpri1StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri1Count')]"
    },
    "agentpri1StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri1Offset')]"
    },
    "agentpri2StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri2Count')]"
    },
    "agentpri2StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri2Offset')]"
    },
    "agentpri3StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri3Count')]"
    },
    "agentpri3StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri3Offset')]"
    },
    "agentpri4StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri4Count')]"
    },
    "agentpri4StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri4Offset')]"
    },
    "agentpri5StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri5Count')]"
    },
    "agentpri5StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri5Offset')]"
    },
    "agentpri6StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri6Count')]"
    },
    "agentpri6StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri6Offset')]"
    },
    "agentpri7StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri7Count')]"
    },
    "agentpri7StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri7Offset')]"
    },
    "agentpri8StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri8Count')]"
    },
    "agentpri8StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri8Offset')]"
    },
    "agentpri9StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpri9Count')]"
    },
    "agentpri9StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpri9Offset')]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}
// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/origin/cloudprovider/azure.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x40\xe6\x65\xf7\xa1\x90\xd2\xaf\xa5\x92\x1f\x8c\x33\x80\x85\x49\xb2\xb6\x03\x45\x55\x65\x51\x1a\x68\xb4\x14\x50\x12\xba\xad\x10\xff\xfd\xca\x49\x20\xb4\xd0\xab\xab\xdb\xfb\x96\xcc\x39\x33\x3e\x33\x73\x06\x14\x75\xb4\x4b\xfa\x80\x37\x9b\x4a\xad\x3f\x4e\xd2\x30\xae\x75\x97\x49\xba\x18\xbf\x84\x95\xed\xd6\xca\x08\x9c\x49\x05\xae\xf6\x01\x84\x0e\x04\x97\xf8\x39\x4d\x57\xc9\x6d\xbd\xbe\xd9\x54\xfe\x8a\x16\x4f\xe1\xdb\x3e\x97\xf9\x49\xc5\xfe\xbb\x26\xd3\x38\x5a\xcc\x2a\xdb\xed\x6d\xe3\xe2\x1f\x3b\xaf\xe2\x10\x45\xb4\xc3\x04\xae\xbf\x8e\xe3\xfa\x3c\x7a\xac\x87\xe9\xe4\xa9\x6e\x55\x33\x74\x48\x78\x06\x22\x54\x04\xa4\x4b\x7c\xd9\xf5\x94\xa6\x5e\xe0\x2a\x7c\x6e\xdb\x76\x51\xa8\x0b\x44\xa8\x16\x10\xa5\x99\xab\x40\x0c\x08\xc7\x57\x3b\x0c\x38\x50\xc5\x3c\x57\x2b\xd6\x07\x2f\x50\xb8\xb1\x87\x8a\x2e\x28\x67\xe0\xaa\xdf\xe8\xe3\xa6\x59\x28\xeb\x93\xbb\xbd\x3a\x89\xaf\x0e\xa2\x43\xc2\xcb\x00\xf5\x84\xc4\x96\x65\x55\xef\x27\xf3\xb5\x29\xfa\x90\xeb\x60\x2e\x53\x8c\x70\x4d\x9c\x01\x08\xc5\x24\x7c\x77\xb0\xbb\x82\x94\x07\x52\x81\xf8\x62\x95\x7f\xa4\xb6\x96\x8a\x28\xc0\x8b\xf0\xff\xd3\xb0\xf2\x7a\xe0\x62\xb3\xd7\xb3\xa2\xe9\xb3\xf3\x62\x1c\x0e\x93\xd4\x1b\x80\x18\xe1\xcf\x01\x2d\xc5\xe0\x38\xd8\x26\x9c\xb7\x08\xed\xe1\x55\xbc\x7c\x7b\x3f\x82\x7d\xe1\xdd\x8d\x70\xae\xa2\x9c\xe4\xf7\x97\x2b\x95\x60\x54\x69\x01\xd4\x73\xdb\xac\xa3\x69\x17\x68\x0f\xa3\xe9\x78\x9e\x84\x3b\x6b\x92\x40\x79\x9a\x7a\x7d\x9f\xe4\x5e\x13\xa0\xc0\x35\x5f\x18\xd9\x3b\x0e\xb8\xa4\xc5\x41\x0f\x1a\x18\xa5\xf1\x3a\x44\xb9\xd2\x7f\x03\x4f\x11\x6d\xda\x02\xd7\xd1\xad\x91\x02\x89\x2f\x1b\xcd\xcb\xe6\xf5\x4d\xa3\x79\x6d\xbc\x92\x75\xfb\x50\x14\xc9\x9b\x5c\x4e\xa7\x87\xff\xba\x4d\x18\x0f\x04\xe8\x21\x61\x0a\xa3\x2b\xdb\xde\x3f\x9a\xe3\x02\xda\x02\x64\xb7\xbc\x0e\x74\x61\x1f\x91\x1c\xb3\xb6\xdd\x91\xa0\xf3\x23\x7c\x28\x98\x82\x92\x70\xea\x15\xe2\x94\xb8\x8d\x8c\xf8\x24\x9c\xac\xe3\x28\x7d\x2f\x9c\xae\x84\x71\x85\xa3\x29\xd1\x6d\xc6\x01\x9b\x83\xcf\x8f\x7e\x32\xae\x4d\xe2\x34\x67\x15\x3b\xa3\x20\x94\x99\x6c\xf7\xc3\xc0\xb2\xe8\xa7\xe4\x24\x8c\x5f\xc3\xb8\x2c\xd0\x83\xd1\x17\x94\xff\xc2\xf7\xc3\x95\x29\x2e\xf7\x9b\xcc\x3b\x31\x87\xf7\x6b\x2a\x33\xea\x4f\xa5\xe6\x8c\x13\x7a\x57\xe1\xa1\xda\x8c\x76\x42\x72\xc6\x2a\x05\x67\xb4\x23\xd5\x56\xf5\x7e\xbe\x9c\xcd\xa2\xc5\xac\x18\xb1\x03\xad\xa0\x83\x51\xfb\xa0\x29\xee\x75\xb4\x4f\x68\x8f\x74\x40\x73\x18\x80\x49\x37\x2f\xe4\x33\xc1\x59\x06\x2a\xac\x36\x8d\xe6\x59\xad\x0f\x9e\xf5\x7d\xe1\xb5\x3f\x59\xbe\x0f\xe6\x2e\x24\x46\x8f\xe3\x24\x9a\x20\xab\x6a\x55\xef\xc7\xeb\xf4\xf9\xa1\x9c\x6f\xb7\xb8\x7e\x94\x44\x2f\xab\x79\x88\xac\x1f\x01\x00\x00\xff\xff\x20\x54\xc1\x6d\x5d\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x6b\x6f\x1b\xbb\xd1\xfe\xae\x5f\x41\x04\x07\xc8\xc9\x8b\x77\x77\x25\x3b\xd7\x05\x8a\x42\xb5\x9d\x13\xe1\xd8\xb1\x2a\x3b\x45\x81\xba\x08\x28\x72\xb4\x62\xc4\x25\x37\xbc\x28\x56\xdc\xfc\xf7\x82\x97\xbd\x4a\x4a\xd2\x9c\xa0\x75\x02\xc4\x4b\x3e\x33\x1c\x72\x1e\xce\x85\xc1\xb4\x64\x5a\x33\x29\xce\xa4\x58\xb1\x22\x1f\x21\x54\x71\x5b\xb0\xce\x37\x42\x7f\xb1\x8c\xd3\x73\x58\x61\xcb\x8d\x0e\x43\x08\x11\x0f\xb0\x0a\x1b\x26\x45\x3d\x88\x10\xae\xd8\xdf\x40\x39\x8d\x39\xda\x4e\x9a\x61\x10\xdb\x1c\xfd\xe3\x9f\xcd\xf7\x86\x09\x9a\xf7\x15\x87\x15\x1b\x84\x02\x2d\xad\x22\xa0\x5b\xdd\x08\x71\x56\x32\xa3\x73\xf4\xf0\xa5\x33\xa8\xe0\xa3\x05\xdd\x19\xf6\x6a\xaf\xb7\xa0\x14\xa3\xf0\x83\x06\x77\x0c\x6c\x34\x75\x2c\x9c\x4b\x3a\x57\xa0\xc1\xfc\x98\x76\xca\x34\x5e\x72\xc8\xd1\x0a\x73\x0d\x83\x45\xe3\x81\x4c\xfb\xae\xf1\x20\x59\x81\xd0\x6b\xb6\x32\x29\x93\xd9\xac\xc4\x05\xcc\x25\x67\x64\xf7\x83\x4e\xb9\x07\x62\x1d\x72\x61\x79\xf7\x9c\x13\x54\x62\x43\xd6\x5e\xff\x54\x08\x69\xbc\xba\x9e\x23\x12\xb4\x81\x5d\x8e\x98\x83\xe8\xb4\x67\x16\x05\xb1\x4b\x1a\xd5\x1d\x19\x84\xb6\x98\x5b\xc8\xd1\x63\xa3\x2c\x3c\xee\xcc\x08\x5c\x42\xde\x9a\x93\x50\x10\x0c\x68\x07\x20\xc5\xe2\x10\x1d\x92\x86\x25\x39\xaa\x24\xd5\x47\xa6\x96\xce\x8b\xba\xc7\x98\x0f\x40\x4c\x8e\x9c\x1d\x9d\x61\xbd\x61\xd5\xb5\x5f\x89\x7b\x3b\x5e\x63\xc6\xad\x82\x01\x2e\x38\xa9\x73\xf8\xd1\x3f\xb8\x28\x14\x14\xd8\x48\xd5\xb9\x4b\x4a\xde\xef\xce\x38\x03\x61\x66\x62\x25\x83\xed\x04\x94\x79\xcd\x9c\xf7\x5b\x91\x64\xa5\xa4\x30\x89\xc7\xa7\x44\x19\x0f\xdc\xc0\xee\xab\xb8\x0d\xec\x46\xb8\x62\x97\xb0\x05\xae\xf3\x51\xe2\x7c\x3b\x70\x35\xb6\x66\xdd\x9a\x13\x6f\xca\x1b\xc0\x14\x54\x34\xc6\x1b\x77\x36\xcd\x51\x47\x73\x42\x70\x63\x44\x04\xc8\xb2\x94\xe2\x2d\x2e\x6b\x07\x24\x47\x8c\x1a\x05\x62\x19\x85\xc3\x2a\x73\x05\x2b\x76\xdf\x4a\xfd\x3d\x59\x40\x29\x0d\x24\x17\x0e\x93\xf8\xd1\x42\x49\x5b\x05\xf8\x3e\xee\x37\x37\xe9\x07\xad\x06\xe5\x98\x72\x0c\xf9\x4e\x83\x1a\x11\x29\x8c\x92\x9c\x43\xc7\x0b\xc0\x81\xb4\x17\x82\x4b\xb2\x79\xeb\x09\xd7\xd0\x36\x29\xb1\x36\xa0\x92\x56\xd8\xb1\x45\x83\xda\x32\x02\x37\xee\x1f\x51\x9c\x81\x8a\x97\x5d\xb3\x42\xd4\xc7\xd7\xf5\x66\xc4\x27\x61\xbe\x39\xc0\x8e\x1f\x07\x08\xe7\xbf\xce\x92\x39\x7a\xfc\x7f\x8f\x47\x44\x2a\x3d\xe5\x5c\x7e\x02\x7a\xad\x58\xc1\x84\xf7\xec\xaf\x7f\x66\x4f\xb2\x6c\x72\xf2\xe2\x2e\x1d\xfb\xbf\x93\x5f\xf3\x7f\xdd\x7d\x7e\xd2\x4c\x71\x49\x30\x5f\x4b\x6d\x06\xe3\x0f\x0f\xe8\xaf\x56\x1a\xb8\x02\x83\xd1\xaf\x4c\x50\xb8\x47\xe9\x95\xdf\x6e\x3a\x9b\x6b\x34\x7e\x92\xde\x18\xc5\x44\x81\xbe\x7c\x19\x88\x6e\xec\x12\x94\x00\x03\xfa\x2e\xa5\x21\x26\x7d\x1b\x71\x97\xea\x2d\xb9\x4b\x09\xb7\x6e\x89\xbb\xd4\xdb\x75\x54\xec\x6b\xc6\xa6\x17\xf7\xc6\x39\x9c\x07\x6b\xdf\x48\x6d\x9c\xf7\xf7\xed\x6c\xdc\x78\xcc\xcc\xbe\xda\xb8\xf9\xff\x44\x9f\xdf\xd4\x77\xee\x7d\x00\x9b\xbc\x38\xb9\x4b\x4f\x0f\xfb\xec\xc8\x42\xdf\x38\xbd\x46\x2a\x8e\x53\xa1\x5b\xaa\x2f\x99\xa0\x53\x4a\x15\x68\x9d\xa3\x71\xea\xff\xe4\x2f\xc7\xcf\x4e\xe3\xdc\x5b\x30\x9f\xa4\xda\xe4\xc8\x90\xea\xe9\x08\x0c\xa1\xfd\xe8\x44\x70\x8e\xc2\x65\x48\xdd\x64\x1b\x08\x5a\x9a\xf7\xa6\xbd\x70\x84\x34\x34\x3f\x80\x70\x54\x47\xc8\x2a\xee\xaf\x6d\x82\xd6\xc6\x54\x3a\xf7\xae\x39\xe0\x90\xfc\xe4\xf4\xc5\x2b\x6f\xdd\x8d\x91\x0a\x17\xd0\x6e\xb0\x3d\xf6\x38\x15\x02\x4c\xde\x99\x48\x99\x3c\x04\xec\x67\x40\x77\x8a\x37\xee\x14\x07\x6a\xba\xa9\xec\x00\xac\xab\xc4\x27\xbf\xd6\xb2\x95\x54\x25\x36\x39\xba\x9a\xde\xdc\x5e\x2c\xde\x5f\x2f\x2e\x7e\x7b\xff\x6e\x71\x99\xfc\xf2\x40\x64\x59\x49\x01\xc2\x7c\xc9\x7f\x79\xd8\x06\x0d\xae\x52\xe1\xd8\x80\x36\x75\x11\xc0\x86\x19\xc5\x29\x65\x22\xdc\x81\x05\x14\x4c\x1b\xb5\xab\x0f\x29\x47\x54\x92\x0d\xa8\x44\xc5\x89\x9a\x41\x8e\x40\xf9\xb3\xf1\x78\x3c\x0a\x79\x2a\x1c\x6e\x4c\x51\xee\x4c\x38\x98\x7d\x97\x13\x9c\x2c\xad\xa0\x1c\x8e\x79\x3b\x4a\x7e\xdd\xe1\x03\x50\xf0\x79\x25\x95\xc9\xd1\x64\x7c\xf2\x6c\x3c\x6a\x7d\xd2\x35\xcb\x19\x81\x2b\xe6\xe2\x2c\xa8\xa9\x2a\x6c\x09\xa2\xae\x33\x95\x15\x86\x95\x90\x90\x4e\x39\x9a\x38\xb4\xce\x34\x18\xc3\x44\xa1\xd3\xcd\x4b\xe7\xf2\x6c\x3b\xc1\xbc\x5a\xe3\xc9\x9f\x9a\x6c\xad\x83\xcf\x92\x25\x26\x1b\x10\xb4\x96\x76\xbc\x3a\xed\x01\x4a\xa0\x0c\x27\x66\x57\x41\xbb\x42\xc5\x19\xf1\x75\x4f\xb6\x15\x34\xed\xb0\xab\x52\xd2\xc8\xa5\x5d\xc5\xec\x28\x2d\x75\x99\x6f\xcb\x9a\x94\x9a\xa0\x47\xf8\xb3\x55\xf0\xa8\x83\xe8\xdb\xff\x28\x03\x43\x32\xe9\xc3\x7b\xe6\x01\xb5\x86\xcc\x4b\xa6\x0e\xee\xc4\xdb\xec\x30\x38\x97\x18\x21\x7c\x26\x61\xa2\x48\x9c\xc3\x92\x95\x73\xc6\xa1\x25\x82\x7f\xb2\x70\x99\x1f\x1d\x54\xb0\x81\xdd\xf7\xc8\x6f\x60\xf7\xe8\xbf\xb1\xf1\x32\xf2\xc3\x0a\x47\x9e\x66\x60\x36\xcf\xd1\xc3\xc3\xb7\xf2\x98\x67\x1d\xbd\xd8\x32\x9f\xf5\x6f\x59\x09\xd2\x9a\x1c\x09\xcb\xf9\xb7\x6b\xb2\xc8\xe5\x58\x07\x75\xe9\xbe\x4f\xf8\x1e\x28\xd0\x5d\x93\x35\x50\xdb\x73\x58\xbd\x70\x33\x15\x68\x1f\x34\x1d\x38\xe6\x06\x97\x7e\xd0\xbe\x80\x8e\x65\x83\x7e\x2b\x29\xcc\xa5\x32\x0b\x2c\x0a\x57\x46\x3f\xee\xcc\xdd\xd8\xa5\x00\x77\x56\x2f\x4e\xd2\x53\x1f\xf6\xb3\xc9\x73\x37\xef\x8a\x77\xe2\x24\x43\xf1\xe6\x9a\xb0\x78\xb8\xde\x6c\xcf\x27\x88\x99\xf6\xf7\x86\xe5\x67\xb1\xea\x13\x22\x94\x4e\x83\x6e\x0a\x13\x02\x95\x9b\x36\x20\xcc\xed\xae\x72\x8a\xbf\xe3\xca\xfc\x7f\x17\x13\x37\x87\xd0\xd2\x2a\x17\x05\x9f\x8e\xc7\xa3\xd8\xc3\xd4\x5a\xbf\x4b\xa9\x17\xfa\x58\xe9\x1c\x9d\x78\x0d\xfb\x9b\x71\xbf\xc5\x50\x13\x0e\xad\x09\xf2\x97\x52\x56\x2e\x3a\xfc\x0f\xb6\xfb\xfc\x0f\x6f\xf7\xd4\x6b\xd8\xdb\x4b\x77\xb7\xc3\x0a\xd7\x2b\x0c\x57\x32\xb2\x60\x6e\x97\x9c\x91\x77\x8b\xcb\xbc\x97\x93\x8f\xd6\x5e\x79\x27\x63\x3b\x2e\xba\xeb\x26\x42\x51\xd1\x46\xf3\x18\x5c\x62\xb1\x71\x36\x3b\x5f\xb8\x0c\x90\x4e\x4e\x5e\x06\x62\x3e\xdd\xc3\xc4\xb2\x80\x30\xaa\xf6\xa1\x08\xb9\xc2\x36\x30\xfc\x12\x44\x61\xd6\x39\x7a\xd5\xf1\xf4\x6c\xde\x59\x29\x6a\x8a\xb5\x4f\xe6\x8e\xe8\xb0\x74\xb4\x7a\xee\x9f\x3b\x42\x43\xa0\x80\xae\xb1\x69\x2b\xac\x44\x6e\x75\xa2\xbd\x64\x7b\xd5\xfa\xbb\xea\x5d\x37\xd9\x6f\xb7\xb0\xd6\x60\x7e\xc2\x01\x67\x44\x0a\x2d\x39\x64\x23\xd7\x2b\x61\x4f\xd4\x26\xa8\x96\x60\xd6\x92\xe6\x08\x5b\xe3\x0a\x16\x46\x41\x18\x66\x76\xf3\x18\x57\x75\x3e\x7a\x78\x48\x10\x5b\xa1\xf4\x42\xe0\x25\x87\xe9\xf4\x7c\x6a\xcd\xda\xa1\x02\xd1\x7c\xbc\x4c\x62\x0f\x3e\x75\x51\x18\x4d\xcf\x03\x35\xd7\x98\x73\xf0\xb1\xa6\x7d\xa7\xe0\xb2\x60\xa2\xd3\x12\x97\xb8\xaa\x98\x28\xae\xa2\x19\x84\x63\x56\xfa\x89\x7e\x6e\x38\xf2\x08\x11\x8a\x94\xeb\x0a\xc4\xec\x7c\x36\x30\xbd\x6e\xb0\x42\xa8\x3e\xf7\x91\x3f\xf5\x06\x86\xfd\xa7\xd3\xe9\x79\x8c\xe3\xe7\x21\xea\xb7\xf0\x1b\x20\xca\x85\xc3\xa3\x22\x01\xd0\x15\xc3\xac\xec\x3c\x2e\x30\xda\x7d\x0f\xd1\x76\xd9\x7c\x55\x0a\x56\xa0\x14\xd0\x77\xb1\x1f\xed\x02\xad\x60\x1f\x2d\xbc\x77\xc3\xcd\xe8\x10\xd3\x9b\x84\x12\x33\xde\x9d\xf5\x03\xf1\xbb\xae\x97\xe3\x01\x5a\xb3\x96\x8a\x7d\x86\x96\x49\xde\x19\x69\xc9\x88\x92\x5a\xae\x8c\x14\x9c\x09\x97\x44\xcb\x6c\xb8\xf1\x5b\x10\x38\x1e\x54\xe6\x69\x7a\x92\x35\xfa\x9a\x15\x8c\xdc\x80\xf8\x49\xda\xbd\x2e\xcf\x3d\x10\xb4\xc7\xb1\x4b\xd7\xd4\xa0\x0a\x6b\xfd\x49\x2a\x3a\x64\x5a\x43\xac\x9f\x4b\xb4\xd5\xb1\x6c\xbb\x36\xde\x12\xda\x23\xe4\x9b\xdb\xb9\x1f\x9c\x47\x23\x0f\x50\x33\x26\xd1\xe9\x7e\xf1\xfc\xf3\x02\x6b\xad\xeb\x8f\x6a\xd1\x30\x78\xe3\x6d\x86\xae\xf0\xfd\xb4\x80\x1b\x97\x13\xa8\x4b\x29\x75\x56\x8a\xd3\x21\x2c\x6a\x2d\xba\x83\xe1\xea\xe8\xe3\xf5\x4b\x80\x25\x3a\xe0\xd2\x1d\x2e\x1d\xa1\x3d\x21\xba\x26\xb8\xac\xaa\xf5\xad\x1b\x1e\x98\xf1\xf2\x79\x5d\x0c\x34\x1c\x3d\x04\x7b\x36\x1e\x8f\x2a\x6c\xb5\x63\x61\xfb\x88\x12\x42\x55\x35\x68\xa4\x96\x52\x1a\x6d\x14\xae\x42\x87\x75\xd4\xf8\x20\x57\x57\x5e\x4d\x26\x98\x89\x95\xc2\xda\x28\x4b\x8c\x55\xa1\x94\xaa\x30\xe9\xbd\x21\x31\x07\xe9\xca\xdc\xac\xb1\x02\xda\x3c\x5c\x1e\x12\x1a\x55\x4a\x7e\x00\xd2\x09\xe8\xb1\x8d\x73\x05\xdb\x8d\x7f\xb7\x92\x2a\x47\x42\x52\x48\x94\xe4\x90\xf6\xba\xdc\xcc\x35\x96\xd6\x40\xdd\xf1\x44\x65\x8b\xf0\xca\x77\x05\x5a\xe3\xa6\x4e\xec\xcf\xdd\x42\x59\xb9\xee\xb3\x29\x22\x89\x55\xcc\xec\xa6\x9c\x4b\x82\xdd\x92\xe1\xc6\x11\xdd\x8c\xc4\x9a\x53\x8f\xf3\xec\xa4\x9e\xbc\xc4\x4b\xe0\x7a\x0e\x6a\x1e\x94\xe7\xe8\x59\x78\xa8\x63\x74\x28\x37\x19\xd7\x3f\xc9\xe4\x55\xfd\x93\xf9\xd1\x91\x92\xd6\x35\x72\xed\x19\x68\xbb\xa4\xb2\xc4\xee\xf6\xdf\x5e\x5c\xcd\x17\xd7\xef\x6e\x2f\x16\xb3\x79\x2a\x58\xe5\xba\xf2\x98\x87\xa7\x84\xb8\xf6\xa0\x15\xf3\xff\x39\x10\xc8\xb9\x70\x21\x1a\x04\x01\xdd\xa6\xae\x12\x0b\x5c\x00\x6d\xde\x30\x93\xfa\xac\xfd\xef\xfe\x8d\xd8\x5f\x6c\x37\x5e\x71\xb9\xfb\xc6\x2d\xaf\x14\xdb\x62\x03\xbf\x0f\xde\xf6\x70\xb0\xca\xd5\x6b\x7e\xbe\xee\x82\x7d\x34\x88\xe0\xb8\xfc\x9e\x84\xc7\x78\x01\x1d\xde\x1c\xeb\xfe\xe4\xe0\xab\xce\xc1\x9b\xbe\xff\xc6\x73\xa0\xb7\xd1\xbe\xd3\xae\x5b\xfd\xe6\x01\xb8\x79\xeb\x19\xb6\x39\x11\x1f\x76\x52\xe2\xfb\x48\x22\x3d\x13\xaf\x39\x2b\xd6\x26\xdc\xc4\xe6\x79\x39\x36\x5c\xfd\xa0\xb2\x95\xdc\x96\x9d\xd7\x12\xba\x13\xb8\x64\xc4\x07\x54\x17\x2d\x98\x28\x42\x7d\x42\x63\xc8\xff\x77\x00\x00\x00\xff\xff\x95\x6c\x5f\xfe\x9a\x1a\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x16\xa5\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x5a\x85\xda\x5a\x25\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x24\x15\xae\x79\xc9\x48\x0a\x00\x01\x00\x00\xff\xff\x58\x97\xb9\x86\x74\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x6d\x6f\xdb\x38\x12\xfe\x9e\x5f\x31\x70\x0b\xf8\x0e\xa8\x6d\xb4\x5d\xe0\x6e\x05\xf4\x83\x37\xab\x36\xc1\x36\x71\x60\x3b\x87\xf6\x16\x0b\x2d\x45\x8d\x2c\x5e\x68\x8e\x96\xa4\xec\x78\x83\xfc\xf7\xc3\x88\x94\xe3\x28\x71\x9b\xdd\x7c\x8a\xcc\x79\x79\x38\xf3\xcc\x0b\x47\xa3\xd1\xc9\x2b\xf8\x78\xfe\xe5\x22\x4d\x60\x6a\x76\xbe\x52\x66\x05\x39\x6a\xda\x82\x32\x20\xb4\x1e\x49\x51\x3b\xa8\x84\x03\xe5\x87\x0e\x36\x42\x37\x08\x16\x6b\x2d\x24\x16\x90\xef\xc0\x61\xc1\xa2\xbe\xc2\x93\x57\x10\xff\xa8\x46\xe3\x2a\x55\xfa\xb5\x70\x1e\xad\x93\x56\xd5\x7e\xec\x2a\xd8\x56\x4a\x56\xa0\x1c\x18\xf2\xa0\x0a\x14\xfa\x0d\x6c\x11\x5c\x45\x8d\x2e\xa0\x54\xb7\xe0\x2b\xe1\xc7\x27\x9a\xa4\xd0\x41\x39\x39\x01\xa8\xc8\x79\xc7\xff\x00\xb4\x27\xfc\x7d\x02\xb0\x11\x36\xfe\x2a\x8c\x53\xb9\xc6\x4c\x92\x31\x28\xbd\x22\x93\x04\xc9\x47\xa7\xf5\xce\x57\x64\x32\x65\x3c\xda\xda\x22\x1b\x87\x49\xe3\xec\x24\x57\x66\x12\x0e\xdf\x9d\x9c\x3c\xba\x40\xa6\x1c\x1b\xf5\x42\x19\xb4\xea\x4f\x2c\x12\xf8\x28\xb4\xc3\x9e\x94\xd4\x0a\x8d\xcf\x72\x65\x84\xdd\x1d\x18\x25\xf9\xc4\xde\x5a\xac\x30\xf3\x62\x95\xc0\x60\xf3\x9f\x74\xbe\x38\x9f\x5d\x0e\xfa\x42\x5b\xcc\xd9\xab\x23\x8d\x51\xc1\x88\x35\x26\x30\x38\xbf\x98\x7e\x4a\xb3\xab\x79\xfa\xf1\xfc\xcb\x24\x7c\x2c\xbf\x5e\xa5\xa3\x2d\xe6\xa3\xa8\x90\xf4\xad\x5a\x5c\x65\x8d\xd5\x09\x0c\x2f\xa6\x8b\x65\x3a\xcf\x66\xf3\xf4\x53\x76\x3d\xff\x3c\x7a\x7d\x27\x69\x5d\x93\x41\xe3\xef\x93\xd7\x77\x1b\xb4\x4e\x91\xb9\x1f\xf6\xd0\x84\x3c\x64\x05\x96\xa2\xd1\x3e\x73\x4d\x5e\xd0\x5a\x28\x93\xc0\x70\x99\x5e\x5c\xcd\x67\xd7\xcb\x74\x7e\x7e\x35\x36\xaa\x1e\x2b\x1a\x06\xb7\x91\x55\xf1\xff\x65\xa5\x5c\x97\xe5\x1c\xc1\xef\x6a\xfc\xa0\x4c\x69\xc5\x1b\xc8\x1b\xcf\x14\xa8\xc4\x06\xc1\x13\x68\xb5\x41\xd8\x2a\x5f\x81\xc5\x95\x22\x13\xc4\xa0\x24\x0b\x86\xb6\xd1\x5c\x8e\x52\x34\x0e\x81\x4a\xd0\xb8\x12\x72\x07\x16\x85\x23\xe3\x7a\xc8\x2d\x35\x8c\xdc\xa1\x46\xe9\xc9\x26\x30\x3c\x34\xda\xbf\x27\x9f\x39\x6f\x77\xdf\x96\x7f\x05\x97\xd4\x52\x17\xb6\xd5\x0e\x3c\x5f\x4c\x39\x10\x50\xa8\xb2\x44\x8b\xc6\x43\x21\xbc\x68\xaf\x18\x2e\xa7\x3c\xa8\x3e\xb0\xda\xd2\x1a\x7d\x85\x8d\xcb\x0c\x15\x78\xe0\xf1\x2e\xba\x1c\x26\x30\x0c\x5e\xef\xbb\x80\x2e\xd0\xc3\xf4\xcf\xc6\x22\xb8\x1a\xa5\x2a\x95\x0c\xae\x38\x36\x5c\x11\x58\x40\x77\x85\x9e\xbb\x70\x7a\x70\x41\x4f\x96\x59\x55\x5b\xda\xa8\x82\xcb\x60\x20\xd8\x70\x96\x6b\xca\x07\x2f\x54\xbe\x51\xa6\x48\x60\x40\xf9\xff\x50\xfa\x97\x2a\x3d\xb8\xc9\x84\x94\xd4\x18\x1f\x98\x3d\x9c\xa7\x9f\xce\x17\xcb\xf9\xd7\x6c\xb1\x9c\xcd\x99\xd7\xd3\xff\x5e\xcf\xd3\x6c\x7a\x7a\x3a\xbb\xbe\x5c\x5e\x4e\x2f\xd2\x7e\xba\x5e\xee\xe2\x06\x77\xdf\xf5\xf0\x4b\xfa\xf5\x6f\x38\xd8\xb7\x86\x04\x06\x9d\xdc\xdf\x08\x85\x45\xa1\xd7\x09\x0c\x24\x59\x1c\x6f\x95\x29\x68\xeb\xc6\x06\xfd\xe0\x99\x5a\x8a\xbf\x9c\x09\x5b\x80\xa4\x02\x03\x05\x63\x7d\x8c\x1f\xc9\x9c\x36\x96\x09\xa9\x99\xa6\x08\x52\x37\x5c\xc7\xe0\xbc\xf0\x08\xc2\x43\x81\xb5\xa6\xdd\x9a\x29\xeb\xd5\x1a\xa1\x20\x0c\x8d\x39\xd4\x62\x85\xc0\xdc\x74\xd1\x58\xc0\x8f\x16\x0b\x2e\x53\x3e\x0d\x7d\x21\x14\xab\x16\x39\x6a\x07\xa2\xae\xb5\xc2\x02\x84\x61\x2e\x8a\x62\xc7\xb2\x39\xc2\x1f\x0d\x5a\x85\x45\x34\x25\x56\x42\x19\xe7\x19\x03\xdb\xa9\x49\x19\xdf\xce\x10\x46\x11\x66\x49\x04\xd7\x8e\x83\x20\xa4\xc5\x2e\x27\xba\x71\x60\x1b\x33\x86\xa9\x76\xf4\x26\x9a\xe3\xe3\x50\xe9\xed\x60\x52\x52\x40\x9b\x76\x88\x1d\x0b\x06\xa5\xd0\xda\x41\x2e\xe4\xcd\x80\x01\xbd\x65\x9c\x96\x6a\xab\x84\x47\xbd\x83\x6d\x85\x16\x41\xb8\x43\x7b\x31\x5b\x7b\x8b\x9a\x56\x5c\x6f\x31\x44\x63\x58\xb6\x3a\x5b\xe1\x40\x68\x47\x50\x28\x27\x1b\xc7\xed\x13\x44\x4e\x5c\xf5\x65\xb4\xd6\x8e\xcd\x03\x7f\x0c\xa0\xa0\x90\xb5\xd8\xe7\x5a\x0f\x0e\x3e\x7c\x80\xd0\xec\xda\xb0\xef\x9b\x1c\x1b\x88\xb6\x6a\xb4\x25\x4a\x4e\x68\x89\xa2\x9d\x69\x6c\xad\x4d\x97\x30\x07\xca\xf1\xfe\x95\x5a\x55\x68\x39\x86\x5d\x4c\x9d\xb2\xfb\x2c\x74\x7e\x1f\x73\x66\x8e\x1b\xe5\x94\x07\x2d\x38\x9e\xff\xa8\xc9\xb1\x9f\x1d\x37\x38\x81\x6b\x32\x0e\x3d\x90\x85\xd7\xe4\x2b\xb4\xff\x3c\x42\xf5\xd0\x76\x3b\x07\x09\xbc\xfd\x4e\x49\x1c\x4a\x1e\xef\x94\x2d\x71\x13\x18\xd4\x16\x1d\x9a\x27\x2d\xa7\xdf\x53\xf1\xb6\x26\xcb\x38\xc2\x04\x8d\xd3\x2d\x81\xe1\xd5\x7c\x76\x91\x2e\xcf\xd2\xeb\x45\x96\x7e\xb9\x9a\xcd\x79\x26\xc6\x99\x39\xfc\xe6\x24\x36\xce\x0b\xad\x13\x58\xda\x06\xbf\x81\x33\xf8\xab\x2d\x96\xea\xb6\x3f\xb3\xfb\xa0\x1f\x6a\x30\xe3\x89\x91\xc0\x70\x7a\xb9\x38\xff\xe9\x73\x9a\xfd\x9c\x5e\x7d\x9e\x7d\x6d\xc7\x7b\x44\xd5\xad\x31\x0e\xed\x46\x49\xcc\x72\x4b\x37\x7c\xbd\x47\xb0\xbe\x25\xc8\xb8\x12\x80\xbb\xbb\xdf\x07\x77\x77\xa0\x33\xe1\xf2\xfd\x54\x6f\x0f\x5d\x56\x28\xe9\x7f\x3d\x0a\xef\x37\x50\xe5\x71\xf0\x4c\xe0\x21\x59\xb5\x52\x66\x08\xa8\x1d\x46\x17\x21\x1e\x8d\xd5\x70\x7f\x3f\xf8\xfd\xfe\xbe\x17\x82\x0e\xa5\x14\x5e\x68\x5a\x75\x30\x8f\xee\x3a\x51\x7e\x14\xe5\x0f\xf6\x9d\x67\xd7\x16\xf4\xb2\x60\xe7\x2e\x81\x5f\x07\x95\xf7\xb5\x4b\x26\x93\xb3\xd9\xa2\x9d\x29\xc9\xbb\xf7\xff\xfa\x71\xf0\x5b\x88\xaf\xc7\x75\xcd\xb4\x3f\x12\xb7\xa3\x80\x3a\xbd\x3d\xb2\xa0\xd7\x5f\xc4\x5e\xc1\xe5\x6c\x99\x26\x61\x17\x52\x0e\x2c\x16\x8d\x29\x84\xf1\x61\x4d\xb0\xf8\x47\xa3\x62\x77\xad\x84\x29\x34\x42\xa4\x2c\xb8\x1b\xdc\x42\x8e\x7e\x8b\x68\xa2\xa9\xde\x9e\x3d\x8a\x29\xe7\xee\x39\x6b\x33\xd0\xb6\xe0\xd9\xe9\x55\x2f\x28\x78\x2b\xd6\xb5\xc6\xb0\xd4\x72\xe2\xf6\x65\x31\xd8\x2c\xce\x66\xf3\x25\x57\xc2\x93\x7d\x54\x92\xbc\xa9\x55\x97\x70\xb4\x0f\xe4\x3e\x9d\x9d\xfe\x72\x75\xbe\x3c\x46\xef\x27\x8a\xb9\x70\x18\x77\xd9\x4e\xf5\xa7\xe9\x22\xe5\x5c\x7c\x57\xf7\x01\x6a\xa7\xfa\x7c\x80\x7f\xa6\x76\x8a\x15\x58\x2a\x83\xdf\xed\x4e\xe0\xe8\x61\xca\x78\xe1\x6e\xa0\x54\x1a\xbb\x1e\xd9\xca\x8e\x77\x6b\x0d\xca\x38\x55\x84\xb1\xd8\x37\x09\x96\x34\x42\x69\x69\xfd\x4c\x46\xb6\x4a\xeb\x6e\xee\x35\x9e\x6a\xaa\x1b\x26\x0b\xaf\x85\x8d\xe3\xd7\xd6\x73\x16\xfb\x9b\x6b\x9b\x4d\x1e\xa2\x3b\x65\x56\x07\x63\xca\x34\xeb\x1c\x2d\xef\xc1\x07\x93\xa3\x4f\x37\xe4\x87\x92\x12\xb9\x6e\x87\x0a\x3f\xed\x84\x65\xa6\x78\xb4\x46\x68\xe6\xdb\x53\xd4\xec\x6f\x8b\x43\x8b\x8f\xf8\x16\xf6\xc5\x08\x7a\x0d\xed\x08\xf4\x04\x62\x43\xaa\x68\xf1\x28\x23\x79\xe7\xe0\xcd\xc4\x79\x86\x55\x0a\xe9\xa1\x54\xa6\xe8\x70\xef\x5d\x85\x87\x1b\x80\xa4\xf5\x9a\x4c\xf7\xc5\xdf\xa6\x54\xab\x96\x28\x09\x4c\xd0\xcb\x49\x68\x29\x93\xbd\xc4\x0b\x39\x1c\x84\x1f\x1e\x91\xf1\x0a\x4d\xae\x95\xdc\xf7\xf4\xf6\x61\xb4\x6f\x0b\x77\x77\x30\x4e\x6f\x43\x5c\x2e\x5a\xc5\x33\x72\xed\x86\x0a\xf7\xf7\xc9\xbf\x7f\xf8\xe1\xfd\x24\x2a\x0e\xfa\x06\x45\xad\xfe\xb2\xb1\x07\x23\x2f\x69\x52\xf0\x2a\xbe\xd3\x2f\x09\x34\x99\x15\x5a\x30\x88\x05\x6f\x5b\x8e\x43\xfd\x24\x89\xa3\xf7\xe3\x1f\xc7\xef\xde\x8d\xde\xc6\x37\xd6\xd0\x62\x5b\x18\x64\x02\xe1\xbb\xf6\xb2\x43\x1f\x81\x30\x7d\x1e\x42\xc5\x5f\x71\x3b\xef\xa0\x0c\x4f\x4e\x88\x62\x67\x75\x99\xa7\x2c\x64\xeb\xe8\x1b\xfd\xff\x01\x00\x00\xff\xff\xc3\xf7\x65\xa1\x60\x10\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x41\x8b\x23\x37\x10\x85\xef\xfe\x15\x8f\xdd\xc3\x5c\xe2\x99\x59\x72\x33\x24\xa7\x24\xb0\x87\x90\x43\x72\x08\x84\xd0\xa8\xd5\x65\xb7\xb0\x5a\x25\x54\xa5\x71\x0c\xfb\xe3\x83\xd4\xed\xf6\xcc\x60\x8f\xdd\xe4\x90\x9b\x51\xab\x5e\x7d\x55\x7a\x2a\x79\x8d\x60\x06\xda\xe0\x27\x8a\x9e\x8f\xf8\x2d\x52\xf8\xbd\x77\x5b\x85\x0b\xdb\x64\x44\x53\xb6\x9a\x13\xe1\xc0\x69\xef\xd9\x74\x2b\xa0\x67\x51\xd9\xc0\xb3\x35\x7e\x30\xa2\x94\x56\xc0\xce\x68\x4f\xa9\xd9\x1a\x5b\xbe\x6d\x8d\x17\x5a\xad\x80\xcf\x38\x10\x02\x51\x87\x17\x93\x9c\x69\x3d\x09\xb6\x89\x07\x70\xa4\x20\x25\xd1\x18\x02\x65\xb4\x04\x17\x20\x96\x23\xad\x80\xc4\x9e\x64\xb3\x02\x80\xf5\xfb\xdd\x45\x39\xb2\x68\xa3\x46\xf6\xf3\xa6\xb1\x90\x36\xb9\xb0\x43\x8e\xd0\x9e\x20\x5d\xa8\x1f\x01\x37\x44\x4e\xda\x14\xd5\xcd\xb4\x84\x29\xe2\x2c\x5e\xb6\xbf\x11\x13\xd2\x1c\x61\x39\x6c\xdd\x0e\x72\x0c\x16\x9d\xa1\x81\x83\x90\x2e\xd1\x0d\xdc\x51\xb3\x4b\x9c\xe3\xbc\xa5\x92\x37\xa5\x15\x9b\x2a\xfc\x36\xef\xd7\xaa\xfa\x4a\xa1\x65\x56\xd1\x64\x62\x63\xb2\xb2\x89\x31\xf1\x0b\xa5\xda\xa4\x77\xfd\x5c\x9b\x20\xae\xf5\x54\x3a\xda\x8d\x87\x5a\xd2\x63\x56\x40\x51\xc0\x49\x62\x49\x19\x97\x21\x2e\x92\x9b\xd0\x21\x0b\x21\x71\x56\x4a\xb5\x5a\x6c\xdd\x75\xd8\x73\x92\xe2\x2e\xea\x6a\x65\x4b\xd8\xc6\xb0\x8b\xed\x1d\x19\x1e\x8f\x83\xff\x18\x95\x76\x4e\x34\x1d\xff\x67\xd8\x89\xe2\x2a\xee\x59\xe5\x40\x6d\x63\x39\x48\xf1\xc0\x7d\x46\x38\x50\x8b\x29\x62\x09\xee\xab\x44\x23\xd2\x67\xfc\xf2\xf5\xcf\x5f\x7f\xc6\x1a\x7f\xf4\x94\xe8\x41\x60\x90\x8c\xa5\x22\xde\x39\x75\x1c\x70\x28\x1f\xea\x1d\xac\x83\x04\xde\xb4\xe4\xe1\x24\x3c\x68\xf1\x9e\x77\xd4\x41\x79\x52\x9b\x1b\x31\x6f\xaf\x96\xed\x72\xbd\xcb\xd6\xe7\x32\x64\xce\x37\xdb\x85\x77\x71\xb7\x2c\xfa\x1d\xb4\x77\x02\x27\x88\x89\x5b\x4f\x83\x51\x67\xd1\x92\x35\xe5\xe0\xb5\xa7\xab\x7a\x31\xf1\x40\xda\x53\x96\xb1\xc5\xb6\x27\xbb\xaf\xd3\x8a\x82\xe4\xb1\xc2\x44\x45\x79\x62\x3e\x38\xed\xaf\x56\x25\xe4\xc9\x2a\x27\xe4\xf8\x64\x5e\x8c\xf3\x65\x20\x3e\x89\xed\xa9\xcb\xf5\xf7\xe3\x74\xe2\xd2\x93\xf7\x1b\x3c\x3c\x65\x49\x4f\xad\x0b\x4f\x6c\xb1\x23\xad\x29\x04\x6b\x8f\x4f\xc5\x27\x1c\x7e\xa8\xba\x9f\xf0\x0d\x07\x8b\xb5\x7f\x98\x8e\x70\x34\x11\xa5\x62\x27\xc9\xfe\x34\xab\x72\x50\xe7\x4f\x6b\x8f\xa2\x1d\x67\x6d\xbc\x0b\x24\x7f\x3d\xff\xfd\xcd\x05\xc5\x8f\xf8\x32\x4b\x68\x72\x24\x1b\x7c\xff\x3c\xad\x74\xe4\xcd\x71\x83\x2f\xcf\xab\x1b\xbe\x7c\xdf\xb3\x9b\xb6\x3c\x07\x2c\x71\xe5\xab\xa8\x8f\x79\x84\xd2\x8b\xb3\xd4\x58\xa3\xc6\xf3\xee\x4e\xa8\xfa\x7c\x8c\x91\x98\x22\x17\x3d\x25\x6f\x93\x5e\x99\x3c\x35\xe9\xbc\xb7\x4d\xbc\xbf\x7b\xa8\x17\xbe\xd3\xea\x89\x73\x14\xb8\x8d\x79\x39\xf1\x45\x46\xa5\x21\x7a\xa3\xff\x01\xf2\xa4\xb0\x98\xf2\x4a\xea\x1b\xa7\x4d\xff\x98\x21\x96\xbf\x19\xf7\x13\x9e\x42\x96\x9c\xef\x1c\xf3\x31\xcd\x38\xe9\x9b\x53\x29\x4b\xa8\xa6\xb7\x65\x0e\x5d\xfe\xc0\x9c\xd3\x5e\xa4\xb4\x6c\xf7\xd1\x69\x93\xdd\x02\xaa\xf9\x95\xbc\xfb\x1d\x99\xd2\xac\xb3\x5b\xfd\x1b\x00\x00\xff\xff\x41\xe4\xce\x7e\x6d\x0a\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x6e\x1b\x37\x13\xbd\xdf\xa7\x18\x28\x01\x72\x93\xfd\x91\x9d\x7c\x01\x08\xe4\xc2\x9f\x7f\x52\xa3\x88\xe3\x5a\x46\xd1\x5e\x15\x14\x39\x92\x58\x73\x39\xec\x70\xb8\x8e\x1b\xe4\xdd\x0b\xee\xae\x2d\xb9\x49\x81\xf6\x4a\x5a\xce\x99\x33\x87\x67\x86\xa3\xbd\xa7\xfb\x33\x97\xf4\xda\xa3\x3d\x23\x73\x87\xac\x60\xa3\x7d\xc2\x4a\x47\xf7\x33\x72\x72\x14\x14\x0c\xcb\xca\x86\xf4\x7f\x17\xec\x89\xb5\x8c\x29\x29\x58\x1e\xbd\x6b\xba\xa6\x6b\x96\xea\xed\x71\x09\xde\xa0\xc9\x9c\xdc\x80\x37\x98\xc8\x0f\xa7\x14\x36\x0a\x5a\x14\xd3\x12\xbb\xad\x0b\x6d\x20\x8b\x2d\x8f\xc1\xc6\x50\xd8\x94\xa4\x33\xea\xb5\x0b\x0a\x8c\xcf\x49\x90\x1b\x4f\x46\xfb\x12\xb8\xbc\x56\xb0\x7c\x77\xd4\x2c\x4b\x91\x65\x65\x47\x65\x85\xd3\x6d\x55\x05\x30\x7d\xaf\x76\xae\xbf\x21\x92\x33\xc7\x68\x84\xf8\x41\x41\x3b\x68\x6e\xbd\x5b\xb7\x13\x22\xed\x5c\xff\x0c\xbe\x2a\xff\x64\xc6\x71\x0e\x07\xb8\x26\x91\xb9\xab\x00\xf0\x33\x9a\x1f\x74\xb0\x1e\xf9\x4a\xf7\xa8\x20\x68\x71\x03\x56\x2e\x4a\x71\x29\xad\x1e\x82\xb9\x46\x76\x64\x15\x2c\x8e\xbb\xb4\xa8\x5c\xaf\xb7\xb8\x17\xb7\x21\xee\xb5\x28\xb8\xfc\x78\xf2\xe1\xfc\xb7\xeb\x9b\xf3\x8b\xcb\x5f\xda\xe9\xe3\xf6\xd7\xeb\xf3\xfa\xe5\x17\x43\x7d\xa4\x80\x41\xbe\xaa\x97\x5f\x86\xc9\xe4\xaf\x15\x80\xd7\x82\x49\x14\x5c\x8c\x0d\xb8\x73\xc1\x2a\xb8\x22\x3b\x73\x57\x77\x79\x8d\x1e\xe5\x84\xb7\xb9\xc7\x20\xa9\x14\x8b\x64\xeb\x5e\x07\xb7\xc1\x24\x75\xd4\xb2\x2b\x87\xf5\xb7\xc6\x47\xb2\xa9\x02\x58\x13\x49\x12\xd6\xb1\x2e\x64\xe6\x49\xf3\x77\x32\x9e\xa0\xcd\x1e\x5a\x6e\x87\x5a\x32\x63\xbd\x2d\x5a\xa7\xd4\x1b\x12\x2d\xf8\xe3\xa4\xee\xd4\x3b\x0c\x72\x8a\x2c\x6e\xe3\x8c\x16\x7c\x2f\x9c\xf1\xf5\x33\xcc\x0a\x79\x40\xfe\x3b\xa6\x02\xe0\x11\x55\x9b\x7d\x64\x2e\xb1\x28\x80\x45\x05\x50\x42\xb5\x75\xfc\x0f\xa2\x0f\x33\x4b\x2f\x43\x69\x59\x6d\x28\x08\x93\xf7\xc8\xb5\x16\xd1\x66\x57\x5b\x2c\x3f\x13\xc9\xab\xc2\xfd\xaa\x02\x28\x0c\xb5\xd7\x6b\xf4\x73\xd5\xf1\x80\xc9\xe3\x68\x01\x07\x14\x4c\x8d\xa3\xb6\xf4\x2f\xef\x55\xd7\xc0\xb8\x75\x14\xde\x47\x76\xbd\xe6\x87\x22\xd3\x53\xb6\x75\x64\x1a\x9c\xc5\x59\xec\x42\xff\x99\x79\xba\xc4\x18\x3d\x74\x7f\x71\x78\x93\x31\xfc\x98\xdb\x8e\x59\xe3\x8b\x59\x54\xbd\x2e\xcf\x64\xb6\x98\x42\x40\x23\x8e\xc2\xa7\x01\x99\x9d\x9d\xbc\xd2\xc6\x60\x2c\x41\xc1\x20\xb7\x0f\x11\x93\x02\x1d\xa3\x2f\x9e\x38\x0a\xed\x10\xec\xe1\x6d\x22\x93\xd0\x3a\x6f\x5e\x1f\x62\x7e\x4f\x14\x8a\xcc\x3d\xc9\xbf\xe2\x28\xf3\x95\xb9\x0c\xf0\x51\xd7\x55\x00\x7f\xc4\xb2\x27\xba\x6e\x96\x5d\x9a\x3f\xbf\x92\xd1\xd9\xc3\xb9\x0a\x28\xf7\xc4\x77\xd7\x3e\x6f\x5d\x98\x9e\x1d\xa3\xdd\x69\x69\x29\x62\x48\x3b\xb7\x91\x9a\x86\x54\xa7\xbc\x0e\x28\xd5\x0b\x98\x13\x26\x3e\x48\xc2\xd9\x08\xb8\xd2\x66\x9b\x0d\x5a\x70\x01\x26\x37\x61\xd9\x74\xcd\xff\x40\x07\x0b\x9f\x56\xe7\x70\xdc\x74\xcd\x11\xdc\xef\x9c\xd9\x55\x2f\xc0\x62\x64\x1c\x87\x05\xbe\x51\x00\x7a\x4d\x03\x36\x70\xbb\x43\x90\x7b\x82\xb4\xa3\xec\x2d\xf4\x5a\xcc\xae\xa9\x9e\xd5\x2f\xbe\xf7\x92\x15\x2c\xdf\xbc\x2d\x17\xff\x8f\xb7\x89\x64\x3f\xce\x4f\xf8\x91\x2f\x21\x0f\x2e\x6c\x2f\xc3\x86\x0a\xf9\xfa\x70\xf3\x76\xe3\xde\xed\xd4\xb2\x3b\x1a\xab\x95\xe0\xd5\x54\x51\x81\x98\xf8\x06\x60\x9c\xb1\x71\x48\x4e\x14\x18\xdd\x18\x96\x6a\x20\x9f\x7b\xfc\xde\xae\x9c\xc7\xee\x49\xdb\xb4\x86\x9b\x29\x21\x55\x91\xe9\xf3\xc3\xf3\xa5\x53\x4e\xea\x9e\x2c\x96\x2f\x28\x03\xfc\xb8\x1d\xe7\x32\x7b\x5f\x46\xae\x9f\x32\x89\x9e\xb0\x11\xf9\x62\xf5\x81\x29\x47\x55\xfd\x15\x00\x00\xff\xff\x85\x26\xf1\x88\x7e\x06\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6f\x1c\xb7\x0f\xbd\xeb\x53\x10\x9b\x00\xb9\x64\xfe\xac\x93\xfc\x02\x08\xc8\xc1\xbf\xd8\x4e\x8d\x22\x8e\xeb\x35\x8a\xf6\x54\x68\x25\xee\x8e\x6a\x8d\xa8\x52\x9c\x71\xdc\x20\xdf\xbd\xd0\xcc\xd8\x5e\x37\x29\xd0\x9e\x76\x47\x7c\x7c\x7c\x7c\xa2\x68\x42\xa0\xdb\x13\x9f\xcd\x36\xa0\x3b\x21\x7b\x83\xac\x61\x67\x42\x46\x65\x92\xff\x19\x39\x7b\x8a\x1a\xc6\xb5\x72\x31\xff\xdf\x47\x77\xec\x1c\x63\xce\x1a\xd6\x47\x6f\xeb\xb6\x6e\xeb\xb5\x7e\xf3\xaa\x04\xaf\xd0\x0e\x9c\xfd\x88\x57\x98\x29\x8c\xef\x29\xee\x34\x34\x28\xb6\x21\xf6\x7b\x1f\x9b\x48\x0e\x1b\x9e\x82\xb5\xa5\xb8\x2b\x49\x27\xd4\x1b\x1f\x35\xd8\x30\x64\x41\xae\x03\x59\x13\x4a\xe0\xfc\x52\xc3\xfa\xed\x51\xbd\x2e\x45\xd6\xca\x4d\xca\x0a\xa7\xdf\x6b\x05\x30\x7f\x6f\x3a\xdf\x5f\x11\xc9\x89\x67\xb4\x42\x7c\xa7\xa1\x19\x0d\x37\xc1\x6f\x9b\x19\x91\x3b\xdf\x3f\x81\x6f\xca\x3f\x59\x70\x3c\xc4\x03\x5c\x9d\xc9\xde\x28\x00\xfc\x8c\xf6\x07\x13\x5d\x40\xbe\x30\x3d\x6a\x88\x46\xfc\x88\xca\x27\x29\x2e\xe5\xcd\x5d\xb4\x97\xc8\x9e\x9c\x86\xd5\xab\x36\xaf\x94\xef\xcd\x1e\x1f\xc5\xed\x88\x7b\x23\x1a\xce\x3f\x1e\x7f\x38\xfd\xed\xf2\xea\xf4\xec\xfc\x97\x66\xfe\xb8\xfe\xf5\xf2\xb4\x7a\xfe\xc5\x52\x9f\x28\x62\x94\xaf\xfa\xf9\x97\x71\x36\xf9\xab\x02\x08\x46\x30\x8b\x86\xb3\xe9\x02\x6e\x7c\x74\x1a\x2e\xc8\x2d\xdc\xea\x66\xd8\x62\x40\x39\xe6\xfd\xd0\x63\x94\x5c\x8a\x25\x72\x55\x6f\xa2\xdf\x61\x96\x2a\x19\xe9\xca\x61\xf5\xad\xf1\x89\x5c\x56\x00\x5b\x22\xc9\xc2\x26\x55\x85\xcc\x3e\x68\xfe\x4e\xc6\x03\xb4\x7e\x84\x96\xee\xd0\xc8\xc0\x58\xed\x8b\xd6\x39\xf5\x8a\xc4\x08\xfe\x38\xab\x7b\x1f\x3c\x46\x79\x8f\x2c\x7e\xe7\xad\x11\x7c\x27\x3c\xe0\xcb\x27\x98\x0d\xf2\x88\xfc\x77\x8c\x02\xe0\x09\x55\xd9\xc7\xc8\x52\x62\x55\x00\x2b\x05\x50\x42\x95\xf3\xfc\x0f\xa2\x0f\x33\xcb\x5d\xc6\x72\x65\x95\xa5\x28\x4c\x21\x20\x57\x46\xc4\xd8\xae\x72\x58\x7e\x66\x92\x17\x85\xfb\x85\x02\x28\x0c\x55\x30\x5b\x0c\x4b\xd5\xe9\x80\x29\xe0\x64\x01\x47\x14\xcc\xb5\xa7\xc6\xc7\x1d\x9b\x7b\xcd\x15\x30\xee\x3d\xc5\x77\xd3\x69\x91\x18\x68\x70\x55\x62\x1a\xbd\xc3\x45\xe8\xca\xfc\x39\xf0\xdc\xc0\x14\x3d\x74\x7e\x75\xd8\xc5\x14\xbe\xcf\x6d\xa6\xac\xe9\xb5\xac\x54\x6f\xca\x13\x59\xec\xa5\x18\xd1\x8a\xa7\xf8\x69\x44\x66\xef\x66\x9f\x8c\xb5\x98\x4a\x50\x30\xca\xf5\x5d\xc2\xac\xc1\xa4\x14\x8a\x1f\x9e\x62\x33\x46\x77\xd8\x49\x62\x12\xda\x0e\xbb\x97\x87\x98\xdf\x33\xc5\x22\xf3\x91\xe4\x5f\x71\x94\xd9\x1a\xb8\x0c\xef\x51\xdb\x2a\x80\x3f\x52\xd9\x11\x6d\xbb\xc8\x2e\x17\xbf\xbc\x90\xc9\xd5\xc3\x99\x8a\x28\xb7\xc4\x37\x97\x61\xd8\xfb\x38\x3f\x39\x46\xd7\x19\x69\x28\x61\xcc\x9d\xdf\x49\x45\x63\xae\xf2\xb0\x8d\x28\xea\x19\x2c\x09\x33\x1f\x64\xe1\xc1\x0a\xf8\x72\xc5\x6e\xb0\xe8\xc0\x47\x98\xdd\x84\x75\xdd\xd6\xff\x03\x13\x1d\x7c\xda\x9c\xc2\xab\xba\xad\x8f\xe0\xb6\xf3\xb6\x53\xcf\xc0\x61\x62\x9c\x06\x05\xbe\x51\x00\x66\x4b\x23\xd6\x70\xdd\x21\xc8\x2d\x41\xee\x68\x08\x0e\x7a\x23\xb6\xab\xd5\x93\xfa\xc5\xf7\x5e\x06\x0d\xeb\xd7\x6f\x4a\xe3\xff\xb1\x9b\x44\xee\xe3\xf2\x7c\xef\xf9\x32\xf2\xe8\xe3\xfe\x3c\xee\xa8\x90\x6f\x0f\xb7\x6e\x3b\xed\xdc\x56\xaf\xdb\xa3\xa9\x5a\x09\x5e\xcc\x15\x35\x88\x4d\xaf\xa7\x09\x9b\x46\xe4\x58\x83\x35\xb5\x65\x51\x23\x85\xa1\xc7\xef\x6d\xc9\x65\xe8\x1e\x94\xcd\x0b\xb8\x9e\x13\xb2\x4a\x4c\x9f\xef\x9e\xae\x9b\x72\x52\xf5\xe4\xb0\x7c\x41\x19\xdf\xfb\xbd\xb8\x94\x79\x74\x65\xe2\xfa\x69\x20\x31\x33\x36\x21\x9f\x6d\x3e\x30\x0d\x49\xab\xbf\x02\x00\x00\xff\xff\x6f\x48\x88\xba\x78\x06\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x6e\x1b\x37\x13\xbd\xe7\x53\x0c\x94\x00\xb9\xc9\xfe\xc8\x4e\xbe\x00\x04\x72\xe1\xcf\x3f\xa9\x51\xc4\x71\x2d\xa3\x68\xaf\x0a\x8a\x1c\x49\xac\xb9\x1c\x76\x38\xbb\x8e\x1b\xe4\xdd\x0b\xee\xae\x2d\xb9\x49\x81\xf6\x4a\x5a\xce\x99\x33\x67\x0e\x87\x63\x42\xa0\xfb\x33\x9f\xcd\x3a\xa0\x3b\x23\x7b\x87\xac\x61\x63\x42\x46\x65\x92\xff\x19\x39\x7b\x8a\x1a\x86\xa5\x72\x31\xff\xdf\x47\x77\xe2\x1c\x63\xce\x1a\x96\x47\xef\xea\xb6\x6e\xeb\xa5\x7e\x7b\x5c\x82\x37\x68\x7b\xce\x7e\xc0\x1b\xcc\x14\x86\x53\x8a\x1b\x0d\x0d\x8a\x6d\x88\xfd\xd6\xc7\x26\x92\xc3\x86\xc7\x60\x6d\x29\x6e\x4a\xd2\x19\x75\xc6\x47\x0d\x36\xf4\x59\x90\xeb\x40\xd6\x84\x12\xb8\xbc\xd6\xb0\x7c\x77\x54\x2f\x4b\x91\xa5\x72\xa3\xb2\xc2\xe9\xb7\x5a\x01\x4c\xdf\xab\x9d\xef\x6e\x88\xe4\xcc\x33\x5a\x21\x7e\xd0\xd0\x0c\x86\x9b\xe0\xd7\xcd\x84\xc8\x3b\xdf\x3d\x83\xaf\xca\x3f\x99\x71\xdc\xc7\x03\x5c\x9d\xc9\xde\x29\x00\xfc\x8c\xf6\x07\x13\x5d\x40\xbe\x32\x1d\x6a\x88\x46\xfc\x80\xca\x27\x29\x2e\xe5\xd5\x43\xb4\xd7\xc8\x9e\x9c\x86\xc5\x71\x9b\x17\xca\x77\x66\x8b\x7b\x71\x1b\xe2\xce\x88\x86\xcb\x8f\x27\x1f\xce\x7f\xbb\xbe\x39\xbf\xb8\xfc\xa5\x99\x3e\x6e\x7f\xbd\x3e\xaf\x5e\x7e\xb1\xd4\x25\x8a\x18\xe5\xab\x7e\xf9\x65\x98\x4c\xfe\xaa\x00\x82\x11\xcc\xa2\xe1\x62\xbc\x80\x3b\x1f\x9d\x86\x2b\x72\x33\xb7\xba\xeb\xd7\x18\x50\x4e\x78\xdb\x77\x18\x25\x97\x62\x89\x5c\xd5\x99\xe8\x37\x98\xa5\x4a\x46\x76\xe5\xb0\xfa\xd6\xf8\x44\x2e\x2b\x80\x35\x91\x64\x61\x93\xaa\x42\x66\x9f\x34\x7f\x27\xe3\x09\x5a\xef\xa1\xa5\x3b\x34\xd2\x33\x56\xdb\xa2\x75\x4a\xbd\x21\x31\x82\x3f\x4e\xea\x4e\x83\xc7\x28\xa7\xc8\xe2\x37\xde\x1a\xc1\xf7\xc2\x3d\xbe\x7e\x86\x59\x21\x0f\xc8\x7f\xc7\x28\x00\x1e\x51\x95\xdd\x47\xe6\x12\x8b\x02\x58\x28\x80\x12\xaa\x9c\xe7\x7f\x10\x7d\x98\x59\xee\x32\x96\x2b\xab\x2c\x45\x61\x0a\x01\xb9\x32\x22\xc6\xee\x2a\x87\xe5\x67\x22\x79\x55\xb8\x5f\x29\x80\xc2\x50\x05\xb3\xc6\x30\x57\x1d\x0f\x98\x02\x8e\x16\x70\x44\xc1\x5c\x7b\x6a\x3a\x53\xa6\xf5\x51\x74\x05\x94\x30\xe6\x9d\xdf\x48\xe5\xe3\x86\xcd\x7b\x93\x7c\x1e\x5b\x2c\x82\x03\xf5\xae\x4a\x4c\x83\x77\x38\xcb\x5e\x98\x3f\x7b\x9e\xda\x19\xa3\x87\xf7\xb0\x38\xec\x69\x0c\x3f\xe6\x36\x63\xd6\xf8\x76\x16\x6a\x92\x30\x9b\x4d\x31\xa2\x15\x4f\xf1\xd3\x80\xcc\xde\x4d\xae\x19\x6b\x31\x95\xa0\x60\x94\xdb\x87\x84\x59\x83\x49\x29\x14\x77\x3c\xc5\x66\x88\xee\xb0\xaf\xc4\x24\xb4\xee\x37\xaf\x0f\x31\xbf\x67\x8a\x45\xe6\x9e\xe4\x5f\x71\x94\x49\xeb\xb9\x8c\xf2\x51\xdb\x2a\x80\x3f\x52\xd9\x18\x6d\x3b\xcb\x2e\x63\x30\xbf\x97\xd1\xe3\xc3\x09\x8b\x28\xf7\xc4\x77\xd7\xa1\xdf\xfa\x38\x3d\x40\x46\xb7\x33\xd2\xec\x5d\xa6\x21\x57\xb9\x5f\x47\x14\xf5\x02\xe6\x84\x89\x0f\xb2\x70\x6f\x05\x7c\xb9\x70\xd7\x5b\x74\xe0\x23\x4c\x6e\xc2\xb2\x6e\xeb\xff\x81\x89\x0e\x3e\xad\xce\xe1\xb8\x6e\xeb\x23\xb8\xdf\x79\xbb\x53\x2f\xc0\x61\x62\x1c\xc7\x06\xbe\x51\x00\x66\x4d\x03\xd6\x70\xbb\x43\x90\x7b\x82\xbc\xa3\x3e\x38\xe8\x8c\xd8\x5d\xad\x9e\xd5\x2f\xbe\x77\xd2\x6b\x58\xbe\x79\x5b\x1a\xff\x8f\xdd\x24\x72\x1f\xe7\xc7\xfc\xc8\x57\x06\xc9\xc7\xed\x65\xdc\x50\x21\x5f\x1f\xee\xe0\x76\xdc\xc0\xad\x5e\xb6\x47\x63\xb5\x12\xbc\x9a\x2a\x6a\x10\x9b\xde\x8c\x13\x36\x8e\xc8\x89\x06\x6b\x6a\xcb\xa2\x06\x0a\x7d\x87\xdf\xdb\x99\xf3\xd0\x3d\x29\x9b\xd6\x71\x3d\x25\x64\x95\x98\x3e\x3f\x3c\x5f\x3e\xe5\xa4\xea\xc8\x61\xf9\x82\x32\xbe\x8f\x5b\x72\x2e\xb3\x77\x65\xe4\xfa\xa9\x27\x31\x13\x36\x21\x5f\xac\x3e\x30\xf5\x49\xab\xbf\x02\x00\x00\xff\xff\x70\x21\x9f\x04\x86\x06\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginCloudproviderAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x49\xcd\x4b\xcc\x2b\xf1\x4c\xb1\x52\xa8\xae\x56\xd0\x73\xac\x2a\x2d\x4a\x75\xce\xcf\x4b\xcb\x4c\xd7\x0b\x81\xc8\xb8\x28\xd4\xd6\x72\x15\x97\x26\x15\x27\x17\x65\x16\x94\x64\xe6\xe7\x61\x53\x1b\x8c\x2c\x0f\xd6\x91\x98\x98\xe2\x9c\x93\x99\x8a\xdd\x68\x47\x47\x17\xa8\x24\xaa\xda\xe0\xd4\xe4\xa2\xd4\x12\x3c\xea\x21\x0a\xa0\x7a\x42\x88\x72\x7a\x51\x6a\x71\x7e\x69\x51\x72\xaa\x7b\x51\x7e\x69\x01\xa6\xd2\x20\x64\x69\x90\xfa\x9c\xfc\xe4\x44\x90\x37\x30\x95\xfa\x40\x65\x40\xaa\x00\x01\x00\x00\xff\xff\x69\xfe\xce\x7d\x37\x01\x00\x00")

func nodeEtcOriginCloudproviderAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginCloudproviderAzureConf,
		"node/etc/origin/cloudprovider/azure.conf",
	)
}

func nodeEtcOriginCloudproviderAzureConf() (*asset, error) {
	bytes, err := nodeEtcOriginCloudproviderAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/cloudprovider/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/origin/cloudprovider/azure.conf":            nodeEtcOriginCloudproviderAzureConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"origin": {nil, map[string]*bintree{
				"cloudprovider": {nil, map[string]*bintree{
					"azure.conf": {nodeEtcOriginCloudproviderAzureConf, map[string]*bintree{}},
				}},
				"node": {nil, map[string]*bintree{
					"resolv.conf": {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

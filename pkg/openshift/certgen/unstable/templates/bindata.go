// Code generated by go-bindata.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/origin/cloudprovider/azure.conf
// node/etc/origin/node/resolv.conf
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x88\xcc\xcb\xee\xc3\x85\x94\xdb\x8f\xa5\x92\x1f\x8c\x33\x80\x85\x49\x52\xdb\x81\xa2\xaa\xb2\x28\x0d\x34\xda\x14\x50\x12\xba\xad\xba\xfd\xef\x2b\x27\x81\xd0\xc2\xae\x56\xba\xea\x1b\xcc\x1c\xcf\x9c\x39\x73\x26\xa0\xa8\xab\x3d\x32\x02\xfc\xfe\x6e\x37\x47\xb3\x2c\x8f\xd2\xe6\x60\x9d\xe5\xab\xd9\x73\x64\xff\x6d\x67\x4f\x51\x92\xdc\x6c\xd7\x79\x64\x7f\x7c\x58\x05\x9a\x33\xa9\xc0\xd3\x01\x80\xd0\xa1\xe0\xd2\xbc\xdc\xa4\xf1\x2a\xb7\xd1\x53\x9e\x6f\xb2\xeb\x56\x0b\xd9\xbf\xc5\xab\xc7\xe8\x75\x5f\x91\x05\x99\xed\xfc\xde\x94\x79\x1a\xaf\x96\x36\xba\x6e\xff\xfc\xc3\x41\xa7\xcb\xbb\x44\x11\xed\x32\x81\x5b\x2f\xb3\xb4\x95\xc4\x0f\xad\x28\x9f\x3f\xb6\xac\x46\x91\x9d\x10\x5e\x24\x11\xaa\x02\xd2\x23\x81\x1c\xf8\x4a\x53\x3f\xf4\x14\x3e\x73\x1c\xc7\x29\x0b\x0d\x80\x08\xd5\x05\xa2\x34\xf3\x14\x88\x31\xe1\xf8\x62\x97\x03\x0e\x54\x31\xdf\xd3\x8a\x8d\xc0\x0f\x15\x6e\xef\x53\xd5\x78\x94\x33\xf0\xd4\x2f\x0c\x78\xd5\x39\x1e\xb0\xa4\x3c\x22\xb7\x7b\xda\x12\x5f\x1c\x44\x27\x84\xd7\x01\xea\x0b\x89\x2d\xcb\x6a\xdc\xcd\x93\xad\x69\x72\x5f\x12\x64\x1e\x53\x8c\x70\x4d\xdc\x31\x08\xc5\x24\x7c\xdb\x2a\x76\x9d\x28\x0f\xa5\x02\x51\x57\x3f\x32\x0a\xc2\xdf\xd0\x4f\x4b\x45\x14\xe0\x55\xf4\xd7\xe9\xb4\xf2\x87\xe0\x61\xe3\x8e\x1f\x95\x42\x3f\xce\x2a\xed\x5c\x26\xa9\x3f\x06\x31\xc5\x5f\x03\x5a\x8a\xf1\x71\xb0\x47\x38\xef\x12\x3a\xc4\x9b\x74\xfd\xfa\x76\x94\x0e\x84\x7f\x3b\xc5\x25\x8b\x5a\xf6\x6f\xb4\x88\x54\x82\x51\xa5\x05\x50\xdf\xeb\xb1\xbe\xa6\x03\xa0\x43\x8c\x16\xb3\x24\x8b\x76\xce\x27\xa1\xf2\x35\xf5\x47\x01\x29\xad\x2c\x40\x81\x67\x7e\x61\xe4\xec\x30\xe0\x91\x2e\x07\x3d\x6e\x63\x94\xa7\xdb\x08\x95\x23\xdc\x84\xbe\x22\xda\xcc\x0b\x9e\xab\xbb\x53\x05\x12\x9f\xb7\x3b\xe7\x9d\xcb\xab\x76\xe7\xd2\x38\xae\x90\xe1\xbe\x2a\x52\x4e\xbf\x5e\x2c\x0e\xff\xeb\x1e\x61\x3c\x14\xa0\x27\x84\x29\x8c\x2e\x1c\x67\xdf\xb4\xcc\x0b\xe8\x09\x90\x83\xfa\xf8\xd0\x4f\xe7\x08\xe4\x9a\x7d\xee\x6e\x10\x9d\x1d\xe5\x27\x82\x29\xa8\x01\xa7\xba\x10\xb7\xce\x3b\xc8\x90\xcf\xa2\xf9\x36\x8d\xf3\xb7\xea\x5e\x94\x30\x76\x71\x35\x25\xba\xc7\x38\x60\xf3\x3d\x29\xbf\x29\xf3\x59\x73\x9e\xe6\x25\xaa\x5a\x26\x05\xa1\x8c\xb2\x83\x4f\x82\x15\xd1\x2f\x8f\xb3\x28\x7d\x89\xd2\xba\xc0\x10\xa6\xff\x02\xf9\x33\x7a\x3b\x5c\x99\xe2\x72\xbf\xc9\x72\x12\x73\xbe\xff\x8f\x65\x01\xfd\x4f\xaa\x25\xe2\x04\xdf\x4d\x74\xc8\xb6\x80\x9d\xa0\x5c\xa0\x6a\xc2\x05\xec\x88\xb5\xd5\xb8\x4b\xd6\xcb\x65\xbc\x5a\x56\x12\xbb\xd0\x0d\xfb\x18\xf5\x0e\x86\xe2\x7e\x5f\x07\x84\x0e\x49\x1f\x34\x87\x31\x98\xe7\xa6\x43\xa9\x09\x2e\x5e\xa0\xca\x6a\x8b\x38\x29\x6a\x7d\xf2\x6c\x10\x08\xbf\xf7\xc5\xf2\x23\x30\x77\x21\x31\x7a\x98\x65\xf1\x1c\x59\x0d\xab\x71\x37\xdb\xe6\x4f\xf7\xb5\xbe\x83\xea\xb3\x80\xb2\xf8\x79\x93\x44\xc8\xfa\x27\x00\x00\xff\xff\x6b\x4e\x0b\x40\xe2\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x6b\x6f\x1b\xbb\xd1\xfe\xae\x5f\x41\xe8\x4b\x92\x17\xef\xae\x64\x3b\xd7\x05\x8a\x42\xb5\x9d\x13\xe3\xd8\xb1\x2a\x3b\x45\x81\xba\x08\x28\x72\xb4\x62\xc4\x25\x37\xbc\x28\x56\x72\xf2\xdf\x0b\x5e\x76\x97\xbb\x92\x93\x20\x4d\x5b\x27\x40\xbc\xe4\xcc\x70\x38\xf3\x70\x6e\xc1\xb4\x62\x5a\x33\x29\x4e\xa5\x58\xb1\xb2\x18\x21\x54\x73\x5b\xb2\xe4\x1b\xa1\xbf\x58\xc6\xe9\x19\xac\xb0\xe5\x46\x87\x25\x84\x88\x27\xb0\x0a\x1b\x26\x45\xb3\x88\x10\xae\xd9\xdf\x40\x39\x89\x05\xda\x1e\xb5\xcb\x20\xb6\x05\xfa\xc7\x3f\xdb\xef\x0d\x13\xb4\xe8\x0b\x0e\x27\xb6\x14\x0a\xb4\xb4\x8a\x80\xee\x64\x23\xc4\x59\xc5\x8c\x2e\xd0\x97\xaf\xc9\xa2\x82\x8f\x16\x74\xb2\xec\xc5\x5e\x6f\x41\x29\x46\xe1\x27\x15\x4e\x14\x6c\x25\x25\x1a\xce\x25\x9d\x2b\xd0\x60\x7e\x4e\x3a\x65\x1a\x2f\x39\x14\x68\x85\xb9\x86\xc1\xa1\xd1\x20\xb3\xbe\x6b\x3c\x91\xac\x41\xe8\x35\x5b\x99\x9c\xc9\xc9\x45\x85\x4b\x98\x4b\xce\xc8\xee\x27\x9d\x72\x0f\xc4\x3a\xca\x85\xe5\xa9\x9d\x33\x54\x61\x43\xd6\x5e\xfe\x4c\x08\x69\xbc\xb8\x9e\x23\x32\xb4\x81\x5d\x81\x98\x23\xd1\x79\x4f\x2d\x0a\x62\x97\xb5\xa2\x13\x1e\x84\xb6\x98\x5b\x28\xd0\x23\xa3\x2c\x3c\x4a\x76\x04\xae\xa0\xe8\xd4\xc9\x28\x08\x06\x34\x21\x90\x62\x71\x08\x0e\x59\x8b\x92\x02\xd5\x92\xea\x07\xb6\x96\xce\x8b\xba\x87\x98\x0f\x40\x4c\x81\x9c\x1e\xc9\xb2\xde\xb0\xfa\xda\x9f\xc4\xbd\x1e\xaf\x31\xe3\x56\xc1\x80\x2e\x38\x29\x31\x7e\xf4\x0f\x2e\x4b\x05\x25\x36\x52\x25\x6f\x49\xc9\xfb\xdd\x29\x67\x20\xcc\x85\x58\xc9\xa0\x3b\x01\x65\x5e\x33\xe7\xfd\x8e\x25\x5b\x29\x29\x4c\xe6\xe9\x73\xa2\x8c\x27\xdc\xc0\xee\x9b\x74\x1b\xd8\x8d\x70\xcd\x2e\x61\x0b\x5c\x17\xa3\xcc\xf9\x76\xe0\x6a\x6c\xcd\xba\x53\x27\xbe\x94\x37\x80\x29\xa8\xa8\x8c\x57\xee\x74\x56\xa0\x44\x72\x46\x70\xab\x44\x24\x90\x55\x25\xc5\x5b\x5c\x35\x0e\xc8\x1e\x50\x6a\x14\x80\x65\x14\x0e\xa7\xcc\x15\xac\xd8\x7d\xc7\xf5\xf7\x6c\x01\x95\x34\x90\x9d\x3b\x9a\xcc\xaf\x96\x4a\xda\x3a\x90\xef\xd3\xfd\xe6\x36\xfd\xa2\xd5\xa0\x1c\x52\x1e\xa2\x7c\xa7\x41\x8d\x88\x14\x46\x49\xce\x21\xf1\x02\x70\x20\xdd\x83\xe0\x92\x6c\xde\x7a\xc0\xb5\xb0\xcd\x2a\xac\x0d\xa8\xac\x63\x76\x68\xd1\xa0\xb6\x8c\xc0\x8d\xfb\x47\x94\xa7\xa0\xe2\x63\xd7\xac\x14\x8d\xf9\x52\x6f\x46\xfa\x2c\xec\xb7\x06\x4c\xfc\x38\xa0\x70\xfe\x4b\x8e\x2c\xd0\xa3\xff\x7b\x34\x22\x52\xe9\x19\xe7\xf2\x13\xd0\x6b\xc5\x4a\x26\xbc\x67\x1f\xff\x99\x3d\x99\x4c\x8e\x8e\x5f\xdc\xe5\x53\xff\xf7\xe8\x71\xf1\xc7\xdd\xe7\x27\xed\x16\x97\x04\xf3\xb5\xd4\xa6\x5d\xff\xf2\x05\xd5\x8a\x09\x83\xc6\x81\x62\x8c\x1e\xff\xd5\x4a\x03\x57\x60\x30\x7a\xcc\x04\x85\x7b\x94\x5f\xf9\x8b\xe7\x17\x73\x8d\xa6\x4f\xf2\x1b\xa3\x98\x28\x9f\xa0\xb1\x13\x72\xf7\xf9\xc9\x18\xfd\x81\x3e\x3a\x1e\xf4\xf5\x6b\x7b\xd2\xc6\x2e\x41\x09\x30\xa0\xef\x72\x1a\x42\xd5\x40\x97\x03\x14\x77\xb9\xde\x92\xbb\x9c\x70\xeb\xce\xbb\xcb\xbd\xba\x0f\xb2\xfd\xd8\x1d\xf2\xf3\x7b\xe3\x10\xc1\xc3\x25\xde\x48\x6d\x1c\x3c\xbe\xa3\x7e\xeb\xf4\x7d\xed\xbf\x7d\x5a\x34\xd5\x4f\x1f\xe3\x4d\xf0\x83\x96\x1a\x90\x1d\xbd\x38\xbe\xcb\x4f\x0e\x3b\xfe\x81\x83\xbe\x63\xeb\x96\x2b\xae\x53\xa1\xbb\xf7\xb2\x64\x82\xce\x28\x55\xa0\x75\x81\xa6\xb9\xff\x53\xbc\x9c\x3e\x3b\x89\x7b\x6f\xc1\x7c\x92\x6a\x53\x20\x43\xea\xa7\x23\x30\x84\xf6\x43\x1c\xc1\x05\x0a\x2f\x2a\x77\x9b\x5d\x34\xe9\xde\x4a\x6f\xdb\x33\x47\x92\xf6\xad\x1c\xa0\x70\xef\x05\x21\xab\xb8\x7f\xfb\xa9\xbf\xd6\xc6\xd4\xba\x70\x1e\x1b\xba\x09\x8d\x8b\xe3\x93\x17\xaf\x7a\x3e\x72\x32\x6f\x8c\x54\xb8\x84\xee\xd2\x9d\x2b\xe2\x56\x88\x5c\x45\xb2\x91\x33\x79\x88\xb0\x9f\x5a\x9d\x65\x6f\x9c\x65\x07\x62\xd2\x1c\x79\x80\x2c\x15\xe2\xb3\x6a\xa7\xd9\x4a\xaa\x0a\x9b\x02\x5d\xcd\x6e\x6e\xcf\x17\xef\xaf\x17\xe7\xbf\xbd\x7f\xb7\xb8\x1c\x21\xc4\xb1\x01\x6d\x9a\x2a\x82\x0d\x53\x92\x63\x66\x22\xbc\x91\x05\x94\x4c\x1b\xb5\x6b\xec\x52\x20\x2a\xc9\x06\x54\xa6\xe2\x46\x83\x1e\x07\x9e\xe2\xd9\x74\x3a\x1d\x85\x44\x17\xec\x19\x73\x9c\xbb\x3b\x07\xb3\xef\x6e\x82\xb3\xa5\x15\x94\xc3\x43\x9e\x8e\x9c\xdf\x76\xf6\x80\x28\xf8\xbb\x96\xca\x14\xe8\x68\x7a\xfc\x6c\x3a\xea\x6c\x9f\xaa\xe5\x94\xc0\x35\x73\x81\x1a\xd4\x4c\x95\xb6\x02\xd1\x14\xaa\xca\x0a\xc3\x2a\xc8\x48\x52\xcf\x66\x8e\x5a\x4f\x34\x18\xc3\x44\xa9\xf3\xcd\x4b\xe7\xda\xc9\xf6\x08\xf3\x7a\x8d\x8f\xfe\xd4\xa6\x7b\x1d\x7c\x93\x2d\x31\xd9\x80\xa0\x0d\xb7\xc3\xcf\x49\x8f\xa0\x02\xca\x70\x66\x76\x35\x74\x27\xd4\x9c\x11\x5f\x38\x4d\xb6\x82\xe6\x09\x8a\x6a\x25\x8d\x5c\xda\x55\x4c\xaf\xd2\x52\x97\x3a\xb7\xac\xcd\xc9\x19\x1a\xe3\xcf\x56\xc1\x38\xa1\xe8\xeb\x3f\x9e\x80\x21\x13\xe9\xf3\xc3\xc4\x13\x34\x12\x26\x9e\x33\x77\xe4\x8e\xbd\x4b\x2f\x03\xbb\xc4\xe8\xe0\x53\x11\x13\x65\xe6\x1c\x96\xad\x9c\x33\x0e\x1d\x11\xfc\x33\x09\x0f\x79\x7c\x50\xc0\x06\x76\x3f\xc2\xbf\x81\xdd\xf8\xbf\x71\xf1\x2a\xe2\xc3\x0a\x07\x9e\x76\xe1\x62\x5e\xb8\xb0\xf1\xad\xf4\x97\x46\x0a\x87\x3e\x7a\xbe\x65\xbe\x7c\xb8\x65\x15\x48\x6b\x0a\x24\x2c\xe7\xdf\x2f\xee\x22\xa6\x63\x41\x95\xc2\x7e\x1f\xf8\x3d\xa2\x00\x7b\x4d\xd6\x40\x6d\xcf\x71\xcd\xc1\xed\x56\x80\x7f\x90\x74\xc0\xdc\x2d\x5d\xfe\x41\xfb\x4a\x3c\xd6\x1f\xfa\xad\xa4\x30\x97\xca\x2c\xb0\x28\x5d\x3d\xfe\x28\xd9\xbb\xb1\x4b\x01\xce\x66\x2f\x8e\xf3\x13\x1f\xfa\x27\x47\xcf\xdd\xbe\xeb\x02\x88\xe3\x0c\x55\xa0\xeb\xe6\xa2\x91\xbd\xda\x1e\x57\x10\x33\xf2\xef\x2d\xda\x4f\x63\xf9\x28\x44\xa8\xc1\x06\x6d\x19\x26\x04\x6a\xb7\x6d\x40\x98\xdb\x5d\xed\x04\xff\xc0\xd3\xf9\xff\x94\x26\x5e\x0e\xa1\xa5\x55\x2e\x1a\x3e\x9d\x4e\x47\xb1\x19\x6a\xa4\xfe\x90\x50\xcf\xf4\xb1\xd6\x05\x3a\xf6\x12\xf6\x2f\xe3\x7e\x8b\x21\x27\x18\xad\x0d\xea\x97\x52\xd6\x2e\x4a\xfc\x0f\xae\xfb\xfc\xdf\xbe\xee\x89\x97\xb0\x77\x97\xf4\xb6\xc3\x52\xd9\x0b\x0c\x4f\x33\xa2\x60\x6e\x97\x9c\x91\x77\x8b\xcb\xe2\x70\x5e\x3e\x5c\xac\xa1\x71\xd1\xe5\x6c\x07\xc9\xf4\xf5\x89\x50\x67\x74\x41\x3e\xc6\x9c\x58\x7f\x9c\x5e\x9c\x2d\x5c\x62\xc8\x8f\x8e\x5f\x06\x9c\x3e\xdd\xa3\x89\x95\x02\x61\x54\xed\x93\x22\xe4\x0a\xe6\x00\xf8\x4b\x10\xa5\x59\x17\xe8\x55\xe2\xf8\x8b\x79\x72\x52\x94\x14\xcb\xa1\x89\xb3\xd8\x61\xee\xa8\xf5\xdc\x8f\x51\x42\xa3\xa1\x80\xae\xb1\xe9\x8a\xae\x4c\x6e\x75\xa6\x3d\x67\xf7\xf2\xfa\xb7\xea\xbd\x3e\xd9\x6f\xe3\xb0\xd6\x60\x7e\x95\xbd\xc7\x13\x22\x85\x96\x1c\x26\xe3\x7e\xe4\x2b\x15\xf6\x48\x6e\xa3\x6f\x05\x66\x2d\x69\x81\xb0\x35\xae\x82\x61\x14\x84\x61\x66\x37\x8f\x01\x58\x17\xa3\x2f\x5f\x32\xc4\x56\x28\x3f\x17\x78\xc9\x61\x36\x3b\x9b\x59\xb3\x76\x54\x01\x89\x5e\x6c\x16\xbb\xfd\x99\x0b\xd7\x68\x76\x16\xb0\xbb\xc6\x9c\x83\x0f\x46\xdd\x44\x84\xcb\x92\x89\xa4\xf9\xae\x70\x5d\x33\x51\x5e\x45\x35\x08\xc7\xac\xf2\x1b\xfd\x24\xf2\xc0\xb8\x23\x54\x33\xd7\x35\x88\x8b\xb3\x8b\x81\xea\x4d\x2b\x17\x62\xf9\x99\xb7\x68\xee\x15\x0c\xf7\xcf\x67\xb3\xb3\x18\xe8\xcf\xfa\x46\xea\xd8\x6e\x80\x28\x17\x37\x1f\x64\x0d\x04\x87\xd8\x31\xab\x92\xb1\x06\xa3\xe9\x24\x46\xdb\x65\xfb\x55\x2b\x58\x81\x52\x40\xdf\xc5\x4e\x38\x25\xb4\x82\x7d\xb4\xf0\xde\x2d\xb7\xab\x43\x9a\xde\x26\x54\x98\xf1\x74\xd7\x2f\xc4\xef\xa6\xc8\x8e\x06\xb5\x66\x2d\x15\xfb\x0c\x87\xb0\xe6\xdd\x94\x57\x8c\x28\xa9\xe5\xca\x48\xc1\x99\x70\x79\xb8\x72\x28\x4c\x2d\x71\x0b\x02\x7b\x0b\x8e\x27\x1e\xd0\xc7\x93\x56\xee\x78\xdf\x2c\x08\x19\xb9\x01\xf1\x8b\x4f\xf4\x32\x7b\xa7\x39\xcc\x82\xa0\x3d\x6c\x5e\xba\x8e\x09\xd5\x58\xeb\x4f\x52\xd1\x21\x42\x5b\x40\xfe\x5a\x80\xae\x1e\x4a\xe3\x6b\xe3\x35\xa1\x3d\x20\xbf\xb9\x9d\xfb\xc5\x79\x54\xf2\x00\xa4\x63\x76\x9e\xed\x57\xe7\xff\xb1\x88\xdd\x88\xfe\xc5\x42\x35\x0c\x66\xd4\xed\xd2\x15\xbe\x9f\x95\x70\xe3\x52\x11\x75\x99\xac\x49\x86\x71\x3b\x84\x5f\xad\x45\xba\x18\x1e\xa2\x7e\xb8\x6c\x0a\x64\x99\x0e\x74\xf9\x0e\x57\xee\x59\x78\xe8\xa4\x2a\xb8\x64\xae\xf5\xad\x5b\x1e\xa8\xf1\xf2\x79\x53\x83\xb4\x08\x3f\x44\xf6\x6c\x3a\x1d\xd5\xd8\x6a\x07\xd7\x6e\x08\x14\x02\x60\x3d\xe8\xe3\x96\x52\x1a\x6d\x14\xae\x43\x83\xf7\xa0\xf2\x81\xaf\x29\xf8\xda\x8c\x73\x21\x56\x0a\x6b\xa3\x2c\x31\x56\x85\x0a\xae\xc6\xa4\x37\x03\x63\x8e\x24\xe5\xb9\x59\x63\x05\xb4\x1d\xbc\x1e\x62\x1a\xd5\x4a\x7e\x00\x92\xa4\x89\xd8\x45\xba\x3a\xf1\xc6\xcf\xdd\xa4\x2a\x90\x90\x14\x32\x25\x39\xe4\xbd\x66\x7a\x42\x64\x55\x5b\x03\x4d\xc3\x15\x85\x2d\xc2\x94\xf2\x0a\xb4\xc6\x6d\x79\xda\xdf\xbb\x85\xaa\x76\xcd\x6f\x5b\xbb\x12\xab\x98\xd9\xcd\x38\x97\x04\xbb\x23\xc3\x7b\x24\xba\x5d\x89\xa5\xae\x9e\x16\x93\xe3\x66\xf3\x12\x2f\x81\xeb\x39\xa8\x79\x10\x5e\xa0\x67\x61\xd0\xc8\xe8\x90\xef\x68\xda\xfc\x64\x47\xaf\x9a\x9f\x89\x5f\x1d\x29\x69\x5d\x1f\xd9\xd9\x40\xdb\x25\x95\x15\x76\xb1\xe1\xf6\xfc\x6a\xbe\xb8\x7e\x77\x7b\xbe\xb8\x98\xe7\x82\xd5\xae\xf9\x8f\xf9\x7e\x46\x88\xeb\x4e\x3a\x36\xff\x9f\x1b\x01\x9c\x0b\x17\xe8\x41\x10\xd0\x5d\x42\xac\xb0\xc0\x25\xd0\x76\x06\x9b\x35\xb6\xf6\xbf\xfb\x19\xb7\x7f\xf6\x6e\xbd\xe6\x72\xf7\x9d\x18\x50\x2b\xb6\xc5\x06\x7e\x1f\xcc\x26\x71\xd0\xca\x95\x89\x7e\xbf\x69\xc2\x7d\xac\x88\xc4\xf1\xf8\x3d\x0e\x4f\xe3\x19\x74\x98\x99\x36\x6d\x51\x6f\xa0\xd4\x85\x85\x66\xb4\xf4\xad\xa7\xbf\x3f\x6f\x3a\xd0\x63\x69\xdf\xf9\x37\xa3\x87\x76\xa2\xdd\xce\x9d\x86\xed\x56\xa4\x0f\x57\xab\xf0\x7d\x44\x95\xbe\x10\xaf\x39\x2b\xd7\x26\x3c\xcd\x76\x5e\x1e\x1b\xbf\x7e\x94\xd9\x4a\x6e\xab\x64\x4a\x43\x77\x02\x57\x8c\xf8\xf8\xeb\xc2\x07\x13\x65\x28\x83\x68\xcc\x10\xff\x0a\x00\x00\xff\xff\xf1\xb0\xdf\xf1\x6b\x1b\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x96\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x52\x85\x1a\x85\xc2\xd2\xfc\x92\x54\x85\xda\x5a\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x84\x3a\xd7\xbc\x64\x4c\x65\x80\x00\x00\x00\xff\xff\xc1\xc1\xc9\xa5\x80\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x6d\x6f\xdb\x38\x12\xfe\xee\x5f\x31\x50\x0f\xf0\x1d\x50\xdb\x68\xbb\xc0\xdd\x0a\xe8\x07\x6f\x56\x6d\x82\x6d\x62\xc3\x76\x0e\xed\x2d\x16\x5a\x4a\x1a\x59\xbc\xd0\x1c\x95\xa4\xec\x78\x73\xf9\xef\x87\x11\x29\xc7\x51\xe2\x36\x68\x3e\x45\xe6\xbc\x3c\x9c\x79\xe6\x85\xa3\xd1\x68\xf0\x0a\x3e\x5c\x7c\xbe\x4c\x62\x98\xea\xbd\xab\xa4\x5e\x43\x86\x8a\x76\x20\x35\x08\xa5\x46\xb9\xa8\x2d\x54\xc2\x82\x74\x43\x0b\x5b\xa1\x1a\x04\x83\xb5\x12\x39\x16\x90\xed\xc1\x62\xc1\xa2\xae\xc2\xc1\x2b\x08\x7f\x54\xa3\xb6\x95\x2c\xdd\x46\x58\x87\xc6\xe6\x46\xd6\x6e\x6c\x2b\xd8\x55\x32\xaf\x40\x5a\xd0\xe4\x40\x16\x28\xd4\x6b\xd8\x21\xd8\x8a\x1a\x55\x40\x29\x6f\xc1\x55\xc2\x8d\x07\x8a\x72\xa1\xbc\x72\x3c\x00\xa8\xc8\x3a\xcb\xff\x00\xb4\x27\xfc\x3d\x00\xd8\x0a\x13\x7e\x15\xda\xca\x4c\x61\x9a\x93\xd6\x98\x3b\x49\x3a\xf6\x92\x8f\x4e\xeb\xbd\xab\x48\xa7\x52\x3b\x34\xb5\x41\x36\x0e\x93\xc6\x9a\x49\x26\xf5\xc4\x1f\xbe\x1d\x0c\x1e\x5d\x20\x95\x96\x8d\x3a\x21\x35\x1a\xf9\x17\x16\x31\x7c\x10\xca\x62\x4f\x2a\x57\x12\xb5\x4b\x33\xa9\x85\xd9\x1f\x19\xa5\xfc\x89\xbd\x8d\x58\x63\xea\xc4\x3a\x86\x68\xfb\xef\x64\xb1\xbc\x98\x5d\x45\x7d\xa1\x1d\x66\xec\xd5\x92\xc2\xa0\xa0\xc5\x06\x63\x88\x2e\x2e\xa7\x1f\x93\x74\xbe\x48\x3e\x5c\x7c\x9e\xf8\x8f\xd5\x97\x79\x32\xda\x61\x36\x0a\x0a\x71\xdf\xaa\xc1\x75\xda\x18\x15\xc3\xf0\x72\xba\x5c\x25\x8b\x74\xb6\x48\x3e\xa6\xd7\x8b\x4f\xc3\x9e\x57\x1f\xef\xb4\xc0\x52\x34\xca\xa5\xb6\xc9\x0a\xda\x08\xa9\x63\x18\xae\x92\xcb\xf9\x62\x76\xbd\x4a\x16\x17\xf3\xb1\x96\xf5\x58\xd2\xd0\x9b\x0f\xec\x09\xff\xaf\x2a\x69\xbb\x6c\x66\x08\x6e\x5f\xe3\x7b\xa9\x4b\x23\x5e\x43\xd6\x38\x4e\x75\x25\xb6\x08\x8e\x40\xc9\x2d\xc2\x4e\xba\x0a\x0c\xae\x25\x69\x2f\x06\x25\x19\xd0\xb4\x0b\xe6\x32\xcc\x45\x63\x11\xa8\x04\x85\x6b\x91\xef\xc1\xa0\xb0\xa4\x6d\x0f\xb9\xa1\x86\x91\x5b\x54\x98\x3b\x32\x31\x0c\x8f\x8d\xf6\xef\xc9\x67\xd6\x99\xfd\xb7\xe5\x5f\xc1\x15\xb5\x14\x85\x5d\xb5\x07\xc7\x17\x93\x16\x04\x14\xb2\x2c\xd1\xa0\x76\x50\x08\x27\xda\x2b\xfa\xcb\x49\x07\xb2\x0f\xac\x36\xb4\x41\x57\x61\x63\x53\x4d\x05\x1e\x79\xbc\x0b\x2e\x87\x31\x0c\xbd\xd7\xfb\x2e\xa0\x4b\x74\x30\xfd\xab\x31\x08\xb6\xc6\x5c\x96\x32\xf7\xae\x38\x36\xcc\x7c\x2c\xa0\xbb\x42\xcf\x9d\x3f\x3d\xba\xa0\x23\xc3\xec\xa9\x0d\x6d\x65\xc1\x74\x8f\x04\x1b\x4e\x33\x45\x59\xf4\x42\xe5\x1b\xa9\x8b\x18\x22\xca\xfe\x8b\xb9\x7b\xa9\xd2\x83\x9b\x54\xe4\x39\x35\xda\x79\x06\x0f\x17\xc9\xc7\x8b\xe5\x6a\xf1\x25\x5d\xae\x66\x0b\xe6\xef\xf4\x3f\xd7\x8b\x24\x9d\x9e\x9d\xcd\xae\xaf\x56\x57\xd3\xcb\xa4\x9f\xae\x97\xbb\xb8\xc1\xfd\x77\x3d\xfc\x96\x7c\xf9\x01\x07\x87\x16\x10\x43\xd4\xc9\xfd\x40\x28\x0c\x0a\xb5\x89\x21\xca\xc9\xe0\x78\x27\x75\x41\x3b\x3b\xd6\xe8\xa2\x67\x6a\x29\xfc\x72\x2e\x4c\x01\x39\x15\xe8\x29\x18\xea\x63\xfc\x48\xe6\xac\x31\x4c\x48\xc5\x34\x45\xc8\x55\xc3\x75\x0c\xd6\x09\x87\x20\x1c\x14\x58\x2b\xda\x6f\x98\xb2\x4e\x6e\x10\x0a\x42\xdf\x80\x7d\x2d\x56\x08\xcc\x4d\x1b\x8c\x79\xfc\x68\xb0\xe0\x32\xe5\x53\xdf\x17\x7c\xb1\x2a\x91\xa1\xb2\x20\xea\x5a\x49\x2c\x40\x68\xe6\xa2\x28\xf6\x2c\x9b\x21\x7c\x6d\xd0\x48\x2c\x82\x29\xb1\x16\x52\x5b\xc7\x18\xd8\x4e\x4d\x52\xbb\x76\x56\x30\x0a\x3f\x33\x02\xb8\xb6\xed\x7b\x21\x25\xf6\x19\xd1\x8d\x05\xd3\xe8\x31\x4c\x95\xa5\xd7\xc1\x1c\x1f\xfb\x4a\x6f\x07\x90\xcc\x05\xb4\x69\x87\xd0\xb1\x20\x2a\x85\x52\x16\x32\x91\xdf\x44\x0c\xe8\x0d\xe3\x34\x54\x1b\x29\x1c\xaa\x3d\xec\x2a\x34\x08\xc2\x1e\xdb\x0b\xd9\x3a\x58\x54\xb4\xe6\x7a\x0b\x21\x1a\xc3\xaa\xd5\xd9\x09\x0b\x42\x59\x82\x42\xda\xbc\xb1\x56\x92\x06\x91\x11\x57\x7d\x19\xac\xb5\xe3\xf1\xc8\x1f\x03\x28\xc8\x67\x2d\xf4\xb9\xd6\x83\x85\xf7\xef\xc1\x37\xbb\x36\xec\x87\x26\xc7\x06\x82\xad\x1a\x4d\x89\x39\x27\xb4\x44\xd1\xce\x2e\xb6\xd6\xa6\x4b\xe8\x23\xe5\x70\xff\x4a\xae\x2b\x34\x1c\xc3\x2e\xa6\x56\x9a\x43\x16\x3a\xbf\x8f\x39\xb3\xc0\xad\xb4\xd2\x81\x12\x1c\xcf\xbf\xd7\x64\xd9\xcf\x9e\x1b\x9c\xc0\x0d\x69\x8b\x0e\xc8\xc0\xdf\xc8\x55\x68\xfe\x71\x82\xea\xbe\xed\x76\x0e\x62\x78\xf3\x9d\x92\x38\x96\x3c\xdd\x29\x5b\xe2\xc6\x10\xd5\x06\x2d\xea\x27\x2d\xa7\xdf\x53\xf1\xb6\x26\xc3\x38\xfc\xa4\xdc\xa2\xb1\xed\xfc\x1f\xce\x17\xb3\xcb\x64\x75\x9e\x5c\x2f\xd3\xe4\xf3\x7c\xb6\xe0\xd9\x17\x66\xe3\xf0\x9b\x13\x57\x5b\x27\x94\x8a\x61\x65\x1a\xfc\x06\x4e\xef\xaf\x36\x58\xca\xdb\xfe\x6c\xee\x83\x7e\xa8\xc1\x94\x27\x46\x0c\xc3\xe9\xd5\xf2\xe2\x97\x4f\x49\xfa\x6b\x32\xff\x34\xfb\xd2\x8e\xf1\x80\xaa\x5b\x57\x2c\x9a\xad\xcc\x31\xcd\x0c\xdd\xf0\xf5\x1e\xc1\xfa\x96\x20\xe3\x8a\x01\xee\xee\xfe\x8c\xee\xee\x40\xa5\xc2\x66\x87\xa9\xde\x1e\xda\xb4\x90\xb9\xfb\xfd\x24\xbc\x3f\x40\x96\xa7\xc1\x33\x81\x87\x64\xe4\x5a\xea\x21\xa0\xb2\x18\x5c\xf8\x78\x34\x46\xc1\xfd\x7d\xf4\xe7\xfd\x7d\x2f\x04\x1d\xca\x5c\x38\xa1\x68\xdd\xc1\x3c\xb9\xd3\x04\xf9\x51\x90\x3f\xda\x6b\x9e\x5d\x5b\xd0\xe5\x05\x3b\xb7\x31\xfc\x1e\x55\xce\xd5\x36\x9e\x4c\xce\x67\xcb\x76\xa6\xc4\x6f\xdf\xfd\xf3\xe7\xe8\x0f\x1f\x5f\x87\x9b\x9a\x69\x7f\x22\x6e\x27\x01\x75\x7a\x07\x64\x5e\xaf\xbf\x70\xbd\x82\xab\xd9\x2a\x89\xfd\x2e\x24\x2d\x18\x2c\x1a\x5d\x08\xed\xfc\x9a\x60\xf0\x6b\x23\x43\x77\xad\x84\x2e\x14\x42\xa0\x2c\xd8\x1b\xdc\x41\x86\x6e\x87\xa8\x83\xa9\xde\x3e\x3d\x0a\x29\xe7\xee\x39\x6b\x33\xd0\xb6\xe0\xd9\xd9\xbc\x17\x14\xbc\x15\x9b\x5a\xa1\x5f\x5e\x39\x71\x87\xb2\x88\xb6\xcb\xf3\xd9\x62\xc5\x95\xf0\x64\xef\xcc\x29\xbf\xa9\x65\x97\x70\x34\x0f\xe4\x3e\x9b\x9d\xfd\x36\xbf\x58\x9d\xa2\xf7\x13\xc5\x4c\x58\x0c\x3b\x6b\xa7\xfa\xcb\x74\x99\x70\x2e\xbe\xab\xfb\x00\xb5\x53\x7d\x3e\xc0\xbf\x52\x3b\xc5\x0a\x2c\xa5\xc6\xef\x76\x27\xb0\xf4\x30\x65\x9c\xb0\x37\x50\x4a\x85\x5d\x8f\x6c\x65\xc7\xfb\x8d\x02\xa9\xad\x2c\xfc\x58\xec\x9b\x04\x43\x0a\xa1\x34\xb4\x79\x26\x23\x3b\xa9\x54\x37\xf7\x1a\x47\x35\xd5\x0d\x93\x85\xd7\xc2\xc6\xf2\xab\xea\x39\x8b\xfd\xcd\xb5\xcd\x26\x0f\xd1\xbd\xd4\xeb\xa3\x31\xa5\x9b\x4d\x86\x86\xf7\xe0\xa3\xc9\xd1\xa7\x1b\xf2\x83\x48\x8a\x4c\xb5\x43\x85\x9f\x70\xc2\x30\x53\x1c\x1a\x2d\x14\xf3\xed\x29\x6a\xf6\xb7\xc3\xa1\xc1\x47\x7c\xf3\xfb\x62\x00\xbd\x81\x76\x04\x3a\x02\xb1\x25\x59\xb4\x78\xa4\xce\x79\xe7\xe0\xcd\xc4\x3a\x86\x55\x8a\xdc\x41\x29\x75\xd1\xe1\x3e\xb8\xf2\x0f\x34\x80\x9c\x36\x1b\xd2\xdd\x17\x7f\xeb\x52\xae\x5b\xa2\xc4\x30\x41\x97\x4f\x7c\x4b\x99\x1c\x24\x5e\xc8\x61\x2f\xfc\xf0\x58\x0c\x57\x68\x32\x25\xf3\x43\x4f\x6f\x1f\x40\x77\x77\x50\x1b\xde\x41\x0e\xfd\x21\x82\x71\x72\xeb\xe3\x73\xd9\x1a\x38\x27\xdb\x6e\xaa\x10\xc5\xff\xfa\xe9\xa7\x77\x93\xa0\x1f\xc1\xff\xe0\x6b\x43\x0e\x21\xb4\xb5\x23\x17\xa2\x96\x3f\x6a\xfe\x59\xb3\x2f\x69\x64\xf0\x2a\xbc\xd9\xaf\x08\x14\xe9\x35\x1a\xd0\x88\x05\x6f\x64\x96\xd3\xf1\x24\xd1\xa3\x77\xe3\x9f\xc7\x6f\xdf\x8e\xde\x84\x77\xd8\xd0\x60\x5b\x3c\xa4\x7d\x51\x74\x2d\x68\x8f\x2e\x00\x61\x8a\x3d\x84\x93\xbf\xc2\x06\xdf\x41\x19\x0e\x06\x44\xa1\xfb\xda\xd4\x51\xea\x33\x7a\xf2\xbd\xfe\xff\x00\x00\x00\xff\xff\x7f\xf9\xc0\x98\x6c\x10\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x41\x8b\x23\x37\x10\x85\xef\xfe\x15\x8f\xdd\xc3\x5c\xe2\x99\x59\x72\x33\x24\xa7\x24\xb0\x87\x90\x43\x72\x08\x84\xd0\xa8\xd5\x65\xb7\xb0\x5a\x25\x54\xa5\x71\x0c\xfb\xe3\x83\xd4\xed\xf6\xcc\x60\x8f\xdd\xe4\x90\x9b\x51\xab\x5e\x7d\x55\x7a\x2a\x79\x8d\x60\x06\xda\xe0\x27\x8a\x9e\x8f\xf8\x2d\x52\xf8\xbd\x77\x5b\x85\x0b\xdb\x64\x44\x53\xb6\x9a\x13\xe1\xc0\x69\xef\xd9\x74\x2b\xa0\x67\x51\xd9\xc0\xb3\x35\x7e\x30\xa2\x94\x56\xc0\xce\x68\x4f\xa9\xd9\x1a\x5b\xbe\x6d\x8d\x17\x5a\xad\x80\xcf\x38\x10\x02\x51\x87\x17\x93\x9c\x69\x3d\x09\xb6\x89\x07\x70\xa4\x20\x25\xd1\x18\x02\x65\xb4\x04\x17\x20\x96\x23\xad\x80\xc4\x9e\x64\xb3\x02\x80\xf5\xfb\xdd\x45\x39\xb2\x68\xa3\x46\xf6\xf3\xa6\xb1\x90\x36\xb9\xb0\x43\x8e\xd0\x9e\x20\x5d\xa8\x1f\x01\x37\x44\x4e\xda\x14\xd5\xcd\xb4\x84\x29\xe2\x2c\x5e\xb6\xbf\x11\x13\xd2\x1c\x61\x39\x6c\xdd\x0e\x72\x0c\x16\x9d\xa1\x81\x83\x90\x2e\xd1\x0d\xdc\x51\xb3\x4b\x9c\xe3\xbc\xa5\x92\x37\xa5\x15\x9b\x2a\xfc\x36\xef\xd7\xaa\xfa\x4a\xa1\x65\x56\xd1\x64\x62\x63\xb2\xb2\x89\x31\xf1\x0b\xa5\xda\xa4\x77\xfd\x5c\x9b\x20\xae\xf5\x54\x3a\xda\x8d\x87\x5a\xd2\x63\x56\x40\x51\xc0\x49\x62\x49\x19\x97\x21\x2e\x92\x9b\xd0\x21\x0b\x21\x71\x56\x4a\xb5\x5a\x6c\xdd\x75\xd8\x73\x92\xe2\x2e\xea\x6a\x65\x4b\xd8\xc6\xb0\x8b\xed\x1d\x19\x1e\x8f\x83\xff\x18\x95\x76\x4e\x34\x1d\xff\x67\xd8\x89\xe2\x2a\xee\x59\xe5\x40\x6d\x63\x39\x48\xf1\xc0\x7d\x46\x38\x50\x8b\x29\x62\x09\xee\xab\x44\x23\xd2\x67\xfc\xf2\xf5\xcf\x5f\x7f\xc6\x1a\x7f\xf4\x94\xe8\x41\x60\x90\x8c\xa5\x22\xde\x39\x75\x1c\x70\x28\x1f\xea\x1d\xac\x83\x04\xde\xb4\xe4\xe1\x24\x3c\x68\xf1\x9e\x77\xd4\x41\x79\x52\x9b\x1b\x31\x6f\xaf\x96\xed\x72\xbd\xcb\xd6\xe7\x32\x64\xce\x37\xdb\x85\x77\x71\xb7\x2c\xfa\x1d\xb4\x77\x02\x27\x88\x89\x5b\x4f\x83\x51\x67\xd1\x92\x35\xe5\xe0\xb5\xa7\xab\x7a\x31\xf1\x40\xda\x53\x96\xb1\xc5\xb6\x27\xbb\xaf\xd3\x8a\x82\xe4\xb1\xc2\x44\x45\x79\x62\x3e\x38\xed\xaf\x56\x25\xe4\xc9\x2a\x27\xe4\xf8\x64\x5e\x8c\xf3\x65\x20\x3e\x89\xed\xa9\xcb\xf5\xf7\xe3\x74\xe2\xd2\x93\xf7\x1b\x3c\x3c\x65\x49\x4f\xad\x0b\x4f\x6c\xb1\x23\xad\x29\x04\x6b\x8f\x4f\xc5\x27\x1c\x7e\xa8\xba\x9f\xf0\x0d\x07\x8b\xb5\x7f\x98\x8e\x70\x34\x11\xa5\x62\x27\xc9\xfe\x34\xab\x72\x50\xe7\x4f\x6b\x8f\xa2\x1d\x67\x6d\xbc\x0b\x24\x7f\x3d\xff\xfd\xcd\x05\xc5\x8f\xf8\x32\x4b\x68\x72\x24\x1b\x7c\xff\x3c\xad\x74\xe4\xcd\x71\x83\x2f\xcf\xab\x1b\xbe\x7c\xdf\xb3\x9b\xb6\x3c\x07\x2c\x71\xe5\xab\xa8\x8f\x79\x84\xd2\x8b\xb3\xd4\x58\xa3\xc6\xf3\xee\x4e\xa8\xfa\x7c\x8c\x91\x98\x22\x17\x3d\x25\x6f\x93\x5e\x99\x3c\x35\xe9\xbc\xb7\x4d\xbc\xbf\x7b\xa8\x17\xbe\xd3\xea\x89\x73\x14\xb8\x8d\x79\x39\xf1\x45\x46\xa5\x21\x7a\xa3\xff\x01\xf2\xa4\xb0\x98\xf2\x4a\xea\x1b\xa7\x4d\xff\x98\x21\x96\xbf\x19\xf7\x13\x9e\x42\x96\x9c\xef\x1c\xf3\x31\xcd\x38\xe9\x9b\x53\x29\x4b\xa8\xa6\xb7\x65\x0e\x5d\xfe\xc0\x9c\xd3\x5e\xa4\xb4\x6c\xf7\xd1\x69\x93\xdd\x02\xaa\xf9\x95\xbc\xfb\x1d\x99\xd2\xac\xb3\x5b\xfd\x1b\x00\x00\xff\xff\x41\xe4\xce\x7e\x6d\x0a\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x73\x1b\x37\x0c\xbd\xf3\x57\x60\x94\x43\x2e\xd9\x0f\x39\x49\x33\xb3\x33\x39\xb8\x71\x92\x66\xda\xd8\xae\xe4\xf6\x9a\xa1\x48\x48\xcb\x9a\x4b\xb0\x20\xb8\x8e\xfb\xeb\x3b\xdc\x5d\x5b\x72\x93\xce\xb4\x27\x69\x89\x87\x87\xc7\x47\x00\xda\x7b\xba\xbb\x70\x49\xef\x3c\xda\x0b\x32\xb7\xc8\x1d\xec\xb5\x4f\xa8\x74\x74\xbf\x23\x27\x47\xa1\x83\x71\xad\x6c\x48\x3f\xba\x60\xcf\xad\x65\x4c\xa9\x83\xf5\xd9\x9b\xba\xad\xdb\x7a\xdd\xbd\x7e\x59\x82\x1b\x34\x99\x93\x1b\x71\x83\x89\xfc\xf8\x8e\xc2\xbe\x83\x06\xc5\x34\xc4\xee\xe0\x42\x13\xc8\x62\xc3\x53\xb0\x36\x14\xf6\x25\xe9\x82\x06\xed\x42\x07\xc6\xe7\x24\xc8\xb5\x27\xa3\x7d\x09\x7c\xba\xee\x60\xfd\xe6\xac\x5e\x97\x22\x6b\x65\x27\x65\x85\xd3\x1d\x3a\x05\x30\x7f\x6f\x7b\x37\x6c\x88\xe4\xc2\x31\x1a\x21\xbe\xef\xa0\x19\x35\x37\xde\xed\x9a\x19\x91\x7a\x37\x3c\x81\x6f\xcb\x3f\x59\x70\x9c\xc3\x09\xae\x4e\x64\x6e\x15\x00\x7e\x45\xf3\x93\x0e\xd6\x23\x5f\xea\x01\x3b\x08\x5a\xdc\x88\xca\x45\x29\x2e\xa5\xed\x7d\x30\xd7\xc8\x8e\x6c\x07\xab\x97\x6d\x5a\x29\x37\xe8\x03\x1e\xc5\xed\x89\x07\x2d\x1d\x7c\x3e\xdf\xde\xbc\xdf\x7c\xb9\xda\xbc\xff\xf8\xe5\xb7\xcd\x2f\x0a\xc0\x6b\xc1\x24\x1d\x7c\x98\x0c\xbe\x75\xc1\x76\x70\x49\x76\xc9\x55\xb7\x79\x87\x1e\xe5\x9c\x0f\x79\xc0\x20\xa9\x90\x45\xb2\xd5\xa0\x83\xdb\x63\x92\x2a\x6a\xe9\xcb\x61\xf5\xad\xb1\x91\x6c\x52\x00\x3b\x22\x49\xc2\x3a\x56\x85\xcc\x3c\x6a\xfa\x4e\xc6\x23\xb4\x3e\x42\x8b\x7a\xd4\x92\x19\xab\x43\xd1\x3a\xa7\x6e\x48\xb4\xe0\xcf\xb3\xba\x77\xde\x61\x90\x77\xc8\xe2\xf6\xce\x68\xc1\xb7\xc2\x19\x5f\x3c\xc1\x6c\x91\x47\xe4\x7f\x62\x14\x00\x4f\xa8\xca\x1c\x23\x4b\x89\x55\x01\xac\x14\x40\x09\x55\xd6\xf1\xbf\x88\x3e\xcd\x2c\x6f\x15\xca\x93\x54\x86\x82\x30\x79\x8f\x5c\x69\x11\x6d\xfa\xca\x62\xf9\x99\x49\x9e\x17\xee\xe7\x0a\xa0\x30\x54\x5e\xef\xd0\x2f\x55\xa7\x03\x26\x8f\x93\x05\x1c\x50\x30\xd5\x8e\x1a\x43\x43\xcc\x47\xd5\x15\x30\x1e\x1c\x85\xb7\x91\xdd\xa0\xf9\xbe\xc8\xf4\x94\x6d\x15\x99\x46\x67\x71\x11\xbb\xd2\x7f\x65\x9e\x2f\x31\x45\x4f\xdd\x5f\x9d\xde\x64\x0a\x3f\xe4\x36\x53\xd6\x34\x11\x2b\x35\xe8\x32\x06\x8b\xc5\x14\x02\x1a\x71\x14\xae\x46\x64\x76\x76\xf6\x4a\x1b\x83\xb1\x04\x05\x83\xdc\xdc\x47\x4c\x1d\xe8\x18\x7d\xf1\xc4\x51\x68\xc6\x60\x4f\x6f\x13\x99\x84\x76\x79\xff\xe2\x14\xf3\x47\xa2\x50\x64\x1e\x49\xfe\x13\x47\xe9\xaf\xcc\xa5\x81\xcf\xda\x56\x01\xfc\x19\xcb\x1e\x68\xdb\x45\x76\x79\xfc\x65\x0a\x26\x67\x4f\xfb\x2a\xa0\xdc\x11\xdf\x5e\xfb\x7c\x70\x61\x1e\x2b\x46\xdb\x6b\x69\x28\x62\x48\xbd\xdb\x4b\x45\x63\xaa\x52\xde\x05\x14\xf5\x0c\x96\x84\x99\x0f\x92\x70\x36\x02\xae\x3c\xb3\xcd\x06\x2d\xb8\x00\xb3\x9b\xb0\xae\xdb\xfa\x07\xd0\xc1\xc2\xd5\xf6\x3d\xbc\xac\xdb\xfa\x0c\xee\x7a\x67\x7a\xf5\x0c\x2c\x46\xc6\xa9\x59\xe0\x1b\x05\xa0\x77\x34\x62\x0d\x37\x3d\x82\xdc\x11\xa4\x9e\xb2\xb7\x30\x68\x31\x7d\xad\x9e\xd4\x2f\xbe\x0f\x92\x3b\x58\xbf\x7a\x5d\x2e\xfe\x3f\x6f\x13\xc9\x7e\x5e\x46\xf8\x81\x2f\x21\x8f\x2e\x1c\x3e\x85\x3d\x15\xf2\xdd\xe9\x66\x6d\xa7\xbd\xda\x76\xeb\xf6\x6c\xaa\x56\x82\x97\x73\xc5\x0e\xc4\xc4\x57\x00\x53\x8f\x4d\x4d\x72\xde\x81\xd1\xb5\x61\x51\x23\xf9\x3c\xe0\xf7\x76\xe1\xd2\x76\x8f\xda\xe6\x35\x5b\xcf\x09\x49\x45\xa6\xaf\xf7\x4f\x97\x4e\x39\xa9\x06\xb2\x58\xbe\xa0\x34\xf0\xc3\xf6\x5b\xca\x1c\x7d\x99\xb8\x7e\xcd\x24\x7a\xc6\x46\xe4\x0f\xdb\x8f\x4c\x39\x76\xea\xef\x00\x00\x00\xff\xff\x0a\xb7\x3b\xf7\x5e\x06\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x73\x1b\x37\x0c\xbd\xf3\x57\x60\x94\x43\x2e\xd9\x0f\x39\x49\x33\xb3\x33\x39\xb8\xb6\x93\x66\xda\xd8\xae\xe4\xf6\x9a\xa1\x48\x48\xcb\x9a\x4b\xb0\x20\xb8\x8e\xfb\xeb\x3b\xdc\x5d\xdb\x72\x93\xce\xb4\x27\x69\x89\x87\x87\xc7\x47\x00\xda\x7b\xba\x3b\x77\x49\xef\x3c\xda\x73\x32\xb7\xc8\x1d\xec\xb5\x4f\xa8\x74\x74\xbf\x23\x27\x47\xa1\x83\x71\xad\x6c\x48\x3f\xba\x60\x4f\xad\x65\x4c\xa9\x83\xf5\xc9\xbb\xba\xad\xdb\x7a\xdd\xbd\x7d\x5d\x82\x1b\x34\x99\x93\x1b\x71\x83\x89\xfc\x78\x46\x61\xdf\x41\x83\x62\x1a\x62\x77\x70\xa1\x09\x64\xb1\xe1\x29\x58\x1b\x0a\xfb\x92\x74\x4e\x83\x76\xa1\x03\xe3\x73\x12\xe4\xda\x93\xd1\xbe\x04\x3e\x5d\x77\xb0\x7e\x77\x52\xaf\x4b\x91\xb5\xb2\x93\xb2\xc2\xe9\x0e\x9d\x02\x98\xbf\xb7\xbd\x1b\x36\x44\x72\xee\x18\x8d\x10\xdf\x77\xd0\x8c\x9a\x1b\xef\x76\xcd\x8c\x48\xbd\x1b\x9e\xc1\xb7\xe5\x9f\x2c\x38\xce\xe1\x08\x57\x27\x32\xb7\x0a\x00\xbf\xa2\xf9\x49\x07\xeb\x91\x2f\xf5\x80\x1d\x04\x2d\x6e\x44\xe5\xa2\x14\x97\xd2\xf6\x3e\x98\x6b\x64\x47\xb6\x83\xd5\xeb\x36\xad\x94\x1b\xf4\x01\x9f\xc4\xed\x89\x07\x2d\x1d\x7c\x3e\xdd\xde\x5c\x6c\xbe\x5c\x6d\x2e\x3e\x7e\xf9\x6d\xf3\x8b\x02\xf0\x5a\x30\x49\x07\x1f\x26\x83\x6f\x5d\xb0\x1d\x5c\x92\x5d\x72\xd5\x6d\xde\xa1\x47\x39\xe5\x43\x1e\x30\x48\x2a\x64\x91\x6c\x35\xe8\xe0\xf6\x98\xa4\x8a\x5a\xfa\x72\x58\x7d\x6b\x6c\x24\x9b\x14\xc0\x8e\x48\x92\xb0\x8e\x55\x21\x33\x8f\x9a\xbe\x93\xf1\x08\xad\x9f\xa0\x45\x3d\x6a\xc9\x8c\xd5\xa1\x68\x9d\x53\x37\x24\x5a\xf0\xe7\x59\xdd\x99\x77\x18\xe4\x0c\x59\xdc\xde\x19\x2d\xf8\x5e\x38\xe3\xab\x67\x98\x2d\xf2\x88\xfc\x4f\x8c\x02\xe0\x09\x55\x99\xa7\xc8\x52\x62\x55\x00\x2b\x05\x50\x42\x95\x75\xfc\x2f\xa2\x8f\x33\xcb\x5b\x85\xf2\x24\x95\xa1\x20\x4c\xde\x23\x57\x5a\x44\x9b\xbe\xb2\x58\x7e\x66\x92\x97\x85\xfb\xa5\x02\x28\x0c\x95\xd7\x3b\xf4\x4b\xd5\xe9\x80\xc9\xe3\x64\x01\x07\x14\x4c\xb5\xa3\xc6\x85\x3d\xeb\x07\xcd\x15\x30\x1e\x1c\x85\xf7\xd3\x69\x91\xe8\x29\xdb\x2a\x32\x8d\xce\xe2\x22\x74\xa5\xff\xca\x3c\x5f\x60\x8a\x1e\x3b\xbf\x3a\xbe\xc5\x14\x7e\xc8\x6d\xa6\xac\x69\x1a\x56\x6a\xd0\x65\x04\x16\x7b\x29\x04\x34\xe2\x28\x5c\x8d\xc8\xec\xec\xec\x93\x36\x06\x63\x09\x0a\x06\xb9\xb9\x8f\x98\x3a\xd0\x31\xfa\xe2\x87\xa3\xd0\x8c\xc1\x1e\xdf\x24\x32\x09\xed\xf2\xfe\xd5\x31\xe6\x8f\x44\xa1\xc8\x7c\x22\xf9\x4f\x1c\xa5\xb7\x32\x97\xe6\x3d\x69\x5b\x05\xf0\x67\x2c\x3b\xa0\x6d\x17\xd9\xe5\xe1\x97\x09\x98\x5c\x3d\xee\xa9\x80\x72\x47\x7c\x7b\xed\xf3\xc1\x85\x79\xa4\x18\x6d\xaf\xa5\xa1\x88\x21\xf5\x6e\x2f\x15\x8d\xa9\x4a\x79\x17\x50\xd4\x0b\x58\x12\x66\x3e\x48\xc2\xd9\x08\xb8\xf2\xc4\x36\x1b\xb4\xe0\x02\xcc\x6e\xc2\xba\x6e\xeb\x1f\x40\x07\x0b\x57\xdb\x0b\x78\x5d\xb7\xf5\x09\xdc\xf5\xce\xf4\xea\x05\x58\x8c\x8c\x53\xa3\xc0\x37\x0a\x40\xef\x68\xc4\x1a\x6e\x7a\x04\xb9\x23\x48\x3d\x65\x6f\x61\xd0\x62\xfa\x5a\x3d\xab\x5f\x7c\x1f\x24\x77\xb0\x7e\xf3\xb6\x5c\xfc\x7f\xde\x26\x92\xfd\xbc\x8c\xef\x03\x5f\x42\x1e\x5d\x38\x7c\x0a\x7b\x2a\xe4\xbb\xe3\xad\xda\x4e\x3b\xb5\xed\xd6\xed\xc9\x54\xad\x04\x2f\xe7\x8a\x1d\x88\x89\x6f\xa6\x0e\x9b\x5a\xe4\xb4\x03\xa3\x6b\xc3\xa2\x46\xf2\x79\xc0\xef\x6d\xc1\xa5\xe9\x1e\x95\xcd\x0b\xb6\x9e\x13\x92\x8a\x4c\x5f\xef\x9f\xaf\x9b\x72\x52\x0d\x64\xb1\x7c\x41\x69\xdf\x87\xbd\xb7\x94\x79\x72\x65\xe2\xfa\x35\x93\xe8\x19\x1b\x91\x3f\x6c\x3f\x32\xe5\xd8\xa9\xbf\x03\x00\x00\xff\xff\xcd\xd7\x9a\x63\x58\x06\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x73\xdb\x36\x10\xbd\xe3\x57\xec\x28\x87\x5c\xc2\x0f\x39\x49\x33\xc3\x99\x1c\x5c\xdb\x49\x33\x6d\x6c\x57\x72\x7b\xcd\x40\xc0\x52\x44\x05\x62\xd1\xc5\x92\x8e\xfb\xeb\x3b\x20\x69\x4b\x6e\xd2\x99\xf6\x24\x11\xfb\xf6\xed\xdb\x87\xc5\x6a\xef\xe9\xfe\xd2\x25\xbd\xf3\x68\x2f\xc9\x1c\x90\x1b\x68\xb5\x4f\xa8\x74\x74\xbf\x23\x27\x47\xa1\x81\x71\xad\x6c\x48\x3f\xba\x60\xcf\xad\x65\x4c\xa9\x81\xf5\xd9\xbb\xb2\x2e\xeb\x72\xdd\xbc\x7d\x9d\x83\x1b\x34\x03\x27\x37\xe2\x06\x13\xf9\xf1\x82\x42\xdb\x40\x85\x62\x2a\x62\xb7\x77\xa1\x0a\x64\xb1\xe2\x29\x58\x1a\x0a\x6d\x4e\xba\xa4\x5e\xbb\xd0\x80\xf1\x43\x12\xe4\xd2\x93\xd1\x3e\x07\x3e\xdd\x36\xb0\x7e\x77\x56\xae\x73\x91\xb5\xb2\x93\xb2\xcc\xe9\xf6\x8d\x02\x98\xbf\xb7\x9d\xeb\x37\x44\x72\xe9\x18\x8d\x10\x3f\x34\x50\x8d\x9a\x2b\xef\x76\xd5\x8c\x48\x9d\xeb\x9f\xc1\xb7\xf9\x9f\x2c\x38\x1e\xc2\x09\xae\x4c\x64\x0e\x0a\x00\xbf\xa2\xf9\x49\x07\xeb\x91\xaf\x75\x8f\x0d\x04\x2d\x6e\x44\xe5\xa2\x64\x97\xd2\xf6\x21\x98\x5b\x64\x47\xb6\x81\xd5\xeb\x3a\xad\x94\xeb\xf5\x1e\x8f\xe2\x5a\xe2\x5e\x4b\x03\x9f\xcf\xb7\x77\x57\x9b\x2f\x37\x9b\xab\x8f\x5f\x7e\xdb\xfc\xa2\x00\xbc\x16\x4c\xd2\xc0\x87\xc9\xe0\x83\x0b\xb6\x81\x6b\xb2\x4b\xae\x3a\x0c\x3b\xf4\x28\xe7\xbc\x1f\x7a\x0c\x92\x32\x59\x24\x5b\xf4\x3a\xb8\x16\x93\x14\x51\x4b\x97\x0f\x8b\x6f\x8d\x8d\x64\x93\x02\xd8\x11\x49\x12\xd6\xb1\xc8\x64\xe6\x49\xd3\x77\x32\x9e\xa0\xe5\x11\x9a\xd5\xa3\x96\x81\xb1\xd8\x67\xad\x73\xea\x86\x44\x0b\xfe\x3c\xab\xbb\xf0\x0e\x83\x5c\x20\x8b\x6b\x9d\xd1\x82\xef\x85\x07\x7c\xf5\x0c\xb3\x45\x1e\x91\xff\x89\x51\x00\x3c\xa1\x0a\x73\x8c\x2c\x25\x56\x19\xb0\x52\x00\x39\x54\x58\xc7\xff\x22\xfa\x34\x33\xdf\x55\xc8\x57\x52\x18\x0a\xc2\xe4\x3d\x72\xa1\x45\xb4\xe9\x0a\x8b\xf9\x67\x26\x79\x99\xb9\x5f\x2a\x80\xcc\x50\x78\xbd\x43\xbf\x54\x9d\x0e\x98\x3c\x4e\x16\x70\x40\xc1\x54\x3a\xaa\x7a\x9d\xa7\xf1\x51\x74\x01\x14\x31\xa4\xce\xb5\x52\xb8\xd0\xb2\x7e\xaf\xa3\x4b\x53\x8b\x59\xb0\xa7\xc1\x16\x91\x69\x74\x16\x17\xd9\x2b\xfd\xd7\xc0\x73\x3b\x53\xf4\xf4\x1e\x56\xa7\x3d\x4d\xe1\xc7\xdc\x6a\xca\x9a\xde\xc6\x4a\xcd\x12\x16\xb3\x29\x04\x34\xe2\x28\xdc\x8c\xc8\xec\xec\xec\x9a\x36\x06\x63\x0e\x0a\x06\xb9\x7b\x88\x98\x1a\xd0\x31\xfa\xec\x8e\xa3\x50\x8d\xc1\x9e\xf6\x15\x99\x84\x76\x43\xfb\xea\x14\xf3\x47\xa2\x90\x65\x1e\x49\xfe\x13\x47\x9e\xb4\x81\xf3\x28\x9f\xd5\xb5\x02\xf8\x33\xe6\x8d\x50\xd7\x8b\xec\x3c\x06\xcb\x7b\x98\x3c\x3e\x9d\xb0\x80\x72\x4f\x7c\xb8\xf5\xc3\xde\x85\xf9\x81\x31\xda\x4e\x4b\x75\x74\x99\xc6\x54\xa4\x61\x17\x50\xd4\x0b\x58\x12\x66\x3e\x48\xc2\x83\x11\x70\xf9\xc2\xed\x60\xd0\x82\x0b\x30\xbb\x09\xeb\xb2\x2e\x7f\x00\x1d\x2c\xdc\x6c\xaf\xe0\x75\x59\x97\x67\x70\xdf\x39\xd3\xa9\x17\x60\x31\x32\x4e\x63\x03\xdf\x28\x00\xbd\xa3\x11\x4b\xb8\xeb\x10\xe4\x9e\x20\x75\x34\x78\x0b\xbd\x16\xd3\x95\xea\x59\xfd\xec\x7b\x2f\x43\x03\xeb\x37\x6f\x73\xe3\xff\xb3\x9b\x48\xf6\xf3\xf2\x98\x1f\xf9\xf2\x20\xb9\xb0\xff\x14\x5a\xca\xe4\xbb\xd3\x1d\x5b\x4f\x1b\xb6\x6e\xd6\xf5\xd9\x54\x2d\x07\xaf\xe7\x8a\x0d\x88\x89\x6f\xa6\x09\x9b\x46\xe4\xbc\x01\xa3\x4b\xc3\xa2\x46\xf2\x43\x8f\xdf\xdb\x89\xcb\xd0\x3d\x29\x9b\xd7\x6d\x39\x27\x24\x15\x99\xbe\x3e\x3c\x5f\x3e\xf9\xa4\xe8\xc9\x62\xfe\x82\x3c\xbe\x8f\x5b\x70\x29\x73\x74\x65\xe2\xfa\x75\x20\xd1\x33\x36\x22\x7f\xd8\x7e\x64\x1a\x62\xa3\xfe\x0e\x00\x00\xff\xff\x42\x81\xca\x0c\x66\x06\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginCloudproviderAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x8a\x83\x30\x10\x86\xdf\xf7\x14\x39\x81\x07\xd8\xb7\xa0\xb0\x2c\x2c\xcb\xb2\x7a\x81\x31\x4e\xcb\x40\x4c\xec\x38\x29\x58\xeb\xdd\x4b\xab\x0f\x51\xd3\x42\x9f\xbf\xff\xfb\x87\xf9\x05\x1d\x38\xf9\x6e\x3e\xd5\x38\xaa\x4c\x5f\x02\x63\xee\xdd\x81\x8e\x59\x35\x93\x42\x5d\xd5\x29\x78\x41\x35\x4d\x1f\x7d\xa8\x7b\xc3\xd4\x09\x79\x97\x72\xca\x98\xaf\x4c\x80\x26\xb7\x84\xe9\x53\x5a\x17\x0b\x4c\x3b\x25\x1a\x46\x79\xe1\xcd\x81\x8d\x5b\xbd\xf5\x1a\x63\xef\x03\x1b\xfc\x62\x1f\xba\xbd\xf2\x1f\xe3\xd8\xb3\xde\xc0\xfd\xdd\xbd\xf2\xb3\x90\xd5\x80\x68\x02\x93\x0c\x8f\x9a\x5f\x68\x31\xb1\xe1\x36\x12\xfb\x1d\x53\x0b\x3c\xe8\x33\x90\x85\x9a\x2c\xc9\x50\xa2\xa4\x8b\xfe\x9e\x66\xe3\xc6\x5b\x00\x00\x00\xff\xff\x34\x7d\xff\xaa\x01\x02\x00\x00")

func nodeEtcOriginCloudproviderAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginCloudproviderAzureConf,
		"node/etc/origin/cloudprovider/azure.conf",
	)
}

func nodeEtcOriginCloudproviderAzureConf() (*asset, error) {
	bytes, err := nodeEtcOriginCloudproviderAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/cloudprovider/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/origin/cloudprovider/azure.conf":            nodeEtcOriginCloudproviderAzureConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"origin": {nil, map[string]*bintree{
				"cloudprovider": {nil, map[string]*bintree{
					"azure.conf": {nodeEtcOriginCloudproviderAzureConf, map[string]*bintree{}},
				}},
				"node": {nil, map[string]*bintree{
					"resolv.conf": {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

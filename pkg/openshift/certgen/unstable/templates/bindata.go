// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/origin/cloudprovider/azure.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x40\xe6\x65\xf7\xa1\x90\xd2\xaf\xa5\x92\x1f\x8c\x33\x80\x85\x49\xb2\xb6\x03\x45\x55\x65\x51\x1a\x68\xb4\x14\x50\x12\xba\xad\x10\xff\xfd\xca\x49\x20\xb4\xd0\xab\xab\xdb\xfb\x96\xcc\x39\x33\x3e\x33\x73\x06\x14\x75\xb4\x4b\xfa\x80\x37\x9b\x4a\xad\x3f\x4e\xd2\x30\xae\x75\x97\x49\xba\x18\xbf\x84\x95\xed\xd6\xca\x08\x9c\x49\x05\xae\xf6\x01\x84\x0e\x04\x97\xf8\x39\x4d\x57\xc9\x6d\xbd\xbe\xd9\x54\xfe\x8a\x16\x4f\xe1\xdb\x3e\x97\xf9\x49\xc5\xfe\xbb\x26\xd3\x38\x5a\xcc\x2a\xdb\xed\x6d\xe3\xe2\x1f\x3b\xaf\xe2\x10\x45\xb4\xc3\x04\xae\xbf\x8e\xe3\xfa\x3c\x7a\xac\x87\xe9\xe4\xa9\x6e\x55\x33\x74\x48\x78\x06\x22\x54\x04\xa4\x4b\x7c\xd9\xf5\x94\xa6\x5e\xe0\x2a\x7c\x6e\xdb\x76\x51\xa8\x0b\x44\xa8\x16\x10\xa5\x99\xab\x40\x0c\x08\xc7\x57\x3b\x0c\x38\x50\xc5\x3c\x57\x2b\xd6\x07\x2f\x50\xb8\xb1\x87\x8a\x2e\x28\x67\xe0\xaa\xdf\xe8\xe3\xa6\x59\x28\xeb\x93\xbb\xbd\x3a\x89\xaf\x0e\xa2\x43\xc2\xcb\x00\xf5\x84\xc4\x96\x65\x55\xef\x27\xf3\xb5\x29\xfa\x90\xeb\x60\x2e\x53\x8c\x70\x4d\x9c\x01\x08\xc5\x24\x7c\x77\xb0\xbb\x82\x94\x07\x52\x81\xf8\x62\x95\x7f\xa4\xb6\x96\x8a\x28\xc0\x8b\xf0\xff\xd3\xb0\xf2\x7a\xe0\x62\xb3\xd7\xb3\xa2\xe9\xb3\xf3\x62\x1c\x0e\x93\xd4\x1b\x80\x18\xe1\xcf\x01\x2d\xc5\xe0\x38\xd8\x26\x9c\xb7\x08\xed\xe1\x55\xbc\x7c\x7b\x3f\x82\x7d\xe1\xdd\x8d\x70\xae\xa2\x9c\xe4\xf7\x97\x2b\x95\x60\x54\x69\x01\xd4\x73\xdb\xac\xa3\x69\x17\x68\x0f\xa3\xe9\x78\x9e\x84\x3b\x6b\x92\x40\x79\x9a\x7a\x7d\x9f\xe4\x5e\x13\xa0\xc0\x35\x5f\x18\xd9\x3b\x0e\xb8\xa4\xc5\x41\x0f\x1a\x18\xa5\xf1\x3a\x44\xb9\xd2\x7f\x03\x4f\x11\x6d\xda\x02\xd7\xd1\xad\x91\x02\x89\x2f\x1b\xcd\xcb\xe6\xf5\x4d\xa3\x79\x6d\xbc\x92\x75\xfb\x50\x14\xc9\x9b\x5c\x4e\xa7\x87\xff\xba\x4d\x18\x0f\x04\xe8\x21\x61\x0a\xa3\x2b\xdb\xde\x3f\x9a\xe3\x02\xda\x02\x64\xb7\xbc\x0e\x74\x61\x1f\x91\x1c\xb3\xb6\xdd\x91\xa0\xf3\x23\x7c\x28\x98\x82\x92\x70\xea\x15\xe2\x94\xb8\x8d\x8c\xf8\x24\x9c\xac\xe3\x28\x7d\x2f\x9c\xae\x84\x71\x85\xa3\x29\xd1\x6d\xc6\x01\x9b\x83\xcf\x8f\x7e\x32\xae\x4d\xe2\x34\x67\x15\x3b\xa3\x20\x94\x99\x6c\xf7\xc3\xc0\xb2\xe8\xa7\xe4\x24\x8c\x5f\xc3\xb8\x2c\xd0\x83\xd1\x17\x94\xff\xc2\xf7\xc3\x95\x29\x2e\xf7\x9b\xcc\x3b\x31\x87\xf7\x6b\x2a\x33\xea\x4f\xa5\xe6\x8c\x13\x7a\x57\xe1\xa1\xda\x8c\x76\x42\x72\xc6\x2a\x05\x67\xb4\x23\xd5\x56\xf5\x7e\xbe\x9c\xcd\xa2\xc5\xac\x18\xb1\x03\xad\xa0\x83\x51\xfb\xa0\x29\xee\x75\xb4\x4f\x68\x8f\x74\x40\x73\x18\x80\x49\x37\x2f\xe4\x33\xc1\x59\x06\x2a\xac\x36\x8d\xe6\x59\xad\x0f\x9e\xf5\x7d\xe1\xb5\x3f\x59\xbe\x0f\xe6\x2e\x24\x46\x8f\xe3\x24\x9a\x20\xab\x6a\x55\xef\xc7\xeb\xf4\xf9\xa1\x9c\x6f\xb7\xb8\x7e\x94\x44\x2f\xab\x79\x88\xac\x1f\x01\x00\x00\xff\xff\x20\x54\xc1\x6d\x5d\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x7b\x6f\x1b\xb9\x11\xff\x5f\x9f\x82\x08\x0e\x48\x52\x74\x77\x65\x3b\xcf\x05\x8a\x42\xb5\x9d\x8b\x70\x76\xa2\xda\x4e\x71\x45\x5d\x1c\x28\x72\xb4\x62\xc4\x25\x37\x7c\x28\x56\xdc\x7c\xf7\x82\x8f\xdd\xe5\xea\x91\xa4\xb9\xa0\xe7\x04\xb0\x97\x9c\x19\x0e\x67\x7e\x9c\x17\xa6\x35\xd3\x9a\x49\x71\x2a\xc5\x82\x55\xe5\x08\xa1\x86\xdb\x8a\x25\xdf\x08\xfd\xcd\x32\x4e\xcf\x60\x81\x2d\x37\x3a\x2c\x21\x44\x3c\x81\x55\xd8\x30\x29\xda\x45\x84\x70\xc3\xfe\x01\xca\x49\x2c\xd1\xfa\xa8\x5b\x06\xb1\x2e\xd1\xbf\xfe\xdd\x7d\xaf\x98\xa0\xe5\x50\x70\x38\xb1\xa3\x50\xa0\xa5\x55\x04\x74\x2f\x1b\x21\xce\x6a\x66\x74\x89\xee\x3f\x27\x8b\x0a\x3e\x58\xd0\xc9\xb2\x17\xfb\x76\x0d\x4a\x31\x0a\xdf\xa9\x70\xa2\x60\x27\x29\xd1\x70\x26\xe9\x4c\x81\x06\xf3\x7d\xd2\x29\xd3\x78\xce\xa1\x44\x0b\xcc\x35\x6c\x1d\x1a\x0d\x32\x19\xba\xc6\x13\xc9\x06\x84\x5e\xb2\x85\xc9\x99\x2c\xa6\x35\xae\x60\x26\x39\x23\x9b\xef\x74\xca\x1d\x10\xeb\x28\xaf\x2c\x4f\xed\x9c\xa1\x1a\x1b\xb2\xf4\xf2\x27\x42\x48\xe3\xc5\x0d\x1c\x91\xa1\x15\x6c\x4a\xc4\x1c\x89\xce\x07\x6a\x51\x10\x9b\xac\x13\x9d\xf0\x20\xb4\xc6\xdc\x42\x89\x1e\x1a\x65\xe1\x61\xb2\x23\x70\x0d\x65\xaf\x4e\x46\x41\x30\xa0\x09\x81\x14\x57\xfb\xe0\x90\x75\x28\x29\x51\x23\xa9\x3e\xb0\x35\x77\x5e\xd4\x03\xc4\xbc\x07\x62\x4a\xe4\xf4\x48\x96\xf5\x8a\x35\x6f\xfd\x49\xdc\xeb\xf1\x0a\x33\x6e\x15\x6c\xd1\x05\x27\x25\xc6\x8f\xfe\xc1\x55\xa5\xa0\xc2\x46\xaa\xe4\x2d\x29\x79\xb7\x39\xe5\x0c\x84\x99\x8a\x85\x0c\xba\x13\x50\xe6\x15\x73\xde\xef\x59\xb2\x85\x92\xc2\x64\x9e\x3e\x27\xca\x78\xc2\x15\x6c\xbe\x48\xb7\x82\xcd\x08\x37\xec\x02\xd6\xc0\x75\x39\xca\x9c\x6f\xb7\x5c\x8d\xad\x59\xf6\xea\xc4\x97\xf2\x1a\x30\x05\x15\x95\xf1\xca\x9d\x4e\x4a\x94\x48\xce\x08\xee\x94\x88\x04\xb2\xae\xa5\x78\x83\xeb\xd6\x01\xd9\x01\xa5\x46\x01\x58\x46\xe1\x70\xca\x4c\xc1\x82\xdd\xf5\x5c\xbf\x66\x57\x50\x4b\x03\xd9\xb9\xa3\xc9\xfc\x6a\xa5\xa4\x6d\x02\xf9\x2e\xdd\xcf\x6e\xd3\x2f\x5a\x0d\xca\x21\xe5\x10\xe5\x3b\x0d\x6a\x44\xa4\x30\x4a\x72\x0e\x89\x17\x80\x03\xe9\x1f\x04\x97\x64\xf5\xc6\x03\xae\x83\x6d\x56\x63\x6d\x40\x65\x3d\xb3\x43\x8b\x06\xb5\x66\x04\xae\xdd\x2f\x51\x9d\x82\x8a\x8f\x5d\xb3\x4a\xb4\xe6\x4b\xbd\x19\xe9\xb3\xb0\xdf\x19\x30\xf1\xe3\x16\x85\xf3\x5f\x72\x64\x89\x1e\xfe\xe9\xe1\x88\x48\xa5\x27\x9c\xcb\x8f\x40\xdf\x2a\x56\x31\xe1\x3d\xfb\xe8\xaf\xec\x71\x51\x1c\x1d\x3f\xbf\xcd\xc7\xfe\xff\xd1\xa3\xf2\x3f\xb7\x9f\x1e\x77\x5b\x5c\x12\xcc\x97\x52\x9b\xad\xf5\xfb\x7b\xf4\x77\x2b\x0d\x5c\x82\xc1\xe8\x11\x13\x14\xee\x50\x7e\xe9\xaf\x9b\x4f\x67\x1a\x8d\x1f\xe7\xd7\x46\x31\x51\xa1\xcf\x9f\xb7\x58\x57\x76\x0e\x4a\x80\x01\x7d\x9b\xd3\x10\x93\xbe\x4e\x71\x9b\xeb\x35\xb9\xcd\x09\xb7\xee\x88\xdb\xdc\xeb\x75\x90\xed\x4b\xca\xe6\xe7\x77\xc6\x39\x9c\x07\x6d\x5f\x4b\x6d\x9c\xf7\x77\xf5\xec\xdc\x78\x48\xcd\xa1\xd8\x78\xf9\xff\x45\x9e\xbf\xd4\x37\xde\x7d\x8b\xec\xe8\xf9\xf1\x6d\x7e\xb2\xdf\x67\x07\x0e\xfa\x8a\xf5\x3a\xae\xb8\x4e\x85\xee\xa1\x3e\x67\x82\x4e\x28\x55\xa0\x75\x89\xc6\xb9\xff\x57\xbe\x18\x3f\x3d\x89\x7b\x6f\xc0\x7c\x94\x6a\x55\x22\x43\x9a\x27\x23\x30\x84\x0e\xa3\x13\xc1\x25\x0a\x8f\x21\x77\x9b\x7d\x20\xe8\x61\x3e\xd8\xf6\xcc\x91\xa4\x83\xf9\x1e\x0a\x07\x75\x84\xac\xe2\xfe\xd9\x66\x68\x69\x4c\xa3\x4b\xef\x9a\x3d\x0e\x29\x8f\x4f\x9e\xbf\xf4\xda\x5d\x1b\xa9\x70\x05\xfd\x05\x7b\xb3\xc7\xad\x10\x60\xca\x64\x23\x67\x72\x1f\xe1\x30\x03\x3a\x2b\x5e\x3b\x2b\x6e\x89\x49\x53\xd9\x1e\xb2\x54\x88\x4f\x7e\xbd\x66\x0b\xa9\x6a\x6c\x4a\x34\xbd\x9c\xfc\x7c\xfe\xdb\xec\xea\xfc\xd5\xf4\xd7\x22\x7c\xdc\xfc\x73\x76\x9e\xfd\x74\x4f\x64\xdd\x48\x01\xc2\x7c\x2e\x7f\xba\x5f\x07\x49\xae\x62\xe1\xd8\x80\x36\x6d\x31\x10\xf2\x4b\x30\x4a\x4c\x2d\xee\x2e\x1c\xcc\xae\xab\x08\xce\xe6\x56\x50\x0e\x87\xbc\x14\x39\xbf\xec\xa8\x2d\xa2\xe0\xab\x46\x2a\x53\xa2\xa3\xf1\xf1\xd3\xf1\xa8\xb7\x65\xaa\x96\x53\x02\x37\xcc\xc5\x47\x50\x13\x55\xd9\x1a\x44\x5b\x1f\x2a\x2b\x0c\xab\x21\x23\x49\x19\x99\x39\x6a\x5d\x68\x30\x86\x89\x4a\xe7\xab\x17\xce\x55\xc5\xfa\x08\xf3\x66\x89\x8f\xfe\xd2\x65\x59\x1d\x6c\x9d\xcd\x31\x59\x81\xa0\x2d\xb7\xc3\xc3\xc9\x80\xa0\x06\xca\x70\x66\x36\x0d\xf4\x27\x34\x9c\x11\x5f\xaf\x14\x6b\x41\xf3\x04\x15\x8d\x92\x46\xce\xed\x22\x66\x35\x69\xa9\xcb\x58\x6b\xd6\xa5\xc2\x0c\x3d\xc0\x9f\xac\x82\x07\x09\xc5\x50\xff\x07\x05\x18\x52\x48\x1f\x96\x0b\x4f\xd0\x4a\x28\x3c\x67\xee\xc8\x1d\x7b\x1f\xd5\xb7\xec\x12\x5f\xb6\xcf\x00\x4c\x54\x99\x73\x58\xb6\x70\xce\xd8\x77\x44\xf0\x4f\x11\x1e\xe1\x83\xbd\x02\x56\xb0\xf9\x16\xfe\x15\x6c\x1e\xfc\x3f\x2e\x5e\x47\x7c\x58\xe1\xc0\xd3\x2d\x4c\x67\x25\xba\xbf\xff\x5a\xfe\xf1\xa8\xa3\xe7\x6b\xe6\xb3\xf5\x0d\xab\x41\x5a\x53\x22\x61\x39\xff\x7a\x2d\x15\xb1\x1c\xeb\x97\x14\xee\xbb\x80\x1f\x10\x05\xb8\x6b\xb2\x04\x6a\x07\x0e\x6b\x0f\xee\xb6\x02\xec\x83\xa4\x3d\x66\xee\xe8\xf2\xf7\xda\x17\xbe\x31\xdd\xeb\x37\x92\xc2\x4c\x2a\x73\x85\x45\xe5\xca\xdf\x87\xc9\xde\xb5\x9d\x0b\x70\xb6\x7a\x7e\x9c\x9f\xf8\x70\x5d\x1c\x3d\x73\xfb\xae\xe8\x26\x8e\x33\x14\x5d\xae\x79\x8a\xc6\xf5\x6a\x7b\x3c\x41\xcc\x90\xbf\x74\x28\x3f\x8d\xd5\x9a\x10\xa1\xe4\xd9\xea\x82\x30\x21\xd0\xb8\x6d\x03\xc2\xdc\x6c\x1a\x27\xf8\x1b\x9e\xcc\x9f\x53\x9a\x78\x39\x84\xe6\x56\xb9\xa8\xf5\x64\x3c\x1e\xc5\xde\xa3\x95\xfa\x4d\x42\x3d\xd3\x87\x46\x97\xe8\xd8\x4b\xd8\xbd\x8c\xfb\x2b\x86\x9a\x60\xb4\x2e\x38\x5f\x48\xd9\xb8\xe8\xf0\x07\x5c\xf7\xd9\xef\xbe\xee\x89\x97\xb0\x73\x97\xf4\xb6\xdb\x95\xa9\x17\x18\x9e\x64\x44\xc1\xcc\xce\x39\x23\xef\xae\x2e\xca\x41\x2e\x3d\x58\x33\x95\x49\xa6\x75\x58\x74\xcf\x4d\x84\x62\xa0\x8f\xe6\x31\xb8\xc4\x22\xe1\x74\x7a\x76\xe5\x32\x40\x7e\x74\xfc\x22\x00\xf3\xc9\x0e\x4d\x4c\xe7\x84\x51\xb5\x4b\x8a\x90\x2b\x48\x03\xc2\x2f\x40\x54\x66\x59\xa2\x97\x89\xa7\xa7\xb3\xe4\xa4\x28\x29\xd6\x2c\x85\x33\xd1\x7e\xee\xa8\xf5\xcc\x8f\x29\x42\x21\xaf\x80\x2e\xb1\xe9\x2b\xa3\x4c\xae\x75\xa6\x3d\x67\xff\xd4\x86\xb7\x1a\x3c\x37\x39\x6c\x93\xb0\xd6\x60\x7e\x80\x81\x0b\x22\x85\x96\x1c\x8a\x91\xeb\x71\xb0\x07\x6a\x17\x54\x6b\x30\x4b\x49\x4b\x84\xad\x71\x85\x06\xa3\x20\x0c\x33\x9b\x59\x8c\xab\xba\x1c\xdd\xdf\x67\x88\x2d\x50\x7e\x2e\xf0\x9c\xc3\x64\x72\x36\xb1\x66\xe9\xa8\x02\xd0\x7c\xbc\xcc\x62\xef\x3c\x71\x51\x18\x4d\xce\x02\x34\x97\x98\x73\xf0\xb1\xa6\x9f\x2f\x70\x59\x31\x91\xb4\xb2\x35\x6e\x1a\x26\xaa\xcb\xa8\x06\xe1\x98\xd5\x7e\x63\x98\x1b\x0e\x0c\x0f\x42\x91\xf2\xb6\x01\x31\x3d\x9b\x6e\xa9\xde\x36\x46\x21\x54\x9f\xf9\xc8\x9f\x7b\x05\xc3\xfd\xf3\xc9\xe4\x2c\xc6\xf1\xb3\x10\xf5\x7b\xf2\x6b\x20\xca\x85\xc3\x83\x2c\x81\x20\x65\xc3\xac\x4e\x86\x02\x8c\xa6\x73\x0c\x6d\xe7\xdd\x57\xa3\x60\x01\x4a\x01\x7d\x17\xfb\xc8\x94\xd0\x0a\xf6\xc1\xc2\x6f\x6e\xb9\x5b\xdd\xa6\x19\x6c\x42\x8d\x19\x4f\x77\xfd\x42\xfc\x6e\xeb\xdc\x68\x40\x6b\x96\x52\xb1\x4f\xd0\x23\xc9\x3b\x23\xaf\x19\x51\x52\xcb\x85\x91\x82\x33\xe1\x92\x68\x5d\x6c\x5f\xfc\x06\x04\x8e\x86\x2a\x3c\x4c\x8f\x8b\x4e\x5e\x77\x82\x91\x2b\x10\x3f\x48\xba\x97\xe5\xb1\x07\x82\x0e\x30\x76\xe1\x9a\x11\xd4\x60\xad\x3f\x4a\x45\xb7\x91\xd6\x01\xeb\xc7\x02\x6d\x71\x28\xdb\x2e\x8d\xd7\x84\x0e\x00\xf9\xfa\x66\xe6\x17\x67\x51\xc9\x3d\xd0\x8c\x49\x74\xb2\x5b\x3c\xff\xb8\xc0\xda\xca\xfa\xbd\x52\x34\x6c\xcd\x66\xbb\xa5\x4b\x7c\x37\xa9\xe0\xda\xe5\x04\xea\x52\x4a\x9b\x95\xe2\x76\x08\x8b\x5a\x8b\x74\x31\x3c\x1d\x7d\xb8\x7e\x09\x64\x99\x0e\x74\xf9\x06\xd7\x0e\xd0\x1e\x10\xa9\x0a\x2e\xab\x6a\x7d\xe3\x96\xb7\xd4\x78\xf1\xac\x2d\x06\x3a\x8c\xee\x23\x7b\x3a\x1e\x8f\x1a\x6c\xb5\x43\x61\x3f\xfc\x08\xa1\xaa\x49\x46\x6a\xbe\xa1\x95\xd2\x68\xa3\x70\x13\x66\x6d\x07\x95\x0f\x7c\x6d\xe5\xd5\x65\x82\xa9\x58\x28\xac\x8d\xb2\xc4\x58\x15\x4a\xa9\x06\x93\xc1\xec\x87\x39\x92\x94\xe7\x7a\x89\x15\xd0\x6e\xe0\xb8\x8f\x69\xd4\x28\xf9\x1e\x48\x12\xd0\x63\x03\xef\x0a\xb6\x6b\x3f\x6f\x92\xaa\x44\x42\x52\xc8\x94\xe4\x90\x0f\xba\xd3\xc2\x35\x82\xd6\x40\xdb\xf1\x44\x61\x57\x61\x3a\x77\x09\x5a\xe3\xae\x4e\x1c\xee\xdd\x40\xdd\xb8\x6e\xb1\x2b\x22\x89\x55\xcc\x6c\x26\x9c\x4b\x82\xdd\x91\xe1\xc5\x11\xdd\xad\xc4\x9a\x53\x8f\xcb\xe2\xb8\xdd\xbc\xc0\x73\xe0\x7a\x06\x6a\x16\x84\x97\xe8\x69\x18\xb0\x31\xba\xcd\x77\x34\x6e\x7f\xb2\xa3\x97\xed\x4f\xe1\x57\x47\x4a\x5a\xd7\xc8\xf5\x36\xd0\x76\x4e\x65\x8d\xdd\xeb\xbf\x39\xbf\x9c\x5d\xbd\x7d\x77\x73\x7e\x35\x9d\xe5\x82\x35\xae\x9b\x8e\x79\x78\x42\x88\x6b\x0f\x7a\x36\x3f\xd4\x0f\xe0\xbc\x72\x21\x1a\x04\x01\xdd\xa7\xae\x1a\x0b\x5c\x01\xed\x66\x8f\x59\x6b\x6b\xff\xb7\x9f\xed\xfa\x87\xed\xd6\x1b\x2e\x37\x5f\x79\xe5\x8d\x62\x6b\x6c\xe0\x97\xad\x99\x1c\x0e\x5a\xb9\x7a\xcd\xef\xb7\x5d\xb0\x8f\x06\x91\x38\x1e\xbf\xc3\xe1\x69\x3c\x83\x0e\xb3\xc2\xb6\x3f\xd9\x3b\x8d\xd9\xfb\xd2\x77\x67\x33\x7b\x7a\x1b\xed\x3b\xed\xb6\xd5\xef\x06\xb7\xdd\x8c\x66\xbb\xcd\x89\xf4\xe1\x26\x35\xbe\x8b\x20\xd2\x53\xf1\x8a\xb3\x6a\x69\xc2\x4b\xec\xc6\xc2\xb1\xe1\x1a\x06\x95\xb5\xe4\xb6\x4e\xa6\x1c\x74\x23\x70\xcd\x88\x0f\xa8\x2e\x5a\x30\x51\x85\xfa\x84\xc6\x90\xff\xdf\x00\x00\x00\xff\xff\xa5\x5d\xc4\x11\x52\x1a\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x16\xa5\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x5a\x85\xda\x5a\x25\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x24\x15\xae\x79\xc9\x48\x0a\x00\x01\x00\x00\xff\xff\x58\x97\xb9\x86\x74\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x6d\x6f\xdb\x38\x12\xfe\x9e\x5f\x31\x70\x0b\xf8\x0e\xa8\x6d\xb4\x5d\xe0\x6e\x05\xf4\x43\x36\xab\x6e\x82\xdd\xc4\x86\xed\x1e\xda\x3b\x1c\x04\x8a\x1a\x59\xbc\x50\x1c\x2d\x49\xd9\xf1\x06\xf9\xef\x87\x11\x29\xc7\x51\x92\x26\xbb\xf9\x14\x99\xf3\xf2\x70\xe6\x99\x17\x4e\x26\x93\x93\x37\xf0\xf9\xe2\xeb\x65\x9a\xc0\xa9\xd9\xfb\x4a\x99\x0d\xe4\xa8\x69\x07\xca\x80\xd0\x7a\x22\x45\xe3\xa0\x12\x0e\x94\x1f\x3b\xd8\x0a\xdd\x22\x58\x6c\xb4\x90\x58\x40\xbe\x07\x87\x05\x8b\xfa\x0a\x4f\xde\x40\xfc\xa3\x06\x8d\xab\x54\xe9\x6b\xe1\x3c\x5a\x27\xad\x6a\xfc\xd4\x55\xb0\xab\x94\xac\x40\x39\x30\xe4\x41\x15\x28\xf4\x3b\xd8\x21\xb8\x8a\x5a\x5d\x40\xa9\x6e\xc0\x57\xc2\x4f\x4f\x34\x49\xa1\x83\x72\x72\x02\x50\x91\xf3\x8e\xff\x01\xe8\x4e\xf8\xfb\x04\x60\x2b\x6c\xfc\x55\x18\xa7\x72\x8d\x99\x24\x63\x50\x7a\x45\x26\x09\x92\x0f\x4e\x9b\xbd\xaf\xc8\x64\xca\x78\xb4\x8d\x45\x36\x0e\xb3\xd6\xd9\x59\xae\xcc\x2c\x1c\x7e\x38\x39\x79\x70\x81\x4c\x39\x36\xea\x85\x32\x68\xd5\x1f\x58\x24\xf0\x59\x68\x87\x03\x29\xa9\x15\x1a\x9f\xe5\xca\x08\xbb\x3f\x32\x4a\xf2\x91\xbd\x5a\x6c\x30\xf3\x62\x93\xc0\x68\xfb\xaf\x74\xb9\xba\x98\x5f\x8d\x86\x42\x3b\xcc\xd9\xab\x23\x8d\x51\xc1\x88\x1a\x13\x18\x5d\x5c\x9e\xfe\x92\x66\x8b\x65\xfa\xf9\xe2\xeb\x2c\x7c\xac\xbf\x2d\xd2\xc9\x0e\xf3\x49\x54\x48\x86\x56\x2d\x6e\xb2\xd6\xea\x04\xc6\xcf\x69\xbf\xbd\x95\x54\x37\x64\xd0\xf8\xbb\xe4\xed\xed\x16\xad\x53\x64\xee\xc6\x03\x54\x21\x1f\x59\x81\xa5\x68\xb5\xcf\x5c\x9b\x17\x54\x0b\x65\x12\x18\xaf\xd3\xcb\xc5\x72\xfe\x65\x9d\x2e\x2f\x16\x53\xa3\x9a\xa9\xa2\x71\x70\x1f\xd9\x15\xff\x5f\x57\xca\xf5\xd9\xce\x11\xfc\xbe\xc1\x4f\xca\x94\x56\xbc\x83\xbc\xf5\x4c\x85\x4a\x6c\x11\x3c\x81\x56\x5b\x84\x9d\xf2\x15\x58\xdc\x28\x32\x41\x0c\x4a\xb2\x60\x68\x17\xcd\xe5\x28\x45\xeb\x10\xa8\x04\x8d\x1b\x21\xf7\x60\x51\x38\x32\x6e\x80\xdc\x52\xcb\xc8\x1d\x6a\x94\x9e\x6c\x02\xe3\x63\xa3\xc3\x7b\xf2\x99\xf3\x76\xff\x7d\xf9\x37\x70\x45\x1d\x85\x61\x57\xed\xc1\xf3\xc5\x94\x03\x01\x85\x2a\x4b\xb4\x68\x3c\x14\xc2\x8b\xee\x8a\xe1\x72\xca\x83\x1a\x02\x6b\x2c\xd5\xe8\x2b\x6c\x5d\x66\xa8\xc0\x23\x8f\xb7\xd1\xe5\x38\x81\x71\xf0\x7a\xd7\x07\x74\x85\x1e\x4e\xff\x68\x2d\x82\x6b\x50\xaa\x52\xc9\xe0\x8a\x63\xc3\x95\x81\x05\xf4\x57\x18\xb8\x0b\xa7\x47\x17\xf4\x64\x99\x5d\x8d\xa5\xad\x2a\xb8\x1c\x46\x82\x0d\x67\xb9\xa6\x7c\xf4\x4a\xe5\x6b\x65\x8a\x04\x46\x94\xff\x0f\xa5\x7f\xad\xd2\xbd\x9b\x4c\x48\x49\xad\xf1\x81\xe1\xe3\x65\xfa\xcb\xc5\x6a\xbd\xfc\x96\xad\xd6\xf3\x25\x33\xf4\xf4\xdf\x5f\x96\x69\x76\x7a\x76\x36\xff\x72\xb5\xbe\x3a\xbd\x4c\x87\xe9\x7a\xbd\x8b\x6b\xdc\xbf\xe8\xe1\xd7\xf4\xdb\x5f\x70\x70\x68\x11\x09\x8c\x7a\xb9\xbf\x10\x0a\x8b\x42\xd7\x09\x8c\x24\x59\x9c\xee\x94\x29\x68\xe7\xa6\x06\xfd\xe8\x89\x5a\x8a\xbf\x9c\x0b\x5b\x80\xa4\x02\x03\x05\x63\x7d\x4c\x1f\xc8\x9c\xb5\x96\x09\xa9\x99\xa6\x08\x52\xb7\x5c\xc7\xe0\xbc\xf0\x08\xc2\x43\x81\x8d\xa6\x7d\xcd\x94\xf5\xaa\x46\x28\x08\x43\x83\x0e\xb5\x58\x21\x30\x37\x5d\x34\x16\xf0\xa3\xc5\x82\xcb\x94\x4f\x43\x5f\x08\xc5\xaa\x45\x8e\xda\x81\x68\x1a\xad\xb0\x00\x61\x98\x8b\xa2\xd8\xb3\x6c\x8e\xf0\x7b\x8b\x56\x61\x11\x4d\x89\x8d\x50\xc6\x79\xc6\xc0\x76\x1a\x52\xc6\x77\xb3\x84\x51\x84\x99\x12\xc1\x75\x63\x21\x08\x69\xb1\xcf\x89\xae\x1d\xd8\xd6\x4c\xe1\x54\x3b\x7a\x17\xcd\xf1\x71\xa8\xf4\x6e\x40\x29\x29\xa0\x4b\x3b\xc4\x8e\x05\xa3\x52\x68\xed\x20\x17\xf2\x7a\xc4\x80\xde\x33\x4e\x4b\x8d\x55\xc2\xa3\xde\xc3\xae\x42\x8b\x20\xdc\xb1\xbd\x98\xad\x83\x45\x4d\x1b\xae\xb7\x18\xa2\x29\xac\x3b\x9d\x9d\x70\x20\xb4\x23\x28\x94\x93\xad\xe3\xf6\x09\x22\x27\xae\xfa\x32\x5a\xeb\xc6\xe7\x91\x3f\x06\x50\x50\xc8\x5a\xec\x73\x9d\x07\x07\x9f\x3e\x41\x68\x76\x5d\xd8\x0f\x4d\x8e\x0d\x44\x5b\x0d\xda\x12\x25\x27\xb4\x44\xd1\xcd\x36\xb6\xd6\xa5\x4b\x98\x23\xe5\x78\xff\x4a\x6d\x2a\xb4\x1c\xc3\x3e\xa6\x4e\xd9\x43\x16\x7a\xbf\x0f\x39\xb3\xc4\xad\x72\xca\x83\x16\x1c\xcf\xbf\x35\xe4\xd8\xcf\x9e\x1b\x9c\xc0\x9a\x8c\x43\x0f\x64\xe1\x2d\xf9\x0a\xed\xdf\x9f\xa1\x7a\x68\xbb\xbd\x83\x04\xde\xbf\x50\x12\xc7\x92\xcf\x77\xca\x8e\xb8\x09\x8c\x1a\x8b\x0e\xcd\xa3\x96\x33\xec\xa9\x78\xd3\x90\x65\x1c\x61\x92\xc6\xe9\x96\xc0\x78\xb1\x9c\x5f\xa6\xeb\xf3\xf4\xcb\x2a\x4b\xbf\x2e\xe6\xcb\x75\xba\xcc\xe2\xec\x1c\x7f\x77\x22\x1b\xe7\x85\xd6\x09\xac\x6d\x8b\xdf\xc1\x19\xfc\x35\x16\x4b\x75\x33\x9c\xdd\x43\xd0\xf7\x35\x98\xf1\xc4\x48\x60\x7c\x7a\xb5\xba\xf8\xe9\xb7\x34\xfb\x39\x5d\xfc\x36\xff\xd6\x0d\xea\x88\xaa\x5f\x67\x1c\xda\xad\x92\x98\xe5\x96\xae\xf9\x7a\x0f\x60\x3d\x34\xdf\x8b\x4a\xe1\x85\xa6\x4d\x80\xf6\x9d\x7d\x22\xca\x4f\xa2\xfc\xd1\x4e\xf1\xe4\x4a\x80\x5e\x16\xbc\x63\xb8\x04\xfe\x33\xaa\xbc\x6f\x5c\x32\x9b\x9d\xcf\x57\x5d\xbf\x4e\x3e\x7c\xfc\xc7\x8f\xa3\xff\x06\xec\x1e\xeb\x86\x29\xf5\x08\xfc\x0b\x80\x7a\xbd\x03\xb2\xa0\x37\x5c\x76\xde\xc0\xd5\x7c\x9d\x26\x61\xcf\x50\x0e\x2c\x16\xad\x29\x84\xf1\x61\x04\x5b\xfc\xbd\x55\xb1\x73\x55\xc2\x14\x1a\x21\xd2\x01\xdc\x35\xee\x20\x47\xbf\x43\x34\xd1\xd4\x60\x97\x9d\xc4\xb8\x73\x67\x9a\x5b\xb5\xe1\xfd\xd8\x14\x30\x3f\x5b\x0c\x82\x82\x37\xa2\x6e\x34\x86\xc5\x91\x33\x7a\xa0\xdc\x68\xbb\x3a\x9f\x2f\xd7\xcc\xb2\x47\x3b\x9f\x24\x79\xdd\xa8\x9e\x09\x68\xef\x89\x73\x36\x3f\xfb\x75\x71\xb1\x7e\x8e\x3a\x8f\x14\x73\xe1\x30\xee\x8b\xbd\xea\x4f\xa7\xab\x94\x73\xf1\xa2\xee\x3d\xd4\x5e\xf5\xe9\x00\xff\x4c\xdd\x84\x28\xb0\x54\x06\x5f\xac\x7c\x70\x74\xdf\xc1\xbd\x70\xd7\x50\x2a\x8d\x7d\xff\xe9\x64\xa7\xfb\x5a\x83\x32\x4e\x15\x61\xe4\x0c\x4d\x82\x25\x8d\x50\x5a\xaa\x9f\xc8\xc8\x4e\x69\xdd\xcf\x94\xd6\x53\x43\x4d\xcb\x64\xe1\x95\xab\x75\xfc\xa2\x79\xca\xe2\x70\x2b\xec\xb2\xc9\x03\x6a\xaf\xcc\xe6\x68\x04\x98\xb6\xce\xd1\xf2\x8e\x79\xd4\x95\x87\x74\x43\x7e\x8c\x28\x91\xeb\xae\x61\xf3\xf3\x49\x58\x66\x8a\x47\x6b\x84\x66\xbe\x3d\x46\xcd\xfe\x76\x38\xb6\xf8\x80\x6f\x61\x17\x8b\xa0\x6b\xe8\xc6\x8b\x27\x10\x5b\x52\x45\x87\x47\x19\xc9\xf3\x9c\xa7\xbe\xf3\x0c\xab\x14\xd2\x43\xa9\x4c\xd1\xe3\x3e\xb8\x0a\x8f\x23\x00\x49\x75\x4d\xa6\xff\xe2\x6f\x53\xaa\x4d\x47\x94\x04\x66\xe8\xe5\x8c\x3a\x42\xcf\x0e\x12\xaf\xe4\x70\x10\xbe\x7f\xa8\xc5\x2b\xb4\xb9\x56\xf2\xd0\x2f\xbb\xc7\xc7\xa1\x2d\xdc\xde\xc2\x34\xbd\x09\x71\xb9\xec\x14\xcf\xc9\x75\xdb\x1f\xdc\xdd\x25\xff\xfc\xe1\x87\x8f\xb3\xa8\x38\x1a\x1a\x14\x8d\xfa\xd3\xc6\xee\x8d\xbc\xa6\x49\xc1\x9b\xf8\x16\xbe\x22\xd0\x64\x36\x68\xc1\x20\x16\xbc\xc9\x38\x0e\xf5\xa3\x24\x4e\x3e\x4e\x7f\x9c\x7e\xf8\x30\x79\x1f\xdf\x2f\x63\x8b\x5d\x61\x90\x09\x84\xef\xdb\xcb\x1e\x7d\x04\xc2\xf4\xb9\x0f\x15\x7f\xc5\xcd\xb7\x87\x32\x3e\x39\x21\x8a\x9d\xd5\x65\x9e\xb2\x90\xad\x67\xdf\xc1\xff\x0f\x00\x00\xff\xff\xa5\x31\x2a\x64\xc4\x0f\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x41\x8b\x23\x37\x10\x85\xef\xfe\x15\x8f\xdd\xc3\x5c\xe2\x99\x59\x72\x33\x24\xa7\x24\xb0\x87\x90\x43\x72\x08\x84\xd0\xa8\xd5\x65\xb7\xb0\x5a\x25\x54\xa5\x71\x0c\xfb\xe3\x83\xd4\xed\xf6\xcc\x60\x8f\xdd\xe4\x90\x9b\x51\xab\x5e\x7d\x55\x7a\x2a\x79\x8d\x60\x06\xda\xe0\x27\x8a\x9e\x8f\xf8\x2d\x52\xf8\xbd\x77\x5b\x85\x0b\xdb\x64\x44\x53\xb6\x9a\x13\xe1\xc0\x69\xef\xd9\x74\x2b\xa0\x67\x51\xd9\xc0\xb3\x35\x7e\x30\xa2\x94\x56\xc0\xce\x68\x4f\xa9\xd9\x1a\x5b\xbe\x6d\x8d\x17\x5a\xad\x80\xcf\x38\x10\x02\x51\x87\x17\x93\x9c\x69\x3d\x09\xb6\x89\x07\x70\xa4\x20\x25\xd1\x18\x02\x65\xb4\x04\x17\x20\x96\x23\xad\x80\xc4\x9e\x64\xb3\x02\x80\xf5\xfb\xdd\x45\x39\xb2\x68\xa3\x46\xf6\xf3\xa6\xb1\x90\x36\xb9\xb0\x43\x8e\xd0\x9e\x20\x5d\xa8\x1f\x01\x37\x44\x4e\xda\x14\xd5\xcd\xb4\x84\x29\xe2\x2c\x5e\xb6\xbf\x11\x13\xd2\x1c\x61\x39\x6c\xdd\x0e\x72\x0c\x16\x9d\xa1\x81\x83\x90\x2e\xd1\x0d\xdc\x51\xb3\x4b\x9c\xe3\xbc\xa5\x92\x37\xa5\x15\x9b\x2a\xfc\x36\xef\xd7\xaa\xfa\x4a\xa1\x65\x56\xd1\x64\x62\x63\xb2\xb2\x89\x31\xf1\x0b\xa5\xda\xa4\x77\xfd\x5c\x9b\x20\xae\xf5\x54\x3a\xda\x8d\x87\x5a\xd2\x63\x56\x40\x51\xc0\x49\x62\x49\x19\x97\x21\x2e\x92\x9b\xd0\x21\x0b\x21\x71\x56\x4a\xb5\x5a\x6c\xdd\x75\xd8\x73\x92\xe2\x2e\xea\x6a\x65\x4b\xd8\xc6\xb0\x8b\xed\x1d\x19\x1e\x8f\x83\xff\x18\x95\x76\x4e\x34\x1d\xff\x67\xd8\x89\xe2\x2a\xee\x59\xe5\x40\x6d\x63\x39\x48\xf1\xc0\x7d\x46\x38\x50\x8b\x29\x62\x09\xee\xab\x44\x23\xd2\x67\xfc\xf2\xf5\xcf\x5f\x7f\xc6\x1a\x7f\xf4\x94\xe8\x41\x60\x90\x8c\xa5\x22\xde\x39\x75\x1c\x70\x28\x1f\xea\x1d\xac\x83\x04\xde\xb4\xe4\xe1\x24\x3c\x68\xf1\x9e\x77\xd4\x41\x79\x52\x9b\x1b\x31\x6f\xaf\x96\xed\x72\xbd\xcb\xd6\xe7\x32\x64\xce\x37\xdb\x85\x77\x71\xb7\x2c\xfa\x1d\xb4\x77\x02\x27\x88\x89\x5b\x4f\x83\x51\x67\xd1\x92\x35\xe5\xe0\xb5\xa7\xab\x7a\x31\xf1\x40\xda\x53\x96\xb1\xc5\xb6\x27\xbb\xaf\xd3\x8a\x82\xe4\xb1\xc2\x44\x45\x79\x62\x3e\x38\xed\xaf\x56\x25\xe4\xc9\x2a\x27\xe4\xf8\x64\x5e\x8c\xf3\x65\x20\x3e\x89\xed\xa9\xcb\xf5\xf7\xe3\x74\xe2\xd2\x93\xf7\x1b\x3c\x3c\x65\x49\x4f\xad\x0b\x4f\x6c\xb1\x23\xad\x29\x04\x6b\x8f\x4f\xc5\x27\x1c\x7e\xa8\xba\x9f\xf0\x0d\x07\x8b\xb5\x7f\x98\x8e\x70\x34\x11\xa5\x62\x27\xc9\xfe\x34\xab\x72\x50\xe7\x4f\x6b\x8f\xa2\x1d\x67\x6d\xbc\x0b\x24\x7f\x3d\xff\xfd\xcd\x05\xc5\x8f\xf8\x32\x4b\x68\x72\x24\x1b\x7c\xff\x3c\xad\x74\xe4\xcd\x71\x83\x2f\xcf\xab\x1b\xbe\x7c\xdf\xb3\x9b\xb6\x3c\x07\x2c\x71\xe5\xab\xa8\x8f\x79\x84\xd2\x8b\xb3\xd4\x58\xa3\xc6\xf3\xee\x4e\xa8\xfa\x7c\x8c\x91\x98\x22\x17\x3d\x25\x6f\x93\x5e\x99\x3c\x35\xe9\xbc\xb7\x4d\xbc\xbf\x7b\xa8\x17\xbe\xd3\xea\x89\x73\x14\xb8\x8d\x79\x39\xf1\x45\x46\xa5\x21\x7a\xa3\xff\x01\xf2\xa4\xb0\x98\xf2\x4a\xea\x1b\xa7\x4d\xff\x98\x21\x96\xbf\x19\xf7\x13\x9e\x42\x96\x9c\xef\x1c\xf3\x31\xcd\x38\xe9\x9b\x53\x29\x4b\xa8\xa6\xb7\x65\x0e\x5d\xfe\xc0\x9c\xd3\x5e\xa4\xb4\x6c\xf7\xd1\x69\x93\xdd\x02\xaa\xf9\x95\xbc\xfb\x1d\x99\xd2\xac\xb3\x5b\xfd\x1b\x00\x00\xff\xff\x41\xe4\xce\x7e\x6d\x0a\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x6e\x1b\x37\x13\xbd\xdf\xa7\x18\x28\x01\x72\x93\xfd\x91\x9d\x7c\x01\x08\xe4\xc2\x9f\x7f\x52\xa3\x88\xe3\x5a\x46\xd1\x5e\x15\x14\x39\x92\x58\x73\x39\xec\x70\xb8\x8e\x1b\xe4\xdd\x0b\xee\xae\x2d\xb9\x49\x81\xf6\x4a\x5a\xce\x99\x33\x87\x67\x86\xa3\xbd\xa7\xfb\x33\x97\xf4\xda\xa3\x3d\x23\x73\x87\xac\x60\xa3\x7d\xc2\x4a\x47\xf7\x33\x72\x72\x14\x14\x0c\xcb\xca\x86\xf4\x7f\x17\xec\x89\xb5\x8c\x29\x29\x58\x1e\xbd\x6b\xba\xa6\x6b\x96\xea\xed\x71\x09\xde\xa0\xc9\x9c\xdc\x80\x37\x98\xc8\x0f\xa7\x14\x36\x0a\x5a\x14\xd3\x12\xbb\xad\x0b\x6d\x20\x8b\x2d\x8f\xc1\xc6\x50\xd8\x94\xa4\x33\xea\xb5\x0b\x0a\x8c\xcf\x49\x90\x1b\x4f\x46\xfb\x12\xb8\xbc\x56\xb0\x7c\x77\xd4\x2c\x4b\x91\x65\x65\x47\x65\x85\xd3\x6d\x55\x05\x30\x7d\xaf\x76\xae\xbf\x21\x92\x33\xc7\x68\x84\xf8\x41\x41\x3b\x68\x6e\xbd\x5b\xb7\x13\x22\xed\x5c\xff\x0c\xbe\x2a\xff\x64\xc6\x71\x0e\x07\xb8\x26\x91\xb9\xab\x00\xf0\x33\x9a\x1f\x74\xb0\x1e\xf9\x4a\xf7\xa8\x20\x68\x71\x03\x56\x2e\x4a\x71\x29\xad\x1e\x82\xb9\x46\x76\x64\x15\x2c\x8e\xbb\xb4\xa8\x5c\xaf\xb7\xb8\x17\xb7\x21\xee\xb5\x28\xb8\xfc\x78\xf2\xe1\xfc\xb7\xeb\x9b\xf3\x8b\xcb\x5f\xda\xe9\xe3\xf6\xd7\xeb\xf3\xfa\xe5\x17\x43\x7d\xa4\x80\x41\xbe\xaa\x97\x5f\x86\xc9\xe4\xaf\x15\x80\xd7\x82\x49\x14\x5c\x8c\x0d\xb8\x73\xc1\x2a\xb8\x22\x3b\x73\x57\x77\x79\x8d\x1e\xe5\x84\xb7\xb9\xc7\x20\xa9\x14\x8b\x64\xeb\x5e\x07\xb7\xc1\x24\x75\xd4\xb2\x2b\x87\xf5\xb7\xc6\x47\xb2\xa9\x02\x58\x13\x49\x12\xd6\xb1\x2e\x64\xe6\x49\xf3\x77\x32\x9e\xa0\xcd\x1e\x5a\x6e\x87\x5a\x32\x63\xbd\x2d\x5a\xa7\xd4\x1b\x12\x2d\xf8\xe3\xa4\xee\xd4\x3b\x0c\x72\x8a\x2c\x6e\xe3\x8c\x16\x7c\x2f\x9c\xf1\xf5\x33\xcc\x0a\x79\x40\xfe\x3b\xa6\x02\xe0\x11\x55\x9b\x7d\x64\x2e\xb1\x28\x80\x45\x05\x50\x42\xb5\x75\xfc\x0f\xa2\x0f\x33\x4b\x2f\x43\x69\x59\x6d\x28\x08\x93\xf7\xc8\xb5\x16\xd1\x66\x57\x5b\x2c\x3f\x13\xc9\xab\xc2\xfd\xaa\x02\x28\x0c\xb5\xd7\x6b\xf4\x73\xd5\xf1\x80\xc9\xe3\x68\x01\x07\x14\x4c\x8d\xa3\xb6\xf4\x2f\xef\x55\xd7\xc0\xb8\x75\x14\xde\x47\x76\xbd\xe6\x87\x22\xd3\x53\xb6\x75\x64\x1a\x9c\xc5\x59\xec\x42\xff\x99\x79\xba\xc4\x18\x3d\x74\x7f\x71\x78\x93\x31\xfc\x98\xdb\x8e\x59\xe3\x8b\x59\x54\xbd\x2e\xcf\x64\xb6\x98\x42\x40\x23\x8e\xc2\xa7\x01\x99\x9d\x9d\xbc\xd2\xc6\x60\x2c\x41\xc1\x20\xb7\x0f\x11\x93\x02\x1d\xa3\x2f\x9e\x38\x0a\xed\x10\xec\xe1\x6d\x22\x93\xd0\x3a\x6f\x5e\x1f\x62\x7e\x4f\x14\x8a\xcc\x3d\xc9\xbf\xe2\x28\xf3\x95\xb9\x0c\xf0\x51\xd7\x55\x00\x7f\xc4\xb2\x27\xba\x6e\x96\x5d\x9a\x3f\xbf\x92\xd1\xd9\xc3\xb9\x0a\x28\xf7\xc4\x77\xd7\x3e\x6f\x5d\x98\x9e\x1d\xa3\xdd\x69\x69\x29\x62\x48\x3b\xb7\x91\x9a\x86\x54\xa7\xbc\x0e\x28\xd5\x0b\x98\x13\x26\x3e\x48\xc2\xd9\x08\xb8\xd2\x66\x9b\x0d\x5a\x70\x01\x26\x37\x61\xd9\x74\xcd\xff\x40\x07\x0b\x9f\x56\xe7\x70\xdc\x74\xcd\x11\xdc\xef\x9c\xd9\x55\x2f\xc0\x62\x64\x1c\x87\x05\xbe\x51\x00\x7a\x4d\x03\x36\x70\xbb\x43\x90\x7b\x82\xb4\xa3\xec\x2d\xf4\x5a\xcc\xae\xa9\x9e\xd5\x2f\xbe\xf7\x92\x15\x2c\xdf\xbc\x2d\x17\xff\x8f\xb7\x89\x64\x3f\xce\x4f\xf8\x91\x2f\x21\x0f\x2e\x6c\x2f\xc3\x86\x0a\xf9\xfa\x70\xf3\x76\xe3\xde\xed\xd4\xb2\x3b\x1a\xab\x95\xe0\xd5\x54\x51\x81\x98\xf8\x06\x60\x9c\xb1\x71\x48\x4e\x14\x18\xdd\x18\x96\x6a\x20\x9f\x7b\xfc\xde\xae\x9c\xc7\xee\x49\xdb\xb4\x86\x9b\x29\x21\x55\x91\xe9\xf3\xc3\xf3\xa5\x53\x4e\xea\x9e\x2c\x96\x2f\x28\x03\xfc\xb8\x1d\xe7\x32\x7b\x5f\x46\xae\x9f\x32\x89\x9e\xb0\x11\xf9\x62\xf5\x81\x29\x47\x55\xfd\x15\x00\x00\xff\xff\x85\x26\xf1\x88\x7e\x06\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6f\x1c\xb7\x0f\xbd\xeb\x53\x10\x9b\x00\xb9\x64\xfe\xac\x93\xfc\x02\x08\xc8\xc1\xbf\xd8\x4e\x8d\x22\x8e\xeb\x35\x8a\xf6\x54\x68\x25\xee\x8e\x6a\x8d\xa8\x52\x9c\x71\xdc\x20\xdf\xbd\xd0\xcc\xd8\x5e\x37\x29\xd0\x9e\x76\x47\x7c\x7c\x7c\x7c\xa2\x68\x42\xa0\xdb\x13\x9f\xcd\x36\xa0\x3b\x21\x7b\x83\xac\x61\x67\x42\x46\x65\x92\xff\x19\x39\x7b\x8a\x1a\xc6\xb5\x72\x31\xff\xdf\x47\x77\xec\x1c\x63\xce\x1a\xd6\x47\x6f\xeb\xb6\x6e\xeb\xb5\x7e\xf3\xaa\x04\xaf\xd0\x0e\x9c\xfd\x88\x57\x98\x29\x8c\xef\x29\xee\x34\x34\x28\xb6\x21\xf6\x7b\x1f\x9b\x48\x0e\x1b\x9e\x82\xb5\xa5\xb8\x2b\x49\x27\xd4\x1b\x1f\x35\xd8\x30\x64\x41\xae\x03\x59\x13\x4a\xe0\xfc\x52\xc3\xfa\xed\x51\xbd\x2e\x45\xd6\xca\x4d\xca\x0a\xa7\xdf\x6b\x05\x30\x7f\x6f\x3a\xdf\x5f\x11\xc9\x89\x67\xb4\x42\x7c\xa7\xa1\x19\x0d\x37\xc1\x6f\x9b\x19\x91\x3b\xdf\x3f\x81\x6f\xca\x3f\x59\x70\x3c\xc4\x03\x5c\x9d\xc9\xde\x28\x00\xfc\x8c\xf6\x07\x13\x5d\x40\xbe\x30\x3d\x6a\x88\x46\xfc\x88\xca\x27\x29\x2e\xe5\xcd\x5d\xb4\x97\xc8\x9e\x9c\x86\xd5\xab\x36\xaf\x94\xef\xcd\x1e\x1f\xc5\xed\x88\x7b\x23\x1a\xce\x3f\x1e\x7f\x38\xfd\xed\xf2\xea\xf4\xec\xfc\x97\x66\xfe\xb8\xfe\xf5\xf2\xb4\x7a\xfe\xc5\x52\x9f\x28\x62\x94\xaf\xfa\xf9\x97\x71\x36\xf9\xab\x02\x08\x46\x30\x8b\x86\xb3\xe9\x02\x6e\x7c\x74\x1a\x2e\xc8\x2d\xdc\xea\x66\xd8\x62\x40\x39\xe6\xfd\xd0\x63\x94\x5c\x8a\x25\x72\x55\x6f\xa2\xdf\x61\x96\x2a\x19\xe9\xca\x61\xf5\xad\xf1\x89\x5c\x56\x00\x5b\x22\xc9\xc2\x26\x55\x85\xcc\x3e\x68\xfe\x4e\xc6\x03\xb4\x7e\x84\x96\xee\xd0\xc8\xc0\x58\xed\x8b\xd6\x39\xf5\x8a\xc4\x08\xfe\x38\xab\x7b\x1f\x3c\x46\x79\x8f\x2c\x7e\xe7\xad\x11\x7c\x27\x3c\xe0\xcb\x27\x98\x0d\xf2\x88\xfc\x77\x8c\x02\xe0\x09\x55\xd9\xc7\xc8\x52\x62\x55\x00\x2b\x05\x50\x42\x95\xf3\xfc\x0f\xa2\x0f\x33\xcb\x5d\xc6\x72\x65\x95\xa5\x28\x4c\x21\x20\x57\x46\xc4\xd8\xae\x72\x58\x7e\x66\x92\x17\x85\xfb\x85\x02\x28\x0c\x55\x30\x5b\x0c\x4b\xd5\xe9\x80\x29\xe0\x64\x01\x47\x14\xcc\xb5\xa7\xc6\xc7\x1d\x9b\x7b\xcd\x15\x30\xee\x3d\xc5\x77\xd3\x69\x91\x18\x68\x70\x55\x62\x1a\xbd\xc3\x45\xe8\xca\xfc\x39\xf0\xdc\xc0\x14\x3d\x74\x7e\x75\xd8\xc5\x14\xbe\xcf\x6d\xa6\xac\xe9\xb5\xac\x54\x6f\xca\x13\x59\xec\xa5\x18\xd1\x8a\xa7\xf8\x69\x44\x66\xef\x66\x9f\x8c\xb5\x98\x4a\x50\x30\xca\xf5\x5d\xc2\xac\xc1\xa4\x14\x8a\x1f\x9e\x62\x33\x46\x77\xd8\x49\x62\x12\xda\x0e\xbb\x97\x87\x98\xdf\x33\xc5\x22\xf3\x91\xe4\x5f\x71\x94\xd9\x1a\xb8\x0c\xef\x51\xdb\x2a\x80\x3f\x52\xd9\x11\x6d\xbb\xc8\x2e\x17\xbf\xbc\x90\xc9\xd5\xc3\x99\x8a\x28\xb7\xc4\x37\x97\x61\xd8\xfb\x38\x3f\x39\x46\xd7\x19\x69\x28\x61\xcc\x9d\xdf\x49\x45\x63\xae\xf2\xb0\x8d\x28\xea\x19\x2c\x09\x33\x1f\x64\xe1\xc1\x0a\xf8\x72\xc5\x6e\xb0\xe8\xc0\x47\x98\xdd\x84\x75\xdd\xd6\xff\x03\x13\x1d\x7c\xda\x9c\xc2\xab\xba\xad\x8f\xe0\xb6\xf3\xb6\x53\xcf\xc0\x61\x62\x9c\x06\x05\xbe\x51\x00\x66\x4b\x23\xd6\x70\xdd\x21\xc8\x2d\x41\xee\x68\x08\x0e\x7a\x23\xb6\xab\xd5\x93\xfa\xc5\xf7\x5e\x06\x0d\xeb\xd7\x6f\x4a\xe3\xff\xb1\x9b\x44\xee\xe3\xf2\x7c\xef\xf9\x32\xf2\xe8\xe3\xfe\x3c\xee\xa8\x90\x6f\x0f\xb7\x6e\x3b\xed\xdc\x56\xaf\xdb\xa3\xa9\x5a\x09\x5e\xcc\x15\x35\x88\x4d\xaf\xa7\x09\x9b\x46\xe4\x58\x83\x35\xb5\x65\x51\x23\x85\xa1\xc7\xef\x6d\xc9\x65\xe8\x1e\x94\xcd\x0b\xb8\x9e\x13\xb2\x4a\x4c\x9f\xef\x9e\xae\x9b\x72\x52\xf5\xe4\xb0\x7c\x41\x19\xdf\xfb\xbd\xb8\x94\x79\x74\x65\xe2\xfa\x69\x20\x31\x33\x36\x21\x9f\x6d\x3e\x30\x0d\x49\xab\xbf\x02\x00\x00\xff\xff\x6f\x48\x88\xba\x78\x06\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x6e\x1b\x37\x13\xbd\xe7\x53\x0c\x94\x00\xb9\xc9\xfe\xc8\x4e\xbe\x00\x04\x72\xe1\xcf\x3f\xa9\x51\xc4\x71\x2d\xa3\x68\xaf\x0a\x8a\x1c\x49\xac\xb9\x1c\x76\x38\xbb\x8e\x1b\xe4\xdd\x0b\xee\xae\x2d\xb9\x49\x81\xf6\x4a\x5a\xce\x99\x33\x67\x0e\x87\x63\x42\xa0\xfb\x33\x9f\xcd\x3a\xa0\x3b\x23\x7b\x87\xac\x61\x63\x42\x46\x65\x92\xff\x19\x39\x7b\x8a\x1a\x86\xa5\x72\x31\xff\xdf\x47\x77\xe2\x1c\x63\xce\x1a\x96\x47\xef\xea\xb6\x6e\xeb\xa5\x7e\x7b\x5c\x82\x37\x68\x7b\xce\x7e\xc0\x1b\xcc\x14\x86\x53\x8a\x1b\x0d\x0d\x8a\x6d\x88\xfd\xd6\xc7\x26\x92\xc3\x86\xc7\x60\x6d\x29\x6e\x4a\xd2\x19\x75\xc6\x47\x0d\x36\xf4\x59\x90\xeb\x40\xd6\x84\x12\xb8\xbc\xd6\xb0\x7c\x77\x54\x2f\x4b\x91\xa5\x72\xa3\xb2\xc2\xe9\xb7\x5a\x01\x4c\xdf\xab\x9d\xef\x6e\x88\xe4\xcc\x33\x5a\x21\x7e\xd0\xd0\x0c\x86\x9b\xe0\xd7\xcd\x84\xc8\x3b\xdf\x3d\x83\xaf\xca\x3f\x99\x71\xdc\xc7\x03\x5c\x9d\xc9\xde\x29\x00\xfc\x8c\xf6\x07\x13\x5d\x40\xbe\x32\x1d\x6a\x88\x46\xfc\x80\xca\x27\x29\x2e\xe5\xd5\x43\xb4\xd7\xc8\x9e\x9c\x86\xc5\x71\x9b\x17\xca\x77\x66\x8b\x7b\x71\x1b\xe2\xce\x88\x86\xcb\x8f\x27\x1f\xce\x7f\xbb\xbe\x39\xbf\xb8\xfc\xa5\x99\x3e\x6e\x7f\xbd\x3e\xaf\x5e\x7e\xb1\xd4\x25\x8a\x18\xe5\xab\x7e\xf9\x65\x98\x4c\xfe\xaa\x00\x82\x11\xcc\xa2\xe1\x62\xbc\x80\x3b\x1f\x9d\x86\x2b\x72\x33\xb7\xba\xeb\xd7\x18\x50\x4e\x78\xdb\x77\x18\x25\x97\x62\x89\x5c\xd5\x99\xe8\x37\x98\xa5\x4a\x46\x76\xe5\xb0\xfa\xd6\xf8\x44\x2e\x2b\x80\x35\x91\x64\x61\x93\xaa\x42\x66\x9f\x34\x7f\x27\xe3\x09\x5a\xef\xa1\xa5\x3b\x34\xd2\x33\x56\xdb\xa2\x75\x4a\xbd\x21\x31\x82\x3f\x4e\xea\x4e\x83\xc7\x28\xa7\xc8\xe2\x37\xde\x1a\xc1\xf7\xc2\x3d\xbe\x7e\x86\x59\x21\x0f\xc8\x7f\xc7\x28\x00\x1e\x51\x95\xdd\x47\xe6\x12\x8b\x02\x58\x28\x80\x12\xaa\x9c\xe7\x7f\x10\x7d\x98\x59\xee\x32\x96\x2b\xab\x2c\x45\x61\x0a\x01\xb9\x32\x22\xc6\xee\x2a\x87\xe5\x67\x22\x79\x55\xb8\x5f\x29\x80\xc2\x50\x05\xb3\xc6\x30\x57\x1d\x0f\x98\x02\x8e\x16\x70\x44\xc1\x5c\x7b\x6a\x3a\x53\xa6\xf5\x51\x74\x05\x94\x30\xe6\x9d\xdf\x48\xe5\xe3\x86\xcd\x7b\x93\x7c\x1e\x5b\x2c\x82\x03\xf5\xae\x4a\x4c\x83\x77\x38\xcb\x5e\x98\x3f\x7b\x9e\xda\x19\xa3\x87\xf7\xb0\x38\xec\x69\x0c\x3f\xe6\x36\x63\xd6\xf8\x76\x16\x6a\x92\x30\x9b\x4d\x31\xa2\x15\x4f\xf1\xd3\x80\xcc\xde\x4d\xae\x19\x6b\x31\x95\xa0\x60\x94\xdb\x87\x84\x59\x83\x49\x29\x14\x77\x3c\xc5\x66\x88\xee\xb0\xaf\xc4\x24\xb4\xee\x37\xaf\x0f\x31\xbf\x67\x8a\x45\xe6\x9e\xe4\x5f\x71\x94\x49\xeb\xb9\x8c\xf2\x51\xdb\x2a\x80\x3f\x52\xd9\x18\x6d\x3b\xcb\x2e\x63\x30\xbf\x97\xd1\xe3\xc3\x09\x8b\x28\xf7\xc4\x77\xd7\xa1\xdf\xfa\x38\x3d\x40\x46\xb7\x33\xd2\xec\x5d\xa6\x21\x57\xb9\x5f\x47\x14\xf5\x02\xe6\x84\x89\x0f\xb2\x70\x6f\x05\x7c\xb9\x70\xd7\x5b\x74\xe0\x23\x4c\x6e\xc2\xb2\x6e\xeb\xff\x81\x89\x0e\x3e\xad\xce\xe1\xb8\x6e\xeb\x23\xb8\xdf\x79\xbb\x53\x2f\xc0\x61\x62\x1c\xc7\x06\xbe\x51\x00\x66\x4d\x03\xd6\x70\xbb\x43\x90\x7b\x82\xbc\xa3\x3e\x38\xe8\x8c\xd8\x5d\xad\x9e\xd5\x2f\xbe\x77\xd2\x6b\x58\xbe\x79\x5b\x1a\xff\x8f\xdd\x24\x72\x1f\xe7\xc7\xfc\xc8\x57\x06\xc9\xc7\xed\x65\xdc\x50\x21\x5f\x1f\xee\xe0\x76\xdc\xc0\xad\x5e\xb6\x47\x63\xb5\x12\xbc\x9a\x2a\x6a\x10\x9b\xde\x8c\x13\x36\x8e\xc8\x89\x06\x6b\x6a\xcb\xa2\x06\x0a\x7d\x87\xdf\xdb\x99\xf3\xd0\x3d\x29\x9b\xd6\x71\x3d\x25\x64\x95\x98\x3e\x3f\x3c\x5f\x3e\xe5\xa4\xea\xc8\x61\xf9\x82\x32\xbe\x8f\x5b\x72\x2e\xb3\x77\x65\xe4\xfa\xa9\x27\x31\x13\x36\x21\x5f\xac\x3e\x30\xf5\x49\xab\xbf\x02\x00\x00\xff\xff\x70\x21\x9f\x04\x86\x06\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginCloudproviderAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x49\xcd\x4b\xcc\x2b\xf1\x4c\xb1\x52\xa8\xae\x56\xd0\x73\xac\x2a\x2d\x4a\x75\xce\xcf\x4b\xcb\x4c\xd7\x0b\x81\xc8\xb8\x28\xd4\xd6\x72\x15\x97\x26\x15\x27\x17\x65\x16\x94\x64\xe6\xe7\x61\x53\x1b\x8c\x2c\x0f\xd6\x91\x98\x98\xe2\x9c\x93\x99\x8a\xdd\x68\x47\x47\x17\xa8\x24\xaa\xda\xe0\xd4\xe4\xa2\xd4\x12\x3c\xea\x21\x0a\xa0\x7a\x42\x88\x72\x7a\x51\x6a\x71\x7e\x69\x51\x72\xaa\x7b\x51\x7e\x69\x01\xa6\xd2\x20\x64\x69\x90\xfa\x9c\xfc\xe4\x44\x90\x37\x30\x95\xfa\x40\x65\x40\xaa\x00\x01\x00\x00\xff\xff\x69\xfe\xce\x7d\x37\x01\x00\x00")

func nodeEtcOriginCloudproviderAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginCloudproviderAzureConf,
		"node/etc/origin/cloudprovider/azure.conf",
	)
}

func nodeEtcOriginCloudproviderAzureConf() (*asset, error) {
	bytes, err := nodeEtcOriginCloudproviderAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/cloudprovider/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/origin/cloudprovider/azure.conf":            nodeEtcOriginCloudproviderAzureConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"origin": {nil, map[string]*bintree{
				"cloudprovider": {nil, map[string]*bintree{
					"azure.conf": {nodeEtcOriginCloudproviderAzureConf, map[string]*bintree{}},
				}},
				"node": {nil, map[string]*bintree{
					"resolv.conf": {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/origin/cloudprovider/azure.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x88\xcc\xcb\xee\xc3\x85\x94\xdb\x8f\xa5\x92\x1f\x8c\x33\x80\x85\x49\x52\xdb\x81\xa2\xaa\xb2\x28\x0d\x34\xda\x14\x50\x12\xba\xad\xba\xfd\xef\x2b\x27\x81\xd0\xc2\xae\x56\xba\xea\x1b\xcc\x1c\xcf\x9c\x39\x73\x26\xa0\xa8\xab\x3d\x32\x02\xfc\xfe\x6e\x37\x47\xb3\x2c\x8f\xd2\xe6\x60\x9d\xe5\xab\xd9\x73\x64\xff\x6d\x67\x4f\x51\x92\xdc\x6c\xd7\x79\x64\x7f\x7c\x58\x05\x9a\x33\xa9\xc0\xd3\x01\x80\xd0\xa1\xe0\xd2\xbc\xdc\xa4\xf1\x2a\xb7\xd1\x53\x9e\x6f\xb2\xeb\x56\x0b\xd9\xbf\xc5\xab\xc7\xe8\x75\x5f\x91\x05\x99\xed\xfc\xde\x94\x79\x1a\xaf\x96\x36\xba\x6e\xff\xfc\xc3\x41\xa7\xcb\xbb\x44\x11\xed\x32\x81\x5b\x2f\xb3\xb4\x95\xc4\x0f\xad\x28\x9f\x3f\xb6\xac\x46\x91\x9d\x10\x5e\x24\x11\xaa\x02\xd2\x23\x81\x1c\xf8\x4a\x53\x3f\xf4\x14\x3e\x73\x1c\xc7\x29\x0b\x0d\x80\x08\xd5\x05\xa2\x34\xf3\x14\x88\x31\xe1\xf8\x62\x97\x03\x0e\x54\x31\xdf\xd3\x8a\x8d\xc0\x0f\x15\x6e\xef\x53\xd5\x78\x94\x33\xf0\xd4\x2f\x0c\x78\xd5\x39\x1e\xb0\xa4\x3c\x22\xb7\x7b\xda\x12\x5f\x1c\x44\x27\x84\xd7\x01\xea\x0b\x89\x2d\xcb\x6a\xdc\xcd\x93\xad\x69\x72\x5f\x12\x64\x1e\x53\x8c\x70\x4d\xdc\x31\x08\xc5\x24\x7c\xdb\x2a\x76\x9d\x28\x0f\xa5\x02\x51\x57\x3f\x32\x0a\xc2\xdf\xd0\x4f\x4b\x45\x14\xe0\x55\xf4\xd7\xe9\xb4\xf2\x87\xe0\x61\xe3\x8e\x1f\x95\x42\x3f\xce\x2a\xed\x5c\x26\xa9\x3f\x06\x31\xc5\x5f\x03\x5a\x8a\xf1\x71\xb0\x47\x38\xef\x12\x3a\xc4\x9b\x74\xfd\xfa\x76\x94\x0e\x84\x7f\x3b\xc5\x25\x8b\x5a\xf6\x6f\xb4\x88\x54\x82\x51\xa5\x05\x50\xdf\xeb\xb1\xbe\xa6\x03\xa0\x43\x8c\x16\xb3\x24\x8b\x76\xce\x27\xa1\xf2\x35\xf5\x47\x01\x29\xad\x2c\x40\x81\x67\x7e\x61\xe4\xec\x30\xe0\x91\x2e\x07\x3d\x6e\x63\x94\xa7\xdb\x08\x95\x23\xdc\x84\xbe\x22\xda\xcc\x0b\x9e\xab\xbb\x53\x05\x12\x9f\xb7\x3b\xe7\x9d\xcb\xab\x76\xe7\xd2\x38\xae\x90\xe1\xbe\x2a\x52\x4e\xbf\x5e\x2c\x0e\xff\xeb\x1e\x61\x3c\x14\xa0\x27\x84\x29\x8c\x2e\x1c\x67\xdf\xb4\xcc\x0b\xe8\x09\x90\x83\xfa\xf8\xd0\x4f\xe7\x08\xe4\x9a\x7d\xee\x6e\x10\x9d\x1d\xe5\x27\x82\x29\xa8\x01\xa7\xba\x10\xb7\xce\x3b\xc8\x90\xcf\xa2\xf9\x36\x8d\xf3\xb7\xea\x5e\x94\x30\x76\x71\x35\x25\xba\xc7\x38\x60\xf3\x3d\x29\xbf\x29\xf3\x59\x73\x9e\xe6\x25\xaa\x5a\x26\x05\xa1\x8c\xb2\x83\x4f\x82\x15\xd1\x2f\x8f\xb3\x28\x7d\x89\xd2\xba\xc0\x10\xa6\xff\x02\xf9\x33\x7a\x3b\x5c\x99\xe2\x72\xbf\xc9\x72\x12\x73\xbe\xff\x8f\x65\x01\xfd\x4f\xaa\x25\xe2\x04\xdf\x4d\x74\xc8\xb6\x80\x9d\xa0\x5c\xa0\x6a\xc2\x05\xec\x88\xb5\xd5\xb8\x4b\xd6\xcb\x65\xbc\x5a\x56\x12\xbb\xd0\x0d\xfb\x18\xf5\x0e\x86\xe2\x7e\x5f\x07\x84\x0e\x49\x1f\x34\x87\x31\x98\xe7\xa6\x43\xa9\x09\x2e\x5e\xa0\xca\x6a\x8b\x38\x29\x6a\x7d\xf2\x6c\x10\x08\xbf\xf7\xc5\xf2\x23\x30\x77\x21\x31\x7a\x98\x65\xf1\x1c\x59\x0d\xab\x71\x37\xdb\xe6\x4f\xf7\xb5\xbe\x83\xea\xb3\x80\xb2\xf8\x79\x93\x44\xc8\xfa\x27\x00\x00\xff\xff\x6b\x4e\x0b\x40\xe2\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x79\x6f\x1b\xbb\x11\xff\x5f\x9f\x82\x10\x1e\x90\xa4\xe8\xae\x64\x3b\xe7\x02\x45\xa1\xda\xce\x8b\xf1\xec\x58\x95\x9d\xa2\x40\x5d\x04\x14\x39\x5a\x31\xe2\x92\x1b\x1e\x8a\x15\xbf\x7c\xf7\x82\xc7\xee\x72\x75\x24\x41\x9a\xf6\x39\x01\xe2\x25\x67\x86\xc3\x99\x1f\xe7\x0a\xa6\x15\xd3\x9a\x49\x71\x2a\xc5\x82\x95\xc5\x00\xa1\x9a\xdb\x92\x25\xdf\x08\xfd\xcd\x32\x4e\xcf\x60\x81\x2d\x37\x3a\x2c\x21\x44\x3c\x81\x55\xd8\x30\x29\x9a\x45\x84\x70\xcd\xfe\x01\xca\x49\x2c\xd0\xfa\xa8\x5d\x06\xb1\x2e\xd0\xbf\xfe\xdd\x7e\xaf\x98\xa0\x45\x5f\x70\x38\xb1\xa5\x50\xa0\xa5\x55\x04\x74\x27\x1b\x21\xce\x2a\x66\x74\x81\x1e\xbe\x24\x8b\x0a\x3e\x5a\xd0\xc9\xb2\x17\x7b\xbd\x06\xa5\x18\x85\x1f\x54\x38\x51\xb0\x95\x94\x68\x38\x95\x74\xaa\x40\x83\xf9\x31\xe9\x94\x69\x3c\xe7\x50\xa0\x05\xe6\x1a\xb6\x0e\x8d\x06\x99\xf4\x5d\xe3\x89\x64\x0d\x42\x2f\xd9\xc2\xe4\x4c\x8e\x2e\x2a\x5c\xc2\x54\x72\x46\x36\x3f\xe8\x94\x7b\x20\xd6\x51\xce\x2c\x4f\xed\x9c\xa1\x0a\x1b\xb2\xf4\xf2\x27\x42\x48\xe3\xc5\xf5\x1c\x91\xa1\x15\x6c\x0a\xc4\x1c\x89\xce\x7b\x6a\x51\x10\x9b\xac\x15\x9d\xf0\x20\xb4\xc6\xdc\x42\x81\x1e\x19\x65\xe1\x51\xb2\x23\x70\x05\x45\xa7\x4e\x46\x41\x30\xa0\x09\x81\x14\xb3\x7d\x70\xc8\x5a\x94\x14\xa8\x96\x54\x1f\xd8\x9a\x3b\x2f\xea\x1e\x62\x3e\x00\x31\x05\x72\x7a\x24\xcb\x7a\xc5\xea\x6b\x7f\x12\xf7\x7a\xbc\xc6\x8c\x5b\x05\x5b\x74\xc1\x49\x89\xf1\xa3\x7f\x70\x59\x2a\x28\xb1\x91\x2a\x79\x4b\x4a\xde\x6f\x4e\x39\x03\x61\x2e\xc4\x42\x06\xdd\x09\x28\xf3\x9a\x39\xef\x77\x2c\xd9\x42\x49\x61\x32\x4f\x9f\x13\x65\x3c\xe1\x0a\x36\x5f\xa5\x5b\xc1\x66\x80\x6b\x76\x09\x6b\xe0\xba\x18\x64\xce\xb7\x5b\xae\xc6\xd6\x2c\x3b\x75\xe2\x4b\x79\x03\x98\x82\x8a\xca\x78\xe5\x4e\x27\x05\x4a\x24\x67\x04\xb7\x4a\x44\x02\x59\x55\x52\xbc\xc5\x55\xe3\x80\xec\x80\x52\x83\x00\x2c\xa3\x70\x38\x65\xaa\x60\xc1\xee\x3b\xae\x7f\x66\x33\xa8\xa4\x81\xec\xdc\xd1\x64\x7e\xb5\x54\xd2\xd6\x81\x7c\x97\xee\x57\xb7\xe9\x17\xad\x06\xe5\x90\x72\x88\xf2\x9d\x06\x35\x20\x52\x18\x25\x39\x87\xc4\x0b\xc0\x81\x74\x0f\x82\x4b\xb2\x7a\xeb\x01\xd7\xc2\x36\xab\xb0\x36\xa0\xb2\x8e\xd9\xa1\x45\x83\x5a\x33\x02\x37\xee\x1f\x51\x9e\x82\x8a\x8f\x5d\xb3\x52\x34\xe6\x4b\xbd\x19\xe9\xb3\xb0\xdf\x1a\x30\xf1\xe3\x16\x85\xf3\x5f\x72\x64\x81\x1e\xfd\xe9\xd1\x80\x48\xa5\x27\x9c\xcb\x4f\x40\xaf\x15\x2b\x99\xf0\x9e\x7d\xfc\x57\xf6\x64\x34\x3a\x3a\x7e\x71\x97\x8f\xfd\xdf\xa3\xc7\xc5\xef\x77\x9f\x9f\xb4\x5b\x5c\x12\xcc\x97\x52\x9b\x76\xfd\xe1\x01\xd5\x8a\x09\x83\x86\x81\x62\x88\x1e\xff\xdd\x4a\x03\x57\x60\x30\x7a\xcc\x04\x85\x7b\x94\x5f\xf9\x8b\xe7\x17\x53\x8d\xc6\x4f\xf2\x1b\xa3\x98\x28\x9f\xa0\xa1\x13\x72\xf7\xf9\xc9\x10\xfd\x8e\x3e\x3a\x1e\xf4\xe5\x4b\x7b\xd2\xca\xce\x41\x09\x30\xa0\xef\x72\x1a\x42\xd5\x96\x2e\x7b\x28\xee\x72\xbd\x26\x77\x39\xe1\xd6\x9d\x77\x97\x7b\x75\x0f\xb2\x7d\xdf\x1d\xf2\xf3\x7b\xe3\x10\xc1\xc3\x25\xde\x48\x6d\x1c\x3c\xbe\xa1\x7e\xeb\xf4\x5d\xed\xbf\x7e\x5a\x34\xd5\x0f\x1f\xe3\x4d\xf0\x9d\x96\xda\x22\x3b\x7a\x71\x7c\x97\x9f\xec\x77\xfc\x81\x83\xbe\x61\xeb\x96\x2b\xae\x53\xa1\xbb\xf7\x32\x67\x82\x4e\x28\x55\xa0\x75\x81\xc6\xb9\xff\x53\xbc\x1c\x3f\x3b\x89\x7b\x6f\xc1\x7c\x92\x6a\x55\x20\x43\xea\xa7\x03\x30\x84\xf6\x43\x1c\xc1\x05\x0a\x2f\x2a\x77\x9b\x5d\x34\xe9\xde\x4a\x6f\xdb\x33\x47\x92\xf6\xad\xec\xa1\x70\xef\x05\x21\xab\xb8\x7f\xfb\xa9\xbf\x96\xc6\xd4\xba\x70\x1e\xdb\x76\x13\x1a\x16\xc7\x27\x2f\x5e\xf5\x7c\xe4\x64\xde\x18\xa9\x70\x09\xdd\xa5\x3b\x57\xc4\xad\x10\xb9\x8a\x64\x23\x67\x72\x1f\x61\x3f\xb5\x3a\xcb\xde\x38\xcb\x6e\x89\x49\x73\xe4\x1e\xb2\x54\x88\xcf\xaa\x9d\x66\x0b\xa9\x2a\x6c\x0a\x74\x35\xb9\xb9\x3d\x9f\xbd\xbf\x9e\x9d\xff\xfa\xfe\xdd\xec\x32\xfb\xe5\x81\xc8\xaa\x96\x02\x84\xf9\x52\xfc\xf2\xb0\x0e\x12\x5c\x09\xc4\xb1\x01\x6d\x9a\xea\x82\x6d\xa7\x2a\x27\x94\x89\xf0\x76\x66\x50\x32\x6d\xd4\xa6\xb1\x57\x81\xa8\x24\x2b\x50\x99\x8a\x1b\x0d\xaa\x1c\xa8\x8a\x67\xe3\xf1\x78\x10\x12\x60\xb0\x73\xcc\x7d\xce\x26\x1c\xcc\x2e\x0c\x08\xce\xe6\x56\x50\x0e\x87\x10\x10\x39\xbf\x0e\x82\x2d\xa2\x80\x83\x5a\x2a\x53\xa0\xa3\xf1\xf1\xb3\xf1\xa0\xf3\x49\xaa\x96\x53\x02\xd7\xcc\x05\x70\x50\x13\x55\xda\x0a\x44\x53\xc0\x2a\x2b\x0c\xab\x20\x23\x49\x9d\x9b\x39\x6a\x3d\xd2\x60\x0c\x13\xa5\xce\x57\x2f\x9d\xcb\x47\xeb\x23\xcc\xeb\x25\x3e\xfa\x4b\x5b\x06\xe8\xe0\xb3\x6c\x8e\xc9\x0a\x04\x6d\xb8\x1d\xae\x4e\x7a\x04\x15\x50\x86\x33\xb3\xa9\xa1\x3b\xa1\xe6\x8c\xf8\x82\x6a\xb4\x16\x34\x4f\xd0\x55\x2b\x69\xe4\xdc\x2e\x62\xda\x95\x96\xba\x94\xba\x66\x6d\xae\xce\xd0\x10\x7f\xb6\x0a\x86\x09\x45\x5f\xff\xe1\x08\x0c\x19\x49\x9f\x37\x46\x9e\xa0\x91\x30\xf2\x9c\xb9\x23\x77\xec\x5d\xda\xd9\xb2\x4b\x8c\x1a\x3e\x45\x31\x51\x66\xce\x61\xd9\xc2\x39\x63\xdf\x11\xc1\x3f\xa3\xf0\xc0\x87\x7b\x05\xac\x60\xf3\x3d\xfc\x2b\xd8\x0c\xff\x1f\x17\xaf\x22\x3e\xac\x70\xe0\x69\x17\x2e\xa6\x85\x0b\x27\x5f\x4b\x8b\x69\x04\x71\xe8\xa3\xe7\x6b\xe6\xcb\x8a\x5b\x56\x81\xb4\xa6\x40\xc2\x72\xfe\xed\xa2\x2f\x62\x3a\x16\x5a\x29\xec\x77\x81\xdf\x23\x0a\xb0\xd7\x64\x09\xd4\xf6\x1c\xd7\x1c\xdc\x6e\x05\xf8\x07\x49\x7b\xcc\xdd\xd2\xe5\x1f\xb4\xaf\xd0\x63\x5d\xa2\xdf\x4a\x0a\x53\xa9\xcc\x0c\x8b\xd2\xd5\xe9\x8f\x92\xbd\x1b\x3b\x17\xe0\x6c\xf6\xe2\x38\x3f\xf1\x29\x61\x74\xf4\xdc\xed\xbb\xee\x80\x38\xce\x50\x1d\xba\x2e\x2f\x1a\xd9\xab\xed\x71\x05\x31\x53\xff\xd6\xa2\xfd\x34\x96\x95\x42\x84\xda\x6c\xab\x5d\xc3\x84\x40\xed\xb6\x0d\x08\x73\xbb\xa9\x9d\xe0\xef\x78\x3a\x7f\x4e\x69\xe2\xe5\x10\x9a\x5b\xe5\xa2\xe1\xd3\xf1\x78\x10\x9b\xa4\x46\xea\x77\x09\xf5\x4c\x1f\x6b\x5d\xa0\x63\x2f\x61\xf7\x32\xee\xb7\x18\x72\x82\xd1\xda\x60\x7f\x29\x65\xed\xa2\xc4\x1f\x70\xdd\xe7\xff\xf5\x75\x4f\xbc\x84\x9d\xbb\xa4\xb7\xdd\x2e\xa1\xbd\xc0\xf0\x34\x23\x0a\xa6\x76\xce\x19\x79\x37\xbb\x2c\xf6\xe7\xeb\xfd\x45\x1c\x1a\x16\x5d\x2e\x77\x90\x4c\x5f\x9f\x08\xf5\x47\x17\xe4\x63\xcc\x89\x75\xc9\xe9\xc5\xd9\xcc\x25\x86\xfc\xe8\xf8\x65\xc0\xe9\xd3\x1d\x9a\x58\x41\x10\x46\xd5\x2e\x29\x42\xae\x90\x0e\x80\xbf\x04\x51\x9a\x65\x81\x5e\x25\x8e\xbf\x98\x26\x27\x45\x49\xb1\x4c\x1a\x39\x8b\xed\xe7\x8e\x5a\x4f\xfd\x78\x25\x34\x20\x0a\xe8\x12\x9b\xae\x18\xcb\xe4\x5a\x67\xda\x73\x76\x2f\xaf\x7f\xab\xde\xeb\x93\xfd\xf6\x0e\x6b\x0d\xe6\x67\xd9\x7b\x38\x22\x52\x68\xc9\x61\x34\xec\x47\xbe\x52\x61\x8f\xe4\x36\xfa\x56\x60\x96\x92\x16\x08\x5b\xe3\x2a\x1b\x46\x41\x18\x66\x36\xd3\x18\x80\x75\x31\x78\x78\xc8\x10\x5b\xa0\xfc\x5c\xe0\x39\x87\xc9\xe4\x6c\x62\xcd\xd2\x51\x05\x24\x7a\xb1\x59\x9c\x02\x4c\x5c\xb8\x46\x93\xb3\x80\xdd\x25\xe6\x1c\x7c\x30\xea\x26\x25\x5c\x96\x4c\x24\x4d\x79\x85\xeb\x9a\x89\xf2\x2a\xaa\x41\x38\x66\x95\xdf\xe8\x27\x91\x03\x63\x90\x50\xcd\x5c\xd7\x20\x2e\xce\x2e\xb6\x54\x6f\x5a\xbc\x10\xcb\xcf\xbc\x45\x73\xaf\x60\xb8\x7f\x3e\x99\x9c\xc5\x40\x7f\xd6\x37\x52\xc7\x76\x03\x44\xb9\xb8\x79\x90\x35\x10\xec\x63\xc7\xac\x4a\xc6\x1d\x8c\xa6\x13\x1a\x6d\xe7\xed\x57\xad\x60\x01\x4a\x01\x7d\x17\x3b\xe4\x94\xd0\x0a\xf6\xd1\xc2\x7b\xb7\xdc\xae\x6e\xd3\xf4\x36\xa1\xc2\x8c\xa7\xbb\x7e\x21\x7e\x37\xc5\x77\x34\xa8\x35\x4b\xa9\xd8\x67\xd8\x87\x35\xef\xa6\xbc\x62\x44\x49\x2d\x17\x46\x0a\xce\x84\xcb\xc3\x95\x43\x61\x6a\x89\x5b\x10\xd8\x5b\x70\x38\xf2\x80\x3e\x1e\xb5\x72\x87\xbb\x66\x41\xc8\xc8\x15\x88\x9f\x7c\xa2\x97\xd9\x3b\xcd\x61\x16\x04\xed\x61\xf3\xd2\x75\x52\xa8\xc6\x5a\x7f\x92\x8a\x6e\x23\xb4\x05\xe4\xcf\x05\xe8\xe2\x50\x1a\x5f\x1a\xaf\x09\xed\x01\xf9\xcd\xed\xd4\x2f\x4e\xa3\x92\x7b\x20\x1d\xb3\xf3\x64\xb7\x3a\xff\x9f\x45\xec\x46\xf4\x4f\x16\xaa\x61\x6b\x76\xdd\x2e\x5d\xe1\xfb\x49\x09\x37\x2e\x15\x51\x97\xc9\x9a\x64\x18\xb7\x43\xf8\xd5\x5a\xa4\x8b\xe1\x21\xea\xc3\x65\x53\x20\xcb\x74\xa0\xcb\x37\xb8\x72\xcf\xc2\x43\x27\x55\xc1\x25\x73\xad\x6f\xdd\xf2\x96\x1a\x2f\x9f\x37\x35\x48\x8b\xf0\x7d\x64\xcf\xc6\xe3\x41\x8d\xad\x76\x70\xed\x86\x43\x21\x00\xd6\x5b\x7d\xdc\x5c\x4a\xa3\x8d\xc2\x75\x68\xf0\x0e\x2a\x1f\xf8\x9a\x82\xaf\xcd\x38\x17\x62\xa1\xb0\x36\xca\x12\x63\x55\xa8\xe0\x6a\x4c\x7a\xb3\x31\xe6\x48\x52\x9e\x9b\x25\x56\x40\xdb\x81\xec\x3e\xa6\x41\xad\xe4\x07\x20\x49\x9a\x88\x5d\xa4\xab\x13\x6f\xfc\x3c\x4e\xaa\x02\x09\x49\x21\x53\x92\x43\xde\x6b\xb2\x47\xae\xaf\xb5\x06\x9a\x86\x2b\x0a\x9b\x85\xe9\xe5\x15\x68\x8d\xdb\xf2\xb4\xbf\x77\x0b\x55\xed\x9a\xdf\xb6\x76\x25\x56\x31\xb3\x99\x70\x2e\x09\x76\x47\x86\xf7\x48\x74\xbb\x12\x4b\x5d\x3d\x2e\x46\xc7\xcd\xe6\x25\x9e\x03\xd7\x53\x50\xd3\x20\xbc\x40\xcf\xc2\x00\x92\xd1\x6d\xbe\xa3\x71\xf3\x93\x1d\xbd\x6a\x7e\x46\x7e\x75\xa0\xa4\x75\x7d\x64\x67\x03\x6d\xe7\x54\x56\xd8\xc5\x86\xdb\xf3\xab\xe9\xec\xfa\xdd\xed\xf9\xec\x62\x9a\x0b\x56\xe7\x4c\x0e\x62\xbe\x9f\x10\xe2\xba\x93\x8e\xcd\xff\xa7\x47\x00\xe7\xcc\x05\x7a\x10\x04\x74\x97\x10\x2b\x2c\x70\x09\xb4\x9d\xcd\x66\x8d\xad\xfd\xef\x7e\xf6\xed\x9f\xbd\x5b\xaf\xb9\xdc\x7c\x23\x06\xd4\x8a\xad\xb1\x81\xdf\xb6\x66\x96\x38\x68\xe5\xca\x44\xbf\xdf\x34\xe1\x3e\x56\x44\xe2\x78\xfc\x0e\x87\xa7\xf1\x0c\x3a\xcc\x52\x9b\xb6\xa8\x37\x68\xea\xc2\x42\x33\x72\xfa\xda\xd3\xdf\x9d\x43\xed\xe9\xb1\xb4\xef\xfc\x9b\xd1\x43\x3b\xe9\x6e\xe7\x51\xdb\xed\x56\xa4\x0f\x57\xab\xf0\x7d\x44\x95\xbe\x10\xaf\x39\x2b\x97\x26\x3c\xcd\x76\x8e\x1e\x1b\xbf\x7e\x94\x59\x4b\x6e\xab\x64\x7a\x43\x37\x02\x57\x8c\xf8\xf8\xeb\xc2\x07\x13\x65\x28\x83\x68\xcc\x10\xff\x09\x00\x00\xff\xff\xd7\x36\xe9\x25\x83\x1b\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x96\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x52\x85\x1a\x85\xc2\xd2\xfc\x92\x54\x85\xda\x5a\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x84\x3a\xd7\xbc\x64\x4c\x65\x80\x00\x00\x00\xff\xff\xc1\xc1\xc9\xa5\x80\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x6d\x6f\xdb\x38\x12\xfe\x9e\x5f\x31\x50\x0a\xf8\x0e\xa8\x6d\xb4\x5d\xe0\x6e\x05\xf4\x83\x37\xab\x36\xc1\x36\x71\x60\x3b\x87\xf6\x16\x0b\x2d\x25\x8d\x2c\x5e\x28\x8e\x4a\x52\x76\xbc\xb9\xfc\xf7\xc5\x88\x94\xe3\x28\x49\x1b\x34\x9f\x22\x73\x5e\x1e\xce\x3c\xf3\xc2\xf1\x78\x7c\x74\x0c\x1f\xce\x3e\x9f\x27\x31\xcc\xf4\xce\x55\x52\xaf\x21\x43\x45\x5b\x90\x1a\x84\x52\xe3\x5c\x34\x16\x2a\x61\x41\xba\x91\x85\x8d\x50\x2d\x82\xc1\x46\x89\x1c\x0b\xc8\x76\x60\xb1\x60\x51\x57\xe1\xd1\x31\x84\x3f\x6a\x50\xdb\x4a\x96\xae\x16\xd6\xa1\xb1\xb9\x91\x8d\x9b\xd8\x0a\xb6\x95\xcc\x2b\x90\x16\x34\x39\x90\x05\x0a\xf5\x1a\xb6\x08\xb6\xa2\x56\x15\x50\xca\x1b\x70\x95\x70\x93\x23\x45\xb9\x50\x5e\x39\x3e\x02\xa8\xc8\x3a\xcb\xff\x00\x74\x27\xfc\x7d\x04\xb0\x11\x26\xfc\x2a\xb4\x95\x99\xc2\x34\x27\xad\x31\x77\x92\x74\xec\x25\x1f\x9c\x36\x3b\x57\x91\x4e\xa5\x76\x68\x1a\x83\x6c\x1c\xa6\xad\x35\xd3\x4c\xea\xa9\x3f\x7c\x7b\x74\xf4\xe0\x02\xa9\xb4\x6c\xd4\x09\xa9\xd1\xc8\xbf\xb0\x88\xe1\x83\x50\x16\x07\x52\xb9\x92\xa8\x5d\x9a\x49\x2d\xcc\xee\xc0\x28\xe5\x8f\xec\xd5\x62\x8d\xa9\x13\xeb\x18\xa2\xcd\x7f\x92\xc5\xf2\x6c\x7e\x11\x0d\x85\xb6\x98\xb1\x57\x4b\x0a\x83\x82\x16\x35\xc6\x10\x9d\x9d\xcf\x3e\x26\xe9\xe5\x22\xf9\x70\xf6\x79\xea\x3f\x56\x5f\x2e\x93\xf1\x16\xb3\x71\x50\x88\x87\x56\x0d\xae\xd3\xd6\xa8\x18\x46\xe7\xb3\xe5\x2a\x59\xa4\xf3\x45\xf2\x31\xbd\x5a\x7c\x1a\xbf\xba\xcd\xa9\x6e\x48\xa3\x76\x77\xf1\xab\xdb\x0d\x1a\x2b\x49\xdf\x8d\x06\x68\x7c\x1e\xd2\x02\x4b\xd1\x2a\x97\xda\x36\x2b\xa8\x16\x52\xc7\x30\x5a\x25\xe7\x97\x8b\xf9\xd5\x2a\x59\x9c\x5d\x4e\xb4\x6c\x26\x92\x46\xde\x6d\x60\x55\xf8\x7f\x55\x49\xdb\x67\x39\x43\x70\xbb\x06\xdf\x4b\x5d\x1a\xf1\x1a\xb2\xd6\x31\x05\x2a\xb1\x41\x70\x04\x4a\x6e\x10\xb6\xd2\x55\x60\x70\x2d\x49\x7b\x31\x28\xc9\x80\xa6\x6d\x30\x97\x61\x2e\x5a\x8b\x40\x25\x28\x5c\x8b\x7c\x07\x06\x85\x25\x6d\x07\xc8\x0d\xb5\x8c\xdc\xa2\xc2\xdc\x91\x89\x61\x74\x68\x74\x78\x4f\x3e\xb3\xce\xec\xbe\x2d\x7f\x0c\x17\xd4\x51\x17\xb6\xd5\x0e\x1c\x5f\x4c\x5a\x10\x50\xc8\xb2\x44\x83\xda\x41\x21\x9c\xe8\xae\xe8\x2f\x27\x1d\xc8\x21\xb0\xc6\x50\x8d\xae\xc2\xd6\xa6\x9a\x0a\x3c\xf0\x78\x1b\x5c\x8e\x62\x18\x79\xaf\x77\x7d\x40\x97\xe8\x60\xf6\x57\x6b\x10\x6c\x83\xb9\x2c\x65\xee\x5d\x71\x6c\xb8\x22\xb0\x80\xfe\x0a\x03\x77\xfe\xf4\xe0\x82\x8e\x0c\xb3\xaa\x31\xb4\x91\x05\x97\x41\x24\xd8\x70\x9a\x29\xca\xa2\x17\x2a\x5f\x4b\x5d\xc4\x10\x51\xf6\x3f\xcc\xdd\x4b\x95\xee\xdd\xa4\x22\xcf\xa9\xd5\xce\x33\x7b\xb4\x48\x3e\x9e\x2d\x57\x8b\x2f\xe9\x72\x35\x5f\x30\xaf\x67\xff\xbd\x5a\x24\xe9\xec\xe4\x64\x7e\x75\xb1\xba\x98\x9d\x27\xc3\x74\xbd\xdc\xc5\x35\xee\xbe\xeb\xe1\xb7\xe4\xcb\x0f\x38\xd8\xb7\x86\x18\xa2\x5e\xee\x07\x42\x61\x50\xa8\x3a\x86\x28\x27\x83\x93\xad\xd4\x05\x6d\xed\x44\xa3\x8b\x9e\xa8\xa5\xf0\xcb\xa9\x30\x05\xe4\x54\xa0\xa7\x60\xa8\x8f\xc9\x03\x99\x93\xd6\x30\x21\x15\xd3\x14\x21\x57\x2d\xd7\x31\x58\x27\x1c\x82\x70\x50\x60\xa3\x68\x57\x33\x65\x9d\xac\x11\x0a\x42\xdf\x98\x7d\x2d\x56\x08\xcc\x4d\x1b\x8c\x79\xfc\x68\xb0\xe0\x32\xe5\x53\xdf\x17\x7c\xb1\x2a\x91\xa1\xb2\x20\x9a\x46\x49\x2c\x40\x68\xe6\xa2\x28\x76\x2c\x9b\x21\x7c\x6d\xd1\x48\x2c\x82\x29\xb1\x16\x52\x5b\xc7\x18\xd8\x4e\x43\x52\xbb\x6e\x86\x30\x0a\x3f\x4b\x02\xb8\x6e\x1c\x78\x21\x25\x76\x19\xd1\xb5\x05\xd3\xea\x09\xcc\x94\xa5\xd7\xc1\x1c\x1f\xfb\x4a\xef\x06\x93\xcc\x05\x74\x69\x87\xd0\xb1\x20\x2a\x85\x52\x16\x32\x91\x5f\x47\x0c\xe8\x0d\xe3\x34\xd4\x18\x29\x1c\xaa\x1d\x6c\x2b\x34\x08\xc2\x1e\xda\x0b\xd9\xda\x5b\x54\xb4\xe6\x7a\x0b\x21\x9a\xc0\xaa\xd3\xd9\x0a\x0b\x42\x59\x82\x42\xda\xbc\xb5\xdc\x3e\x41\x64\xc4\x55\x5f\x06\x6b\xdd\xd8\x3c\xf0\xc7\x00\x0a\xf2\x59\x0b\x7d\xae\xf3\x60\xe1\xfd\x7b\xf0\xcd\xae\x0b\xfb\xbe\xc9\xb1\x81\x60\xab\x41\x53\x62\xce\x09\x2d\x51\x74\x33\x8d\xad\x75\xe9\x12\xfa\x40\x39\xdc\xbf\x92\xeb\x0a\x0d\xc7\xb0\x8f\xa9\x95\x66\x9f\x85\xde\xef\x43\xce\x2c\x70\x23\xad\x74\xa0\x04\xc7\xf3\x1f\x0d\x59\xf6\xb3\xe3\x06\x27\xb0\x26\x6d\xd1\x01\x19\x78\x45\xae\x42\xf3\xcf\x67\xa8\xee\xdb\x6e\xef\x20\x86\x37\xdf\x29\x89\x43\xc9\xe7\x3b\x65\x47\xdc\x18\xa2\xc6\xa0\x45\xfd\xa8\xe5\x0c\x7b\x2a\xde\x34\x64\x18\x87\x9f\xa0\x61\xba\xc5\x30\xba\x5c\xcc\xcf\x93\xd5\x69\x72\xb5\x4c\x93\xcf\x97\xf3\x05\xcf\xc4\x30\x33\x47\xdf\x9c\xc4\xda\x3a\xa1\x54\x0c\x2b\xd3\xe2\x37\x70\x7a\x7f\x8d\xc1\x52\xde\x0c\x67\xf6\x10\xf4\x7d\x0d\xa6\x3c\x31\x62\x18\xcd\x2e\x96\x67\xbf\x7c\x4a\xd2\x5f\x93\xcb\x4f\xf3\x2f\xdd\x78\x0f\xa8\xfa\x35\xc6\xa2\xd9\xc8\x1c\xd3\xcc\xd0\x35\x5f\xef\x01\xac\x6f\x09\x32\xae\x18\xe0\xf6\xf6\xcf\xe8\xf6\x16\x54\x2a\x6c\xb6\x9f\xea\xdd\xa1\x4d\x0b\x99\xbb\xdf\x9f\x85\xf7\x07\xc8\xf2\x79\xf0\x4c\xe0\x11\x19\xb9\x96\x7a\x04\xa8\x2c\x06\x17\x3e\x1e\xad\x51\x70\x77\x17\xfd\x79\x77\x37\x08\x41\x8f\x32\x17\x4e\x28\x5a\xf7\x30\x9f\xdd\x75\x82\xfc\x38\xc8\x1f\xec\x3b\x4f\xae\x2d\xe8\xf2\x82\x9d\xdb\x18\x7e\x8f\x2a\xe7\x1a\x1b\x4f\xa7\xa7\xf3\x65\x37\x53\xe2\xb7\xef\xfe\xf5\x73\xf4\x87\x8f\xaf\xc3\xba\x61\xda\x3f\x13\xb7\x67\x01\xf5\x7a\x7b\x64\x5e\x6f\xb8\x88\x1d\xc3\xc5\x7c\x95\xc4\x7e\x17\x92\x16\x0c\x16\xad\x2e\x84\x76\x7e\x4d\x30\xf8\xb5\x95\xa1\xbb\x56\x42\x17\x0a\x21\x50\x16\xec\x35\x6e\x21\x43\xb7\x45\xd4\xc1\xd4\x60\xcf\x1e\x87\x94\x73\xf7\x9c\x77\x19\xe8\x5a\xf0\xfc\xe4\x72\x10\x14\xbc\x11\x75\xa3\xd0\x2f\xb5\x9c\xb8\x7d\x59\x44\x9b\xe5\xe9\x7c\xb1\xe2\x4a\x78\xb4\x8f\xe6\x94\x5f\x37\xb2\x4f\x38\x9a\x7b\x72\x9f\xcc\x4f\x7e\xbb\x3c\x5b\x3d\x47\xef\x47\x8a\x99\xb0\x18\x76\xd9\x5e\xf5\x97\xd9\x32\xe1\x5c\x7c\x57\xf7\x1e\x6a\xaf\xfa\x74\x80\x7f\xa5\x6e\x8a\x15\x58\x4a\x8d\xdf\xed\x4e\x60\xe9\x7e\xca\x38\x61\xaf\xa1\x94\x0a\xfb\x1e\xd9\xc9\x4e\x76\xb5\x02\xa9\xad\x2c\xfc\x58\x1c\x9a\x04\x43\x0a\xa1\x34\x54\x3f\x91\x91\xad\x54\xaa\x9f\x7b\xad\xa3\x86\x9a\x96\xc9\xc2\x6b\x61\x6b\xf9\xb5\xf5\x94\xc5\xe1\xe6\xda\x65\x93\x87\xe8\x4e\xea\xf5\xc1\x98\xd2\x6d\x9d\xa1\xe1\x3d\xf8\x60\x72\x0c\xe9\x86\xfc\x50\x92\x22\x53\xdd\x50\xe1\xa7\x9d\x30\xcc\x14\x87\x46\x0b\xc5\x7c\x7b\x8c\x9a\xfd\x6d\x71\x64\xf0\x01\xdf\xfc\xbe\x18\x40\xd7\xd0\x8d\x40\x47\x20\x36\x24\x8b\x0e\x8f\xd4\x39\xef\x1c\xbc\x99\x58\xc7\xb0\x4a\x91\x3b\x28\xa5\x2e\x7a\xdc\x7b\x57\xfe\xe1\x06\x90\x53\x5d\x93\xee\xbf\xf8\x5b\x97\x72\xdd\x11\x25\x86\x29\xba\x7c\xea\x5b\xca\x74\x2f\xf1\x42\x0e\x7b\xe1\xfb\x47\x64\xb8\x42\x9b\x29\x99\xef\x7b\x7a\xf7\x30\xba\xbd\x85\xc6\xf0\x0e\xb2\xef\x0f\x11\x4c\x92\x1b\x1f\x9f\xf3\xce\xc0\x29\xd9\x6e\x53\x85\x28\xfe\xf7\x4f\x3f\xbd\x9b\x06\xfd\x08\xfe\x0f\x5f\x5b\x72\x08\xa1\xad\x1d\xb8\x10\x8d\xfc\x51\xf3\x4f\x9a\x7d\x49\x23\x83\xe3\xf0\x96\xbf\x20\x50\xa4\xd7\x68\x40\x23\x16\xbc\x91\x59\x4e\xc7\xa3\x44\x8f\xdf\x4d\x7e\x9e\xbc\x7d\x3b\x7e\x13\xde\x61\x23\x83\x5d\xf1\x90\xf6\x45\xd1\xb7\xa0\x1d\xba\x00\x84\x29\x76\x1f\x4e\xfe\x0a\x1b\x7c\x0f\x65\x74\x74\x44\x14\xba\xaf\x4d\x1d\xa5\x3e\xa3\xcf\xbe\xe3\xff\x0e\x00\x00\xff\xff\xea\xca\x5c\x16\x84\x10\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x41\x8b\x23\x37\x10\x85\xef\xfe\x15\x8f\xdd\xc3\x5c\xe2\x99\x59\x72\x33\x24\xa7\x24\xb0\x87\x90\x43\x72\x08\x84\xd0\xa8\xd5\x65\xb7\xb0\x5a\x25\x54\xa5\x71\x0c\xfb\xe3\x83\xd4\xed\xf6\xcc\x60\x8f\xdd\xe4\x90\x9b\x51\xab\x5e\x7d\x55\x7a\x2a\x79\x8d\x60\x06\xda\xe0\x27\x8a\x9e\x8f\xf8\x2d\x52\xf8\xbd\x77\x5b\x85\x0b\xdb\x64\x44\x53\xb6\x9a\x13\xe1\xc0\x69\xef\xd9\x74\x2b\xa0\x67\x51\xd9\xc0\xb3\x35\x7e\x30\xa2\x94\x56\xc0\xce\x68\x4f\xa9\xd9\x1a\x5b\xbe\x6d\x8d\x17\x5a\xad\x80\xcf\x38\x10\x02\x51\x87\x17\x93\x9c\x69\x3d\x09\xb6\x89\x07\x70\xa4\x20\x25\xd1\x18\x02\x65\xb4\x04\x17\x20\x96\x23\xad\x80\xc4\x9e\x64\xb3\x02\x80\xf5\xfb\xdd\x45\x39\xb2\x68\xa3\x46\xf6\xf3\xa6\xb1\x90\x36\xb9\xb0\x43\x8e\xd0\x9e\x20\x5d\xa8\x1f\x01\x37\x44\x4e\xda\x14\xd5\xcd\xb4\x84\x29\xe2\x2c\x5e\xb6\xbf\x11\x13\xd2\x1c\x61\x39\x6c\xdd\x0e\x72\x0c\x16\x9d\xa1\x81\x83\x90\x2e\xd1\x0d\xdc\x51\xb3\x4b\x9c\xe3\xbc\xa5\x92\x37\xa5\x15\x9b\x2a\xfc\x36\xef\xd7\xaa\xfa\x4a\xa1\x65\x56\xd1\x64\x62\x63\xb2\xb2\x89\x31\xf1\x0b\xa5\xda\xa4\x77\xfd\x5c\x9b\x20\xae\xf5\x54\x3a\xda\x8d\x87\x5a\xd2\x63\x56\x40\x51\xc0\x49\x62\x49\x19\x97\x21\x2e\x92\x9b\xd0\x21\x0b\x21\x71\x56\x4a\xb5\x5a\x6c\xdd\x75\xd8\x73\x92\xe2\x2e\xea\x6a\x65\x4b\xd8\xc6\xb0\x8b\xed\x1d\x19\x1e\x8f\x83\xff\x18\x95\x76\x4e\x34\x1d\xff\x67\xd8\x89\xe2\x2a\xee\x59\xe5\x40\x6d\x63\x39\x48\xf1\xc0\x7d\x46\x38\x50\x8b\x29\x62\x09\xee\xab\x44\x23\xd2\x67\xfc\xf2\xf5\xcf\x5f\x7f\xc6\x1a\x7f\xf4\x94\xe8\x41\x60\x90\x8c\xa5\x22\xde\x39\x75\x1c\x70\x28\x1f\xea\x1d\xac\x83\x04\xde\xb4\xe4\xe1\x24\x3c\x68\xf1\x9e\x77\xd4\x41\x79\x52\x9b\x1b\x31\x6f\xaf\x96\xed\x72\xbd\xcb\xd6\xe7\x32\x64\xce\x37\xdb\x85\x77\x71\xb7\x2c\xfa\x1d\xb4\x77\x02\x27\x88\x89\x5b\x4f\x83\x51\x67\xd1\x92\x35\xe5\xe0\xb5\xa7\xab\x7a\x31\xf1\x40\xda\x53\x96\xb1\xc5\xb6\x27\xbb\xaf\xd3\x8a\x82\xe4\xb1\xc2\x44\x45\x79\x62\x3e\x38\xed\xaf\x56\x25\xe4\xc9\x2a\x27\xe4\xf8\x64\x5e\x8c\xf3\x65\x20\x3e\x89\xed\xa9\xcb\xf5\xf7\xe3\x74\xe2\xd2\x93\xf7\x1b\x3c\x3c\x65\x49\x4f\xad\x0b\x4f\x6c\xb1\x23\xad\x29\x04\x6b\x8f\x4f\xc5\x27\x1c\x7e\xa8\xba\x9f\xf0\x0d\x07\x8b\xb5\x7f\x98\x8e\x70\x34\x11\xa5\x62\x27\xc9\xfe\x34\xab\x72\x50\xe7\x4f\x6b\x8f\xa2\x1d\x67\x6d\xbc\x0b\x24\x7f\x3d\xff\xfd\xcd\x05\xc5\x8f\xf8\x32\x4b\x68\x72\x24\x1b\x7c\xff\x3c\xad\x74\xe4\xcd\x71\x83\x2f\xcf\xab\x1b\xbe\x7c\xdf\xb3\x9b\xb6\x3c\x07\x2c\x71\xe5\xab\xa8\x8f\x79\x84\xd2\x8b\xb3\xd4\x58\xa3\xc6\xf3\xee\x4e\xa8\xfa\x7c\x8c\x91\x98\x22\x17\x3d\x25\x6f\x93\x5e\x99\x3c\x35\xe9\xbc\xb7\x4d\xbc\xbf\x7b\xa8\x17\xbe\xd3\xea\x89\x73\x14\xb8\x8d\x79\x39\xf1\x45\x46\xa5\x21\x7a\xa3\xff\x01\xf2\xa4\xb0\x98\xf2\x4a\xea\x1b\xa7\x4d\xff\x98\x21\x96\xbf\x19\xf7\x13\x9e\x42\x96\x9c\xef\x1c\xf3\x31\xcd\x38\xe9\x9b\x53\x29\x4b\xa8\xa6\xb7\x65\x0e\x5d\xfe\xc0\x9c\xd3\x5e\xa4\xb4\x6c\xf7\xd1\x69\x93\xdd\x02\xaa\xf9\x95\xbc\xfb\x1d\x99\xd2\xac\xb3\x5b\xfd\x1b\x00\x00\xff\xff\x41\xe4\xce\x7e\x6d\x0a\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x6e\x1b\x37\x13\xbd\xdf\xa7\x18\x28\x01\x72\x93\xfd\x91\x9d\x7c\x01\x08\xe4\xc2\x9f\x7f\x52\xa3\x88\xe3\x5a\x46\xd1\x5e\x15\x14\x39\x92\x58\x73\x39\xec\x70\xb8\x8e\x1b\xe4\xdd\x0b\xee\xae\x2d\xb9\x49\x81\xf6\x4a\x5a\xce\x99\x33\x87\x67\x86\xa3\xbd\xa7\xfb\x33\x97\xf4\xda\xa3\x3d\x23\x73\x87\xac\x60\xa3\x7d\xc2\x4a\x47\xf7\x33\x72\x72\x14\x14\x0c\xcb\xca\x86\xf4\x7f\x17\xec\x89\xb5\x8c\x29\x29\x58\x1e\xbd\x6b\xba\xa6\x6b\x96\xea\xed\x71\x09\xde\xa0\xc9\x9c\xdc\x80\x37\x98\xc8\x0f\xa7\x14\x36\x0a\x5a\x14\xd3\x12\xbb\xad\x0b\x6d\x20\x8b\x2d\x8f\xc1\xc6\x50\xd8\x94\xa4\x33\xea\xb5\x0b\x0a\x8c\xcf\x49\x90\x1b\x4f\x46\xfb\x12\xb8\xbc\x56\xb0\x7c\x77\xd4\x2c\x4b\x91\x65\x65\x47\x65\x85\xd3\x6d\x55\x05\x30\x7d\xaf\x76\xae\xbf\x21\x92\x33\xc7\x68\x84\xf8\x41\x41\x3b\x68\x6e\xbd\x5b\xb7\x13\x22\xed\x5c\xff\x0c\xbe\x2a\xff\x64\xc6\x71\x0e\x07\xb8\x26\x91\xb9\xab\x00\xf0\x33\x9a\x1f\x74\xb0\x1e\xf9\x4a\xf7\xa8\x20\x68\x71\x03\x56\x2e\x4a\x71\x29\xad\x1e\x82\xb9\x46\x76\x64\x15\x2c\x8e\xbb\xb4\xa8\x5c\xaf\xb7\xb8\x17\xb7\x21\xee\xb5\x28\xb8\xfc\x78\xf2\xe1\xfc\xb7\xeb\x9b\xf3\x8b\xcb\x5f\xda\xe9\xe3\xf6\xd7\xeb\xf3\xfa\xe5\x17\x43\x7d\xa4\x80\x41\xbe\xaa\x97\x5f\x86\xc9\xe4\xaf\x15\x80\xd7\x82\x49\x14\x5c\x8c\x0d\xb8\x73\xc1\x2a\xb8\x22\x3b\x73\x57\x77\x79\x8d\x1e\xe5\x84\xb7\xb9\xc7\x20\xa9\x14\x8b\x64\xeb\x5e\x07\xb7\xc1\x24\x75\xd4\xb2\x2b\x87\xf5\xb7\xc6\x47\xb2\xa9\x02\x58\x13\x49\x12\xd6\xb1\x2e\x64\xe6\x49\xf3\x77\x32\x9e\xa0\xcd\x1e\x5a\x6e\x87\x5a\x32\x63\xbd\x2d\x5a\xa7\xd4\x1b\x12\x2d\xf8\xe3\xa4\xee\xd4\x3b\x0c\x72\x8a\x2c\x6e\xe3\x8c\x16\x7c\x2f\x9c\xf1\xf5\x33\xcc\x0a\x79\x40\xfe\x3b\xa6\x02\xe0\x11\x55\x9b\x7d\x64\x2e\xb1\x28\x80\x45\x05\x50\x42\xb5\x75\xfc\x0f\xa2\x0f\x33\x4b\x2f\x43\x69\x59\x6d\x28\x08\x93\xf7\xc8\xb5\x16\xd1\x66\x57\x5b\x2c\x3f\x13\xc9\xab\xc2\xfd\xaa\x02\x28\x0c\xb5\xd7\x6b\xf4\x73\xd5\xf1\x80\xc9\xe3\x68\x01\x07\x14\x4c\x8d\xa3\xb6\xf4\x2f\xef\x55\xd7\xc0\xb8\x75\x14\xde\x47\x76\xbd\xe6\x87\x22\xd3\x53\xb6\x75\x64\x1a\x9c\xc5\x59\xec\x42\xff\x99\x79\xba\xc4\x18\x3d\x74\x7f\x71\x78\x93\x31\xfc\x98\xdb\x8e\x59\xe3\x8b\x59\x54\xbd\x2e\xcf\x64\xb6\x98\x42\x40\x23\x8e\xc2\xa7\x01\x99\x9d\x9d\xbc\xd2\xc6\x60\x2c\x41\xc1\x20\xb7\x0f\x11\x93\x02\x1d\xa3\x2f\x9e\x38\x0a\xed\x10\xec\xe1\x6d\x22\x93\xd0\x3a\x6f\x5e\x1f\x62\x7e\x4f\x14\x8a\xcc\x3d\xc9\xbf\xe2\x28\xf3\x95\xb9\x0c\xf0\x51\xd7\x55\x00\x7f\xc4\xb2\x27\xba\x6e\x96\x5d\x9a\x3f\xbf\x92\xd1\xd9\xc3\xb9\x0a\x28\xf7\xc4\x77\xd7\x3e\x6f\x5d\x98\x9e\x1d\xa3\xdd\x69\x69\x29\x62\x48\x3b\xb7\x91\x9a\x86\x54\xa7\xbc\x0e\x28\xd5\x0b\x98\x13\x26\x3e\x48\xc2\xd9\x08\xb8\xd2\x66\x9b\x0d\x5a\x70\x01\x26\x37\x61\xd9\x74\xcd\xff\x40\x07\x0b\x9f\x56\xe7\x70\xdc\x74\xcd\x11\xdc\xef\x9c\xd9\x55\x2f\xc0\x62\x64\x1c\x87\x05\xbe\x51\x00\x7a\x4d\x03\x36\x70\xbb\x43\x90\x7b\x82\xb4\xa3\xec\x2d\xf4\x5a\xcc\xae\xa9\x9e\xd5\x2f\xbe\xf7\x92\x15\x2c\xdf\xbc\x2d\x17\xff\x8f\xb7\x89\x64\x3f\xce\x4f\xf8\x91\x2f\x21\x0f\x2e\x6c\x2f\xc3\x86\x0a\xf9\xfa\x70\xf3\x76\xe3\xde\xed\xd4\xb2\x3b\x1a\xab\x95\xe0\xd5\x54\x51\x81\x98\xf8\x06\x60\x9c\xb1\x71\x48\x4e\x14\x18\xdd\x18\x96\x6a\x20\x9f\x7b\xfc\xde\xae\x9c\xc7\xee\x49\xdb\xb4\x86\x9b\x29\x21\x55\x91\xe9\xf3\xc3\xf3\xa5\x53\x4e\xea\x9e\x2c\x96\x2f\x28\x03\xfc\xb8\x1d\xe7\x32\x7b\x5f\x46\xae\x9f\x32\x89\x9e\xb0\x11\xf9\x62\xf5\x81\x29\x47\x55\xfd\x15\x00\x00\xff\xff\x85\x26\xf1\x88\x7e\x06\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6f\x1c\xb7\x0f\xbd\xeb\x53\x10\x9b\x00\xb9\x64\xfe\xac\x93\xfc\x02\x08\xc8\xc1\xbf\xd8\x4e\x8d\x22\x8e\xeb\x35\x8a\xf6\x54\x68\x25\xee\x8e\x6a\x8d\xa8\x52\x9c\x71\xdc\x20\xdf\xbd\xd0\xcc\xd8\x5e\x37\x29\xd0\x9e\x76\x47\x7c\x7c\x7c\x7c\xa2\x68\x42\xa0\xdb\x13\x9f\xcd\x36\xa0\x3b\x21\x7b\x83\xac\x61\x67\x42\x46\x65\x92\xff\x19\x39\x7b\x8a\x1a\xc6\xb5\x72\x31\xff\xdf\x47\x77\xec\x1c\x63\xce\x1a\xd6\x47\x6f\xeb\xb6\x6e\xeb\xb5\x7e\xf3\xaa\x04\xaf\xd0\x0e\x9c\xfd\x88\x57\x98\x29\x8c\xef\x29\xee\x34\x34\x28\xb6\x21\xf6\x7b\x1f\x9b\x48\x0e\x1b\x9e\x82\xb5\xa5\xb8\x2b\x49\x27\xd4\x1b\x1f\x35\xd8\x30\x64\x41\xae\x03\x59\x13\x4a\xe0\xfc\x52\xc3\xfa\xed\x51\xbd\x2e\x45\xd6\xca\x4d\xca\x0a\xa7\xdf\x6b\x05\x30\x7f\x6f\x3a\xdf\x5f\x11\xc9\x89\x67\xb4\x42\x7c\xa7\xa1\x19\x0d\x37\xc1\x6f\x9b\x19\x91\x3b\xdf\x3f\x81\x6f\xca\x3f\x59\x70\x3c\xc4\x03\x5c\x9d\xc9\xde\x28\x00\xfc\x8c\xf6\x07\x13\x5d\x40\xbe\x30\x3d\x6a\x88\x46\xfc\x88\xca\x27\x29\x2e\xe5\xcd\x5d\xb4\x97\xc8\x9e\x9c\x86\xd5\xab\x36\xaf\x94\xef\xcd\x1e\x1f\xc5\xed\x88\x7b\x23\x1a\xce\x3f\x1e\x7f\x38\xfd\xed\xf2\xea\xf4\xec\xfc\x97\x66\xfe\xb8\xfe\xf5\xf2\xb4\x7a\xfe\xc5\x52\x9f\x28\x62\x94\xaf\xfa\xf9\x97\x71\x36\xf9\xab\x02\x08\x46\x30\x8b\x86\xb3\xe9\x02\x6e\x7c\x74\x1a\x2e\xc8\x2d\xdc\xea\x66\xd8\x62\x40\x39\xe6\xfd\xd0\x63\x94\x5c\x8a\x25\x72\x55\x6f\xa2\xdf\x61\x96\x2a\x19\xe9\xca\x61\xf5\xad\xf1\x89\x5c\x56\x00\x5b\x22\xc9\xc2\x26\x55\x85\xcc\x3e\x68\xfe\x4e\xc6\x03\xb4\x7e\x84\x96\xee\xd0\xc8\xc0\x58\xed\x8b\xd6\x39\xf5\x8a\xc4\x08\xfe\x38\xab\x7b\x1f\x3c\x46\x79\x8f\x2c\x7e\xe7\xad\x11\x7c\x27\x3c\xe0\xcb\x27\x98\x0d\xf2\x88\xfc\x77\x8c\x02\xe0\x09\x55\xd9\xc7\xc8\x52\x62\x55\x00\x2b\x05\x50\x42\x95\xf3\xfc\x0f\xa2\x0f\x33\xcb\x5d\xc6\x72\x65\x95\xa5\x28\x4c\x21\x20\x57\x46\xc4\xd8\xae\x72\x58\x7e\x66\x92\x17\x85\xfb\x85\x02\x28\x0c\x55\x30\x5b\x0c\x4b\xd5\xe9\x80\x29\xe0\x64\x01\x47\x14\xcc\xb5\xa7\xc6\xc7\x1d\x9b\x7b\xcd\x15\x30\xee\x3d\xc5\x77\xd3\x69\x91\x18\x68\x70\x55\x62\x1a\xbd\xc3\x45\xe8\xca\xfc\x39\xf0\xdc\xc0\x14\x3d\x74\x7e\x75\xd8\xc5\x14\xbe\xcf\x6d\xa6\xac\xe9\xb5\xac\x54\x6f\xca\x13\x59\xec\xa5\x18\xd1\x8a\xa7\xf8\x69\x44\x66\xef\x66\x9f\x8c\xb5\x98\x4a\x50\x30\xca\xf5\x5d\xc2\xac\xc1\xa4\x14\x8a\x1f\x9e\x62\x33\x46\x77\xd8\x49\x62\x12\xda\x0e\xbb\x97\x87\x98\xdf\x33\xc5\x22\xf3\x91\xe4\x5f\x71\x94\xd9\x1a\xb8\x0c\xef\x51\xdb\x2a\x80\x3f\x52\xd9\x11\x6d\xbb\xc8\x2e\x17\xbf\xbc\x90\xc9\xd5\xc3\x99\x8a\x28\xb7\xc4\x37\x97\x61\xd8\xfb\x38\x3f\x39\x46\xd7\x19\x69\x28\x61\xcc\x9d\xdf\x49\x45\x63\xae\xf2\xb0\x8d\x28\xea\x19\x2c\x09\x33\x1f\x64\xe1\xc1\x0a\xf8\x72\xc5\x6e\xb0\xe8\xc0\x47\x98\xdd\x84\x75\xdd\xd6\xff\x03\x13\x1d\x7c\xda\x9c\xc2\xab\xba\xad\x8f\xe0\xb6\xf3\xb6\x53\xcf\xc0\x61\x62\x9c\x06\x05\xbe\x51\x00\x66\x4b\x23\xd6\x70\xdd\x21\xc8\x2d\x41\xee\x68\x08\x0e\x7a\x23\xb6\xab\xd5\x93\xfa\xc5\xf7\x5e\x06\x0d\xeb\xd7\x6f\x4a\xe3\xff\xb1\x9b\x44\xee\xe3\xf2\x7c\xef\xf9\x32\xf2\xe8\xe3\xfe\x3c\xee\xa8\x90\x6f\x0f\xb7\x6e\x3b\xed\xdc\x56\xaf\xdb\xa3\xa9\x5a\x09\x5e\xcc\x15\x35\x88\x4d\xaf\xa7\x09\x9b\x46\xe4\x58\x83\x35\xb5\x65\x51\x23\x85\xa1\xc7\xef\x6d\xc9\x65\xe8\x1e\x94\xcd\x0b\xb8\x9e\x13\xb2\x4a\x4c\x9f\xef\x9e\xae\x9b\x72\x52\xf5\xe4\xb0\x7c\x41\x19\xdf\xfb\xbd\xb8\x94\x79\x74\x65\xe2\xfa\x69\x20\x31\x33\x36\x21\x9f\x6d\x3e\x30\x0d\x49\xab\xbf\x02\x00\x00\xff\xff\x6f\x48\x88\xba\x78\x06\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xdd\x6e\x1b\x37\x13\xbd\xe7\x53\x0c\x94\x00\xb9\xc9\xfe\xc8\x4e\xbe\x00\x04\x72\xe1\xcf\x3f\xa9\x51\xc4\x71\x2d\xa3\x68\xaf\x0a\x8a\x1c\x49\xac\xb9\x1c\x76\x38\xbb\x8e\x1b\xe4\xdd\x0b\xee\xae\x2d\xb9\x49\x81\xf6\x4a\x5a\xce\x99\x33\x67\x0e\x87\x63\x42\xa0\xfb\x33\x9f\xcd\x3a\xa0\x3b\x23\x7b\x87\xac\x61\x63\x42\x46\x65\x92\xff\x19\x39\x7b\x8a\x1a\x86\xa5\x72\x31\xff\xdf\x47\x77\xe2\x1c\x63\xce\x1a\x96\x47\xef\xea\xb6\x6e\xeb\xa5\x7e\x7b\x5c\x82\x37\x68\x7b\xce\x7e\xc0\x1b\xcc\x14\x86\x53\x8a\x1b\x0d\x0d\x8a\x6d\x88\xfd\xd6\xc7\x26\x92\xc3\x86\xc7\x60\x6d\x29\x6e\x4a\xd2\x19\x75\xc6\x47\x0d\x36\xf4\x59\x90\xeb\x40\xd6\x84\x12\xb8\xbc\xd6\xb0\x7c\x77\x54\x2f\x4b\x91\xa5\x72\xa3\xb2\xc2\xe9\xb7\x5a\x01\x4c\xdf\xab\x9d\xef\x6e\x88\xe4\xcc\x33\x5a\x21\x7e\xd0\xd0\x0c\x86\x9b\xe0\xd7\xcd\x84\xc8\x3b\xdf\x3d\x83\xaf\xca\x3f\x99\x71\xdc\xc7\x03\x5c\x9d\xc9\xde\x29\x00\xfc\x8c\xf6\x07\x13\x5d\x40\xbe\x32\x1d\x6a\x88\x46\xfc\x80\xca\x27\x29\x2e\xe5\xd5\x43\xb4\xd7\xc8\x9e\x9c\x86\xc5\x71\x9b\x17\xca\x77\x66\x8b\x7b\x71\x1b\xe2\xce\x88\x86\xcb\x8f\x27\x1f\xce\x7f\xbb\xbe\x39\xbf\xb8\xfc\xa5\x99\x3e\x6e\x7f\xbd\x3e\xaf\x5e\x7e\xb1\xd4\x25\x8a\x18\xe5\xab\x7e\xf9\x65\x98\x4c\xfe\xaa\x00\x82\x11\xcc\xa2\xe1\x62\xbc\x80\x3b\x1f\x9d\x86\x2b\x72\x33\xb7\xba\xeb\xd7\x18\x50\x4e\x78\xdb\x77\x18\x25\x97\x62\x89\x5c\xd5\x99\xe8\x37\x98\xa5\x4a\x46\x76\xe5\xb0\xfa\xd6\xf8\x44\x2e\x2b\x80\x35\x91\x64\x61\x93\xaa\x42\x66\x9f\x34\x7f\x27\xe3\x09\x5a\xef\xa1\xa5\x3b\x34\xd2\x33\x56\xdb\xa2\x75\x4a\xbd\x21\x31\x82\x3f\x4e\xea\x4e\x83\xc7\x28\xa7\xc8\xe2\x37\xde\x1a\xc1\xf7\xc2\x3d\xbe\x7e\x86\x59\x21\x0f\xc8\x7f\xc7\x28\x00\x1e\x51\x95\xdd\x47\xe6\x12\x8b\x02\x58\x28\x80\x12\xaa\x9c\xe7\x7f\x10\x7d\x98\x59\xee\x32\x96\x2b\xab\x2c\x45\x61\x0a\x01\xb9\x32\x22\xc6\xee\x2a\x87\xe5\x67\x22\x79\x55\xb8\x5f\x29\x80\xc2\x50\x05\xb3\xc6\x30\x57\x1d\x0f\x98\x02\x8e\x16\x70\x44\xc1\x5c\x7b\x6a\x3a\x53\xa6\xf5\x51\x74\x05\x94\x30\xe6\x9d\xdf\x48\xe5\xe3\x86\xcd\x7b\x93\x7c\x1e\x5b\x2c\x82\x03\xf5\xae\x4a\x4c\x83\x77\x38\xcb\x5e\x98\x3f\x7b\x9e\xda\x19\xa3\x87\xf7\xb0\x38\xec\x69\x0c\x3f\xe6\x36\x63\xd6\xf8\x76\x16\x6a\x92\x30\x9b\x4d\x31\xa2\x15\x4f\xf1\xd3\x80\xcc\xde\x4d\xae\x19\x6b\x31\x95\xa0\x60\x94\xdb\x87\x84\x59\x83\x49\x29\x14\x77\x3c\xc5\x66\x88\xee\xb0\xaf\xc4\x24\xb4\xee\x37\xaf\x0f\x31\xbf\x67\x8a\x45\xe6\x9e\xe4\x5f\x71\x94\x49\xeb\xb9\x8c\xf2\x51\xdb\x2a\x80\x3f\x52\xd9\x18\x6d\x3b\xcb\x2e\x63\x30\xbf\x97\xd1\xe3\xc3\x09\x8b\x28\xf7\xc4\x77\xd7\xa1\xdf\xfa\x38\x3d\x40\x46\xb7\x33\xd2\xec\x5d\xa6\x21\x57\xb9\x5f\x47\x14\xf5\x02\xe6\x84\x89\x0f\xb2\x70\x6f\x05\x7c\xb9\x70\xd7\x5b\x74\xe0\x23\x4c\x6e\xc2\xb2\x6e\xeb\xff\x81\x89\x0e\x3e\xad\xce\xe1\xb8\x6e\xeb\x23\xb8\xdf\x79\xbb\x53\x2f\xc0\x61\x62\x1c\xc7\x06\xbe\x51\x00\x66\x4d\x03\xd6\x70\xbb\x43\x90\x7b\x82\xbc\xa3\x3e\x38\xe8\x8c\xd8\x5d\xad\x9e\xd5\x2f\xbe\x77\xd2\x6b\x58\xbe\x79\x5b\x1a\xff\x8f\xdd\x24\x72\x1f\xe7\xc7\xfc\xc8\x57\x06\xc9\xc7\xed\x65\xdc\x50\x21\x5f\x1f\xee\xe0\x76\xdc\xc0\xad\x5e\xb6\x47\x63\xb5\x12\xbc\x9a\x2a\x6a\x10\x9b\xde\x8c\x13\x36\x8e\xc8\x89\x06\x6b\x6a\xcb\xa2\x06\x0a\x7d\x87\xdf\xdb\x99\xf3\xd0\x3d\x29\x9b\xd6\x71\x3d\x25\x64\x95\x98\x3e\x3f\x3c\x5f\x3e\xe5\xa4\xea\xc8\x61\xf9\x82\x32\xbe\x8f\x5b\x72\x2e\xb3\x77\x65\xe4\xfa\xa9\x27\x31\x13\x36\x21\x5f\xac\x3e\x30\xf5\x49\xab\xbf\x02\x00\x00\xff\xff\x70\x21\x9f\x04\x86\x06\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginCloudproviderAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x8a\x83\x30\x10\x86\xdf\xf7\x14\x39\x81\x07\xd8\xb7\xa0\xb0\x2c\x2c\xcb\xb2\x7a\x81\x31\x4e\xcb\x40\x4c\xec\x38\x29\x58\xeb\xdd\x4b\xab\x0f\x51\xd3\x42\x9f\xbf\xff\xfb\x87\xf9\x05\x1d\x38\xf9\x6e\x3e\xd5\x38\xaa\x4c\x5f\x02\x63\xee\xdd\x81\x8e\x59\x35\x93\x42\x5d\xd5\x29\x78\x41\x35\x4d\x1f\x7d\xa8\x7b\xc3\xd4\x09\x79\x97\x72\xca\x98\xaf\x4c\x80\x26\xb7\x84\xe9\x53\x5a\x17\x0b\x4c\x3b\x25\x1a\x46\x79\xe1\xcd\x81\x8d\x5b\xbd\xf5\x1a\x63\xef\x03\x1b\xfc\x62\x1f\xba\xbd\xf2\x1f\xe3\xd8\xb3\xde\xc0\xfd\xdd\xbd\xf2\xb3\x90\xd5\x80\x68\x02\x93\x0c\x8f\x9a\x5f\x68\x31\xb1\xe1\x36\x12\xfb\x1d\x53\x0b\x3c\xe8\x33\x90\x85\x9a\x2c\xc9\x50\xa2\xa4\x8b\xfe\x9e\x66\xe3\xc6\x5b\x00\x00\x00\xff\xff\x34\x7d\xff\xaa\x01\x02\x00\x00")

func nodeEtcOriginCloudproviderAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginCloudproviderAzureConf,
		"node/etc/origin/cloudprovider/azure.conf",
	)
}

func nodeEtcOriginCloudproviderAzureConf() (*asset, error) {
	bytes, err := nodeEtcOriginCloudproviderAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/cloudprovider/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/origin/cloudprovider/azure.conf":            nodeEtcOriginCloudproviderAzureConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"origin": {nil, map[string]*bintree{
				"cloudprovider": {nil, map[string]*bintree{
					"azure.conf": {nodeEtcOriginCloudproviderAzureConf, map[string]*bintree{}},
				}},
				"node": {nil, map[string]*bintree{
					"resolv.conf": {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/ansible/service-catalog.yaml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/azure/azure.conf
// node/etc/origin/node/node-dnsmasq.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4f\x6f\xfa\x46\x10\xbd\xfb\x53\xa0\xe5\xd2\x1e\x02\x0e\xf9\x57\x22\xed\x61\x59\x0f\x61\xc5\x62\xd3\xdd\x31\x04\x45\xd1\x8a\x10\x43\xac\x12\x40\xb6\x49\x13\x21\xbe\x7b\xe5\x3f\x60\x12\x48\x55\x35\xbf\x1b\xcc\x7b\x9e\x7d\x33\xef\x0d\x20\x77\x8c\xcb\x7a\x40\x37\x9b\x4a\xad\x37\x8e\x93\x20\xaa\x75\x96\x71\xb2\x18\xbf\x06\x95\xed\xd6\xca\x08\x52\x68\x04\xd7\xf4\x01\x94\xf1\x95\xd4\xf4\x25\x49\x56\xf1\x6d\xbd\xbe\xd9\x54\x7e\x0b\x17\xcf\xc1\xfb\xfe\x5b\xd1\x8f\x2b\xf6\xef\x35\x9d\x44\xe1\x62\x56\xd9\x6e\x6f\x1b\x17\x7f\xd8\x79\x17\x87\x21\x33\x8e\x50\xb4\xfe\x36\x8e\xea\xf3\xf0\xa9\x1e\x24\x93\xe7\xba\x55\xcd\xd0\x21\x93\x19\x48\x48\x51\xd0\x2e\xeb\xeb\x8e\x87\x86\x7b\xbe\x8b\xf4\xdc\xb6\xed\xa2\x51\x07\x98\xc2\x16\x30\x34\xc2\x45\x50\x03\x26\xe9\xd5\x0e\x03\x09\x1c\x85\xe7\x1a\x14\x3d\xf0\x7c\xa4\x8d\x3d\x54\x4c\xc1\xa5\x00\x17\xff\xc7\x1c\x37\xcd\x42\x59\x8f\xdd\xef\xd5\x69\x7a\x75\x50\x1d\x32\x59\x16\xb8\xa7\x34\xb5\x2c\xab\xfa\x30\x99\xaf\xd3\xa6\x8f\xb9\x0e\xe1\x0a\x14\x4c\x1a\xe6\x0c\x40\xa1\xd0\xf0\xd3\xc5\xee\x1a\x72\xe9\x6b\x04\xf5\x8d\x95\xbf\xa4\xb7\xd1\xc8\x10\xe8\x22\xf8\xfb\x34\x8c\x5e\x17\x5c\x9a\xfa\x7a\x56\x0c\x7d\x76\x5e\xac\xc3\x11\x9a\x7b\x03\x50\x23\xfa\xb5\x60\xb4\x1a\x1c\x17\xdb\x4c\xca\x16\xe3\x5d\xba\x8a\x96\xef\x1f\x47\x70\x5f\x79\xf7\x23\x9a\xab\x28\x37\xf9\x73\x73\x35\x2a\xc1\xd1\x28\xe0\x9e\xdb\x16\x77\x86\x77\x80\x77\x29\x99\x8e\xe7\x71\xb0\x8b\x26\xf3\xd1\x33\xdc\xeb\xf5\x59\x9e\x35\x05\x08\x6e\xfa\x8b\x12\x7b\xc7\x01\x97\xb5\x24\x98\x41\x83\x92\x24\x5a\x07\x24\x57\xfa\xa7\xef\x21\x33\xe9\x58\xe0\x3a\xa6\x35\x42\xd0\xf4\xb2\xd1\xbc\x6c\x5e\xdf\x34\x9a\xd7\x69\x56\xb2\x69\x1f\x8b\x26\xf9\x90\xcb\xe9\xf4\xf0\xbf\x69\x33\x21\x7d\x05\x66\xc8\x04\x52\x72\x65\xdb\xfb\x47\x73\x5c\x41\x5b\x81\xee\x94\xd7\x41\x2e\xec\x23\x92\x93\xda\xb6\x3b\x12\x72\x7e\x84\x0f\x95\x40\x28\x09\xa7\x5e\x61\x4e\x89\xdb\x24\x15\x1f\x07\x93\x75\x14\x26\x1f\x45\xd2\x51\xa5\xa9\x70\x0c\x67\xa6\x2d\x24\xd0\xf4\xe0\xf3\xa3\x9f\x8c\x6b\x93\x28\xc9\x59\x85\x67\x1c\x14\xa6\x9b\xed\x7c\x5a\x58\x56\xfd\xf2\x71\x1c\x44\x6f\x41\x54\x36\xe8\xc2\xe8\x1b\xca\x5f\xc1\xc7\xa1\x65\x28\xf5\xde\xc9\x7c\x92\xf4\xf0\xfe\x9b\xca\x8c\xfa\xaf\x52\x73\xc6\x09\xbd\xab\xe0\x50\x6d\x46\x3b\x21\x39\x63\x95\x82\x33\xda\x91\x6a\xab\xfa\x30\x5f\xce\x66\xe1\x62\x56\xac\xd8\x81\x96\x7f\x47\x49\x7b\x0f\xaf\xa2\xe5\x34\x9c\x67\x84\x4f\x41\xec\xf7\x95\xd7\xfe\x92\xe3\x1e\xa4\x61\xd7\x94\x3c\x8d\xe3\x70\x42\xac\xaa\x55\x7d\x18\xaf\x93\x97\xc7\x72\x69\x9d\xe2\xa4\x49\x1c\xbe\xae\xe6\x01\xb1\xfe\x09\x00\x00\xff\xff\x41\xcc\xdb\x7e\x32\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 1586, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 53, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x7b\x6f\x1b\xb9\x11\xff\x5f\x9f\x82\x08\x0e\x48\x52\x74\x57\x92\x9d\xe7\x02\x45\xa1\xf3\x39\x17\xe1\xec\x44\x95\x9c\xa2\x40\x5d\x14\x14\x39\x5a\x31\xe2\x92\x7b\x7c\x28\x56\xdc\x7c\xf7\x82\x8f\xdd\xe5\xea\x11\xa7\xb9\x2b\xce\x09\x6c\x89\xfc\xcd\x70\x38\xef\x21\xa6\x15\xd3\x9a\x49\x71\x21\xc5\x8a\x95\xc5\x00\xa1\x9a\xdb\x92\x25\xdf\x11\xfa\xd1\x32\x4e\x7f\x82\x15\xb6\xdc\xe8\xb0\x84\x10\xf1\x00\xab\xb0\x61\x52\x34\x8b\x08\xe1\x9a\xfd\x1d\x94\xe3\x58\xa0\xed\xb8\x5d\x06\xb1\x2d\xd0\x3f\xff\xd5\x7e\xdf\x30\x41\x8b\x3e\xe3\x70\x62\x8b\x50\xa0\xa5\x55\x04\x74\xc7\x1b\x21\xce\x2a\x66\x74\x81\xee\xbf\x24\x8b\x0a\x7e\xb5\xa0\x93\x65\xcf\xf6\xfd\x16\x94\x62\x14\xbe\x53\xe0\x44\xc0\x96\x53\x22\xe1\x4c\xd2\x99\x02\x0d\xe6\xfb\xb8\x53\xa6\xf1\x92\x43\x81\x56\x98\x6b\xd8\x3b\x34\x2a\x64\xd2\x37\x8d\x07\xc9\x1a\x84\x5e\xb3\x95\xc9\x99\x1c\x4e\x2b\x5c\xc2\x4c\x72\x46\x76\xdf\x69\x94\x3b\x20\xd6\x21\xe7\x96\xa7\x7a\xce\x50\x85\x0d\x59\x7b\xfe\x13\x21\xa4\xf1\xec\x7a\x86\xc8\xd0\x06\x76\x05\x62\x0e\xa2\xf3\x9e\x58\x14\xc4\x2e\x6b\x59\x27\x34\x08\x6d\x31\xb7\x50\xa0\xc7\x46\x59\x78\x9c\xec\x08\x5c\x41\xd1\x89\x93\x51\x10\x0c\x68\x02\x90\x62\x7e\xcc\x1d\xb2\xd6\x4b\x0a\x54\x4b\xaa\x4f\x6c\x2d\x9d\x15\x75\xcf\x63\x3e\x02\x31\x05\x72\x72\x24\xcb\x7a\xc3\xea\xf7\xfe\x24\xee\xe5\x78\x83\x19\xb7\x0a\xf6\x70\xc1\x48\x89\xf2\xa3\x7d\x70\x59\x2a\x28\xb1\x91\x2a\x89\x25\x25\xef\x76\x17\x9c\x81\x30\x53\xb1\x92\x41\x76\x02\xca\xbc\x61\xce\xfa\x1d\x49\xb6\x52\x52\x98\xcc\xe3\x73\xa2\x8c\x07\x6e\x60\xf7\x55\xdc\x06\x76\x03\x5c\xb3\x2b\xd8\x02\xd7\xc5\x20\x73\xb6\xdd\x33\x35\xb6\x66\xdd\x89\x13\x23\xe5\x2d\x60\x0a\x2a\x0a\xe3\x85\xbb\x98\x14\x28\xe1\x9c\x11\xdc\x0a\x11\x01\xb2\xaa\xa4\x78\x87\xab\xc6\x00\xd9\x09\xa1\x06\xc1\xb1\x8c\xc2\xe1\x94\x99\x82\x15\xbb\xeb\xa8\xfe\x91\xcd\xa1\x92\x06\xb2\x4b\x87\xc9\xfc\x6a\xa9\xa4\xad\x03\xfc\x10\xf7\xb3\xdb\xf4\x8b\x56\x83\x72\x9e\x72\x0a\xf9\x41\x83\x1a\x10\x29\x8c\x92\x9c\x43\x62\x05\xe0\x40\xba\x80\xe0\x92\x6c\xde\x79\x87\x6b\xdd\x36\xab\xb0\x36\xa0\xb2\x8e\xd8\x79\x8b\x06\xb5\x65\x04\x16\xee\x8f\x28\x2f\x40\xc5\x60\xd7\xac\x14\x8d\xfa\x52\x6b\x46\x7c\x16\xf6\x5b\x05\x26\x76\xdc\x43\x38\xfb\x25\x47\x16\xe8\xf1\x9f\x1e\x0f\x88\x54\x7a\xc2\xb9\xfc\x04\xf4\xbd\x62\x25\x13\xde\xb2\x4f\xfe\xca\x9e\x0e\x87\xe3\xb3\x97\xb7\xf9\xc8\xff\x1f\x3f\x29\xfe\x73\xfb\xf9\x69\xbb\xc5\x25\xc1\x7c\x2d\xb5\xd9\x5b\xbf\xbf\x47\x7f\xb3\xd2\xc0\x35\x18\x8c\x9e\x30\x41\xe1\x0e\xe5\xd7\xfe\xba\xf9\x74\xa6\xd1\xe8\x69\xbe\x30\x8a\x89\x12\x7d\xf9\xb2\x47\xba\xb1\x4b\x50\x02\x0c\xe8\xdb\x9c\x86\x9c\xf4\x30\xe2\x36\xd7\x5b\x72\x9b\x13\x6e\xdd\x11\xb7\xb9\x97\xeb\x24\xd9\xd7\x84\xcd\x2f\xef\x8c\x33\x38\x0f\xd2\xbe\x95\xda\x38\xeb\x1f\xca\xd9\x9a\xf1\x94\x98\x7d\xb6\xf1\xf2\xff\x0b\x3f\x7f\xa9\x6f\xbc\xfb\x1e\x6c\xfc\xf2\xec\x36\x3f\x3f\x6e\xb3\x13\x07\x3d\xa0\xbd\x96\x2a\xae\x53\xa1\x3b\x57\x5f\x32\x41\x27\x94\x2a\xd0\xba\x40\xa3\xdc\xff\x2b\x5e\x8d\x9e\x9f\xc7\xbd\x77\x60\x3e\x49\xb5\x29\x90\x21\xf5\xb3\x01\x18\x42\xfb\xd9\x89\xe0\x02\x85\x60\xc8\xdd\x66\x97\x08\x3a\x37\xef\x6d\x7b\xe2\x08\x69\xdd\xfc\x08\xc2\xb9\x3a\x42\x56\x71\x1f\xb6\x19\x5a\x1b\x53\xeb\xc2\x9b\xe6\x88\x41\x8a\xb3\xf3\x97\xaf\xbd\x74\x0b\x23\x15\x2e\xa1\xbb\x60\xa7\xf6\xb8\x15\x12\x4c\x91\x6c\xe4\x4c\x1e\x03\xf6\x2b\xa0\xd3\xe2\xc2\x69\x71\x8f\x4d\x5a\xca\x8e\xc0\x52\x26\xbe\xf8\x75\x92\xad\xa4\xaa\xb0\x29\xd0\xcd\xe5\xf5\x6c\x7a\x3d\xf9\xf9\xf2\xc7\xc9\xe2\x32\xfb\xe1\x9e\xc8\xaa\x96\x02\x84\xf9\x52\xfc\x70\xbf\x0d\xf4\xae\x4f\xe1\xd8\x80\x36\x4d\x0b\x10\xaa\x4a\x50\x45\x2c\x28\xee\x06\x1c\xcc\xa1\x81\x08\xce\x96\x56\x50\x0e\xa7\x6c\x13\x29\xbf\x6e\x9e\x3d\x50\xb0\x50\x2d\x95\x29\xd0\x78\x74\xf6\x7c\x34\xe8\x34\x98\x8a\xe5\x84\xc0\x35\x73\x59\x11\xd4\x44\x95\xb6\x02\xd1\x74\x85\xca\x0a\xc3\x2a\xc8\x48\xd2\x3c\x66\x0e\xad\x87\x1a\x8c\x61\xa2\xd4\xf9\xe6\x95\x33\xd0\x70\x3b\xc6\xbc\x5e\xe3\xf1\x5f\xda\xda\xaa\x83\x86\xb3\x25\x26\x1b\x10\xb4\xa1\x76\x5e\x70\xde\x03\x54\x40\x19\xce\xcc\xae\x86\xee\x84\x9a\x33\xe2\xbb\x94\xe1\x56\xd0\x3c\xf1\x85\x5a\x49\x23\x97\x76\x15\x6b\x99\xb4\xd4\xd5\xa9\x2d\x6b\x0b\x60\x86\x1e\xe1\xcf\x56\xc1\xa3\x04\xd1\x97\xff\xd1\x10\x0c\x19\x7a\x50\xf8\x9d\xbb\x7d\x87\xef\x92\xf7\x9e\x22\x62\x00\xfb\x44\xcf\x44\x99\x39\x0b\x65\x2b\xa7\xfd\x1e\x4f\xe9\x13\xfc\x30\x18\x64\x18\x62\xed\xd1\x51\x06\x1b\xd8\x7d\x0b\xfd\x06\x76\x8f\xfe\x2f\x37\xad\xa2\x07\x58\xe1\xdc\xa3\x5d\x98\xce\x0a\x74\x7f\xff\x50\x5d\xf1\x7e\x45\x2f\xb7\xcc\x57\xe1\x1b\x56\x81\xb4\xa6\x40\xc2\x72\xfe\x70\x8f\x14\xbd\x35\xf6\x25\xa9\x43\x1f\xba\x74\x0f\x14\x1c\x5a\x93\x35\x50\xdb\xb3\x50\x73\x70\xbb\x15\x1c\x3b\x70\x3a\xa2\xd7\x16\x97\x7f\xd4\xbe\xa1\x8d\x65\x5c\xbf\x93\x14\x66\x52\x99\x39\x16\xa5\x6b\x6b\x1f\x27\x7b\x0b\xbb\x14\xe0\x74\xf5\xf2\x2c\x3f\xf7\x69\x78\x38\x7e\xe1\xf6\x5d\x33\x4d\x1c\x65\x68\xa6\xdc\x50\x14\x95\xeb\xc5\xf6\x0e\x04\xb1\xf2\xfd\xd2\xfa\xf1\x45\xec\xc2\x84\x08\xad\xcc\xde\x74\x83\x09\x81\xda\x6d\x1b\x10\xe6\x66\x57\x3b\xc6\xdf\x10\x14\x7f\x4e\x31\xf1\x72\x08\x2d\xad\x72\x79\xe9\xd9\x68\x34\x88\x33\x45\xc3\xf5\x9b\x98\x7a\xa2\x5f\x6b\x5d\xa0\x33\xcf\xe1\xf0\x32\xee\x53\x4c\x26\x41\x69\x6d\xd2\xbd\x92\xb2\x76\xf1\xff\x07\x5c\xf7\xc5\x6f\xbe\xee\xb9\xe7\x70\x70\x97\xf4\xb6\xfb\x1d\xa7\x67\x18\x62\x30\x7a\xc1\xcc\x2e\x39\x23\x1f\xe6\x57\x45\xaf\x46\x9e\xec\x85\x8a\xa4\x82\x3a\x5f\x74\xe1\x26\x42\x91\xef\xf2\x75\xcc\x26\xb1\xf8\x5f\x4c\x7f\x9a\xbb\x1c\x9f\x8f\xcf\x5e\x05\xc7\x7c\x76\x80\x89\x65\x9a\x30\xaa\x0e\xa1\x08\xb9\x46\x33\x78\xf8\x15\x88\xd2\xac\x0b\xf4\x3a\xb1\xf4\x74\x96\x9c\x14\x39\xc5\x5e\x64\xe8\x54\x74\x9c\x3a\x4a\x3d\xf3\xcf\x0f\xa1\x41\x57\x40\xd7\xd8\x74\x1d\x4f\x26\xb7\x3a\xd3\x9e\xb2\x0b\xb5\xfe\xad\x7a\xe1\x26\xfb\xe3\x0f\xd6\x1a\xcc\xef\xa0\xe0\x21\x91\x42\x4b\x0e\xc3\x81\x9b\x5d\xb0\x77\xd4\x36\x8b\x56\x60\xd6\x92\x16\x08\x5b\xe3\x1a\x08\x46\x41\x18\x66\x76\xb3\x98\x8a\x1b\xc5\xae\x31\xe7\xe0\xd3\x46\x5b\x00\xb9\x2c\x99\x48\xbe\x57\xb8\xae\x99\x28\xaf\x23\x43\xc2\x31\xab\x06\xdd\xb8\xbc\x36\x35\xd6\xfa\x13\xfd\xb7\xbb\xa4\x5f\xef\xa7\xfb\x13\x63\xff\xea\x54\x9a\x6b\xf8\x0d\xd2\x31\xf7\xed\xcd\xcc\x2f\xfa\xdf\x52\xd1\xe9\xde\x75\xba\xd2\x30\x39\xec\x4b\x7e\x3f\x8f\x6e\x78\xfd\x56\x2e\x1a\xf6\x1e\xbb\xda\xa5\x6b\x7c\x37\x29\x61\xe1\x82\x91\xba\x58\x6e\xd2\x41\xdc\x0e\xfe\xa8\xb5\x48\x17\x17\x40\x14\x18\x7d\xba\x70\x04\x58\xa6\x03\x2e\xdf\xe1\xca\xd5\x1d\x23\x37\xd0\x13\xc1\xa5\x33\xad\x6f\xdc\xf2\x9e\x18\xaf\x5e\x34\x59\xd8\x19\x59\x2a\xf6\x19\x8e\xc1\x9e\x8f\x46\x83\x1a\x5b\xed\xf2\x4c\x37\x4d\x86\xc6\xb2\x4e\xde\x28\xfc\x84\x20\xa5\xd1\x46\xe1\x3a\x3c\x5e\x9c\x14\x3e\xd0\x35\x25\xaf\x0d\xc1\xa9\x58\x29\xac\x8d\xb2\xc4\x58\x15\x6a\x58\x8d\x49\x6f\x98\x66\x0e\x92\xd2\x2c\xd6\x58\x01\x6d\x5f\x70\x8e\x11\x0d\x6a\x25\x3f\x02\x49\x22\x29\x4e\x44\xae\x52\x2e\xfc\x00\x2f\x55\x81\x84\xa4\x90\x29\xc9\x21\xef\xb5\xfb\x43\xd7\x63\x5b\x03\x4d\x33\x19\x99\xcd\xc3\x73\xc7\x35\x68\x8d\xdb\x02\xdd\xdf\xbb\x81\xaa\x76\x8d\x78\x5b\xbd\x89\x55\xcc\xec\xdc\x00\x4e\xb0\x3b\x32\x44\x22\xd1\xed\x4a\x2c\xf6\x7a\x54\x0c\xcf\x9a\xcd\x2b\xbc\x04\xae\x67\xa0\x66\x81\x79\x81\x9e\x87\x17\x0b\x46\xf7\xe9\xc6\xa3\xe6\x27\x1b\xbf\x6e\x7e\x86\x7e\x75\xa0\xa4\x75\x3d\x72\xa7\x03\x6d\x97\x54\x56\xd8\x65\x05\x37\x55\xcc\xdf\x7f\xb8\xb9\x9c\x4f\x67\xb9\x60\xb5\x1b\x4f\x62\x02\x9c\x10\xe2\xfa\xb2\x8e\xcc\xbf\x92\x06\xe7\x9c\xc3\x0a\x14\x08\x02\xba\x7b\x6b\xac\xb0\xc0\x25\xd0\xf6\x31\x27\x6b\x74\xed\x3f\xfb\xc7\x32\x1f\xd8\x6e\xbd\xe6\x72\xf7\x40\x94\xd7\x8a\x6d\xb1\x81\x5f\xf6\x1e\x39\x70\x90\xca\x15\x4a\xbf\xdf\x0c\x18\x3e\x1b\x44\x70\x3c\xfe\x80\xc2\x63\x3c\x81\x0e\x8f\x2f\x4d\x63\x78\x74\xbc\x3d\x1a\xe9\x87\xc3\xee\x91\xa6\x52\xfb\x21\xa6\x99\xa2\xda\x97\xb0\x76\xe8\xdd\xef\x2f\x23\x3e\xdc\xa4\xc2\x77\xd1\x89\xf4\x54\xbc\xe1\xac\x5c\x9b\x10\x89\xed\x3b\x5b\xec\x74\xfb\x49\x65\x2b\xb9\xad\x92\xb1\x91\xee\x04\xae\x18\xf1\x09\xd5\x65\x0b\x26\xca\x4b\x81\x97\x1c\x68\x2c\x05\xff\x0d\x00\x00\xff\xff\xd2\xff\xdf\x4f\xa3\x17\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 6051, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 1893, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x16\xa5\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x5a\x85\xda\x5a\x25\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x24\x15\xae\x79\xc9\x48\x0a\x00\x01\x00\x00\xff\xff\x58\x97\xb9\x86\x74\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 116, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x6f\x53\x1b\xbf\x11\x7e\x9d\xfb\x14\xfb\x3b\x68\x1c\x32\xd1\x1d\xa6\x0d\xe9\x5c\xe3\x74\x4c\xb8\x14\x3a\x80\x19\x4c\x33\x7d\xd1\x19\x8f\x4e\x5a\xdb\x8a\x75\xd2\x55\xd2\x19\x5c\xc2\x77\xef\xe8\xfe\xd8\xc6\x98\x4e\x42\xc3\x2f\x79\x01\xa7\x5b\xed\xb3\xcf\xee\xb3\x2b\x1d\x3b\xbf\xc5\x99\x50\x71\x46\xed\x14\xc8\x6d\x10\xec\xc0\xf5\xe0\x78\x90\x00\xd7\xe0\xa6\xc2\xbe\x03\xaa\x38\xe4\xda\x20\xbc\x31\x38\x11\xd6\x99\x05\x30\xad\xac\x96\xf8\x0e\xa8\xcd\xf6\xde\x81\x9b\x22\x14\x46\x17\x68\xe0\x86\x2e\xbc\x8b\x1b\x84\x09\x3a\x08\xb9\xa0\x12\x1c\x2b\x12\x90\x5a\xcf\xca\x02\xc6\x5a\x47\x48\xad\x2b\x6d\xc4\xa4\x2e\x39\x2d\x8a\x88\xfe\xa7\x34\x18\x31\x9d\x83\x56\xd0\xdd\x8f\xfc\xff\x6e\x37\x79\xff\xc7\x04\x0c\x52\x1e\xec\x40\xc9\x0b\xe8\x7e\x38\x88\xba\x1f\xa2\xfd\xe8\x20\x79\x7f\x78\x78\x78\x40\x3e\x3d\x36\x4d\x40\x69\x30\xba\x74\x08\x4e\xc3\x54\x5b\x07\x68\x8c\x36\x36\x04\xea\x82\x1d\xb0\x8e\x1a\x47\xca\x22\x81\x1b\x2a\x1c\x94\xca\x09\xe9\xa3\xb7\x08\xb6\xcc\xac\xe0\x18\x05\x37\x53\x21\x11\x7e\x03\xcd\x60\x8e\xc6\x0a\xad\xe0\xf5\xa7\x98\xe3\x3c\x56\xa5\x94\x7f\x01\xae\x03\x00\x2b\x11\x0b\xe8\x06\x5c\x2b\x0c\x02\xcd\xa0\xa0\x8e\x4d\x7d\x12\xbe\x21\x73\xc0\x71\x4c\x4b\xe9\x80\x14\xd0\xb9\x0b\x73\x74\x94\x53\x47\xc3\xe4\x2e\xa4\x4a\x69\x47\x9d\xd0\xca\xfa\x47\x5d\xa0\xb2\x53\x31\x76\x91\xd0\xb1\xd2\x1c\x89\x45\x89\xcc\x69\x13\x26\x10\x86\xf7\xf7\xf7\x1d\x9f\xce\x2f\xa7\xff\x3c\x4f\x81\xc0\xf5\x54\x58\xb0\x53\x5d\x4a\x0e\x19\xc2\x94\x2a\x2e\x91\x43\xb6\xa8\x4a\xb0\x74\x46\xa8\xb2\x22\x93\x08\x85\xa4\x8b\x4c\xeb\x99\xf5\xe9\x40\x65\x4b\x83\xc1\x0e\xb4\xff\x28\x70\x61\x2a\xb0\x05\x08\x07\x0a\x91\x57\x86\x37\x46\xd4\x09\xc4\x5b\x61\x9d\x85\x0c\xc7\xbe\xfc\xd4\x39\xcc\x0b\x27\xd4\x64\x69\xb4\xe6\xcc\x69\x10\x2e\xc8\x67\x5c\x18\x4f\x3b\x46\xc7\x62\x6d\xc4\x44\xa8\x38\xa7\xd6\xa1\x89\x15\xcd\x91\x8f\x18\x1a\x27\xc6\x82\x51\x87\xd6\x53\x3b\xc6\x42\xea\x3a\xfe\xaa\x70\x06\x0c\x96\xd6\x83\x18\x94\x38\xa7\xca\x41\x41\x8d\xb3\x30\x36\x5e\x20\x9b\x14\x83\xfe\xc5\xf0\xf4\xe8\x2c\x1d\x5d\x0d\xce\xd2\xe1\xe8\xb2\x7f\x7d\xd2\x8b\x4b\x6b\x62\x3b\xa5\x06\xe3\xc6\x2a\x7e\xb4\x2f\x36\x5a\xa2\x8d\xa1\x79\x24\x6d\xa6\x80\x30\x90\x9a\x51\x09\x95\x2a\x89\x66\x05\xe1\x55\x88\xd1\x22\x97\x40\x44\xb3\x5e\xd9\x90\x9a\x19\x11\x6a\x8e\xca\xa7\xd1\xdb\x54\x72\x60\x06\xa9\x43\x20\x63\x20\xf0\xf1\x63\x27\x1d\x7c\xe9\x04\x33\xa1\x78\x02\x97\xb5\x44\x02\x5a\x88\xaf\xb5\xbc\x12\x98\x77\x83\x56\x23\x49\x00\xe0\x13\x95\xc0\xac\xcc\xbc\x1a\xcc\x5c\x30\x24\x8c\x3a\x2a\xf5\x24\x00\x58\x13\x90\xb7\x05\x78\x5a\x42\x5e\x41\x41\x3a\xf8\xb2\x1e\x91\x45\x66\xd0\xc1\x04\x15\x1a\xc1\x80\xa8\xad\x38\x40\x0b\xe1\x97\xd0\x10\x6b\x25\xfc\x2b\x00\x20\xc4\x17\x80\x8c\x85\xc4\x9e\x93\x36\x62\xc6\xf5\xd6\x8b\xbc\xe1\x21\x5e\x7a\xf0\x96\x5b\x3d\xcc\x70\xf1\x83\x1e\x66\xb8\x78\x06\x87\x8d\xe7\x86\xc9\xab\xff\x8b\xc8\x96\xe2\xfa\x04\xaf\x17\x93\x16\xa2\x99\x93\x55\x95\xa2\xd9\x9f\xad\xaf\xcc\xbc\x9b\xa1\xa3\xdd\x46\x05\xfd\xcb\xd3\x61\x8d\xb3\xa5\xf2\x8d\x69\xd4\x44\xd2\x04\xd2\x38\x0a\x6c\x81\xcc\xdb\x32\x7a\x54\xfa\xf6\x4f\x60\xf7\x4d\x46\x2d\x1e\xfe\x09\xc8\xcd\x3e\x7c\xfc\x5f\x5c\x18\xf5\x24\xf6\x02\x80\x89\xd1\x7e\x0c\x6e\x87\x68\x5e\x5f\x1a\xa1\x8d\x70\x8b\x73\xa1\x44\x5e\xe6\x09\x1c\xec\xfb\xd1\x57\x6f\xa9\xc5\x57\x07\xbc\x4c\xd1\x72\xcd\x16\x94\x3d\xad\xe1\xf9\x4a\xf8\x75\x52\x96\x4b\x2d\x64\x02\xdd\xfd\xa5\x74\xdb\xa9\xba\xd5\x5b\xfd\x9e\xa1\xb5\xbe\x20\x3f\xd1\xfa\xcb\xf5\x51\xe3\x72\xd4\x66\xc9\x4b\xc3\xc6\x1e\xed\x61\x7a\x46\xd5\xc6\x51\x26\x14\x17\x6a\x62\xab\x81\xf0\x1d\x1e\x0a\x62\x3d\xde\xe6\x14\x78\xe1\x10\x17\xd6\x61\xfe\xa3\xa1\xd1\xd2\x4d\xc1\x20\xd3\x8a\xf9\x53\xee\xd7\x86\xb3\x7a\xdf\x26\x8c\xc9\xd2\x0f\xc8\x6a\x7b\x35\x1b\x7d\x08\x3c\x87\x42\x4b\xc1\x16\x40\x39\x27\x96\x31\xe2\x34\x29\x2d\x9a\xea\xc0\xce\x75\xa9\x3c\xf0\xa2\x14\x1c\x6a\x72\x49\x03\x47\x19\xf3\x2f\x93\x6d\x3a\x48\x36\xbb\x7d\xa5\xc9\xc7\x98\x4d\x58\xc4\xc7\xb5\x04\xa7\x3c\x17\xea\x67\x10\xb7\x97\x77\xc3\x2a\x5a\xd0\xbc\x19\xa0\x05\x7c\xee\x8f\x4e\xfa\xc3\x93\x5e\xf8\xb3\x1d\x0b\xdf\xc1\x4e\x69\xd7\x96\x39\x7c\x07\x56\x3a\x20\xbc\x03\x1d\x20\xe3\xee\x5e\xd8\x3a\x4f\xaf\x3f\x1f\x8f\x86\xe9\xd5\xd7\xf4\xaa\x17\xee\x9e\x0c\x86\xd7\x17\xfd\xf3\x34\xac\x46\x5e\x01\xa7\xe7\xfd\xbf\xa5\xbd\x70\xb7\xfa\x39\x3a\xea\x0f\xd3\x47\x7c\xe6\xbb\x5f\xd3\xab\xe1\xe9\xe0\xa2\x76\xb9\x4d\x3e\x46\x4b\xa9\x4b\xe7\xef\x51\xae\xb4\x4f\x4e\x5e\x4e\x31\xd7\xca\xa2\x5b\x9b\x0c\xbf\xe8\x54\x5c\x69\xd3\x5f\x46\x24\x75\x2b\xf4\xcc\xe8\x59\x35\x82\x9e\x7b\x44\x3e\xaf\x49\xdb\x38\x96\x4d\x51\xc7\xd1\xf4\xc4\xea\x20\x6d\xed\x5a\x45\x3c\x51\x95\x27\x68\x3d\xac\x8e\xdf\x7b\x31\x38\x4e\x47\xc3\xf4\x2c\xfd\x7c\x3d\xb8\xea\x75\xee\x42\x7f\xea\x68\x15\x26\xa1\x50\x63\x43\xc3\xfb\x8e\x37\x7c\x62\x3e\xfd\x72\x9e\x26\xa3\x6c\x83\x62\x05\xfd\x78\xe0\x90\xa0\xb9\x62\x3b\x53\x62\x73\x9d\x7e\xa1\xa0\x9e\xc8\x25\x79\x70\x3e\xb7\xe5\x68\x3b\xf4\xe8\x1f\x17\xc7\x67\x69\x6f\xad\x45\x61\xa3\x47\x9b\xfb\x6c\xeb\xd4\x8a\x89\xaa\x6f\x07\x7b\xb5\x9f\xcd\x9c\xc3\xeb\xd7\x90\x19\xa4\xb3\xd5\x87\xc3\x7e\xf3\xe5\x70\xde\xff\xfb\xe0\xaa\x29\x6c\x2f\xdc\xbd\x6b\x7e\xfd\x43\xf4\xf6\x3e\x0c\xc6\xda\x80\x27\x02\x42\x3d\x6f\x4c\xe3\x2d\xcd\x0b\xbf\x54\xa7\x63\xf9\x38\xdf\x5d\xc7\x8d\x79\xb6\xac\x9c\x8d\xdf\x46\xdf\xac\x56\xd5\x04\x80\x17\x45\x15\x39\x9d\x20\xb1\xce\x20\xcd\x6d\xfc\x96\x98\x29\xca\x0f\x2d\xf8\xab\x97\xc5\xfe\x77\x29\xd8\xac\xfe\x18\xdc\xc2\xfc\x85\xc1\x6f\x0b\x4a\xed\x8a\xf8\xef\x8a\xba\xc9\xb6\xea\xbf\x57\x6b\x72\x55\xab\x61\xe9\xb5\xbb\xeb\x9d\x36\x5a\x6d\xff\x30\x50\x68\xeb\x23\x59\xd4\xdf\xd0\x53\x34\x08\x5e\xa9\x4c\xab\x39\x9a\x09\x2a\x86\x7f\x0d\xfe\x1b\x00\x00\xff\xff\x44\x79\x9b\xfb\x55\x10\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 4181, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x5f\x8f\xd3\x46\x10\x7f\xcf\xa7\x18\x05\xa4\xb4\x2a\x49\x4a\xe1\xa1\xb2\xc4\x43\x4a\x03\x9c\xaa\xbb\x43\xb9\x50\x95\xbe\x58\x63\xef\x38\x9e\xde\x7a\xc7\xdd\x5d\x27\x84\xd3\x7d\xf7\x6a\xbd\x9b\xbf\x70\x40\xf1\x93\xed\x99\xfd\xcd\x6f\xe7\xff\x78\x3c\x1e\x3c\x82\x57\x17\x7f\x5d\xce\x33\x98\x99\xad\xaf\xd9\xac\xa0\x20\x2d\x1b\x60\x03\xa8\xf5\xb8\xc4\xd6\x41\x8d\x0e\xd8\x8f\x1c\xac\x51\x77\x04\x96\x5a\x8d\x25\x29\x28\xb6\xe0\x48\x05\x55\x5f\xd3\xe0\x11\xa4\x47\x5a\x32\xae\xe6\xca\x37\xe8\x3c\x59\x57\x5a\x6e\xfd\xc4\xd5\xb0\xa9\xb9\xac\x81\x1d\x18\xf1\xc0\x8a\x50\x3f\x81\x0d\x81\xab\xa5\xd3\x0a\x2a\xfe\x00\xbe\x46\x3f\x19\x68\x29\x51\xc7\xc3\xd9\x00\xa0\x16\xe7\x5d\x78\x01\xe8\x25\xe1\x7b\x00\xb0\x46\x9b\xfe\xa2\x71\x5c\x68\xca\x4b\x31\x86\x4a\xcf\x62\xb2\xa8\x79\x22\x6d\xb7\xbe\x16\x93\xb3\xf1\x64\x5b\x4b\x01\x1c\xa6\x9d\xb3\xd3\x82\xcd\x34\x0a\x7f\x19\x0c\x4e\x2e\x90\xb3\x0b\xa0\x1e\xd9\x90\xe5\x8f\xa4\x32\x78\x85\xda\xd1\x27\x6a\x0d\xae\x28\xf7\xb8\xca\x60\xb8\xfe\x73\xbe\xb8\xb9\xb8\xbe\x1a\x46\xa5\x47\x70\x75\xbd\x9c\x67\xb0\xac\xd9\x41\x59\xa3\x59\x91\x0b\x1e\x7b\x36\x79\xfa\xf3\x4f\x80\x46\x45\xcf\xa2\xd6\x50\x4a\x53\xb0\xe9\x1d\xea\x05\x10\x1c\x9b\x95\xa6\x70\x4f\xc6\x42\x53\x82\x8b\x4f\x67\x14\xd9\xe0\x76\x30\xd8\xd0\x11\x95\x0d\x15\x81\xb2\x13\x4d\x89\x56\x50\x38\xe3\x7b\xac\xd4\x5a\xaa\xf8\x43\x06\x43\x4b\x2b\x76\xde\x6e\x27\x96\x56\x63\xdc\xb8\xc9\x5e\x7f\x52\x4a\x93\x3d\x7f\xfe\x6c\xba\xff\xf3\x6c\x3a\xfc\x02\xe4\xc1\x6e\x06\x43\x71\x34\xde\x50\x31\x4e\xc2\x2f\x9d\x5b\x93\x75\x7d\xf0\xce\x9d\x28\x96\x56\x79\x67\x75\x9e\x92\x02\x46\xcb\xf9\xe5\xdb\x8b\xcb\xd9\xeb\xf9\x6f\xb3\x9b\xf9\xf8\xf1\x5d\x29\x4d\x2b\x86\x8c\xbf\xcf\x1e\xdf\x25\x9c\xfb\xd1\x99\xad\x78\x3a\x57\x54\x61\xa7\x7d\xee\xba\x42\x49\x83\x6c\x12\xde\xe2\xfa\xdd\x72\xbe\xb8\x78\x3b\x31\xdc\x4e\x58\x46\xbb\x00\xf6\x05\x92\xde\xfb\x30\xa6\x84\x2d\x08\xfc\xb6\xa5\x17\x6c\x2a\x8b\x4f\xa0\xe8\x7c\xc8\xe6\x1a\xd7\x04\x5e\x40\xf3\x9a\x60\xc3\xbe\x86\xe0\x58\x31\x51\x0d\x2a\xb1\x60\x64\x93\xe0\x0a\x2a\xb1\x73\x04\x52\x81\xa6\x15\x96\x5b\xb0\x84\x4e\x8c\x3b\x63\x6e\xa5\x0b\xcc\x1d\x69\x2a\xbd\x04\x07\x1c\x83\x9e\xdf\x73\x17\xc9\x87\xf5\x93\xf9\x1b\xf2\x30\xfb\xd8\x59\x02\xd7\x52\xc9\x15\x97\xa0\xd0\x47\x92\xa1\xca\x48\xc1\x0e\xeb\xcc\x44\x94\x1e\x59\xf2\x62\x43\xd0\x5b\x2b\x6b\x56\x21\x44\x43\x0c\xc0\x79\xa1\xa5\x38\x8f\xf9\x43\x87\x6f\xd9\xa8\x90\x31\xc5\x3f\x54\xfa\x6f\x3d\x74\x30\x93\x63\x59\x4a\x67\x7c\x4c\xbc\xd1\x62\xfe\xfa\xe2\x66\xb9\x78\x9f\xdf\x2c\xaf\x17\xb3\xd7\xf3\x7c\xf6\xf7\xbb\xc5\x3c\x9f\xbd\x7c\x79\xfd\xee\x6a\x79\x35\xbb\x9c\x9f\xfb\xed\xdb\x4d\xdc\xd2\xf6\xab\x16\xfe\x98\xbf\xff\x0e\x03\xfb\x76\x73\x54\x91\xdf\xe1\x0a\x4b\xa8\x9b\x0c\x86\xa5\x58\x9a\x6c\xd8\x28\xd9\xb8\x89\x21\x3f\xfc\x4c\x52\xa7\x3f\x6f\xd0\x2a\x28\x45\x11\xf8\x90\xe4\x29\x51\x27\x27\x3a\x2f\x3b\x6b\xc9\x78\xbd\xed\x5b\x4f\xa9\xbb\x50\x50\xe0\x3c\x7a\x02\xf4\xa0\xa8\xd5\xb2\x6d\xc8\x78\xf0\xdc\x10\x28\xa1\xd8\xec\x63\x51\x84\x6e\x25\x8a\x5c\x02\x8b\xfc\xc9\x92\x0a\xf5\x12\xa4\xb1\x40\x63\xd5\x68\x2c\x48\x3b\xc0\xb6\xd5\x4c\xaa\xef\x94\x96\x50\x6d\x83\x6e\x41\xf0\x6f\x47\x96\x49\x25\x28\x5c\x21\x1b\xe7\x03\x87\x80\xd3\x0a\x1b\xdf\xcf\xa5\xc0\x22\xce\xa7\x44\xae\x1f\x31\x51\x49\xe3\xb6\x10\xb9\x75\x60\x3b\x33\x81\x99\x76\xf2\x24\xc1\x05\x71\x2c\xb9\x7e\xd8\x71\x89\xd0\x87\x1d\x52\xeb\x80\x61\x85\x5a\x3b\x28\xb0\xbc\x1d\x06\x42\x4f\x03\x4f\x2b\xad\x65\xf4\xa4\xb7\xb0\xa9\xc9\x12\xa0\x3b\xc6\x4b\xd1\xda\x23\x6a\x59\x85\x7a\x4b\x2e\x9a\xc0\xb2\x3f\xb3\xc1\x30\x0c\x9c\x80\x62\x57\x76\x2e\xf4\x31\xc0\x42\x3a\x0f\x5c\x25\xb4\x38\x30\x0e\xf6\x02\x01\x25\x31\x6a\xa9\xe1\xf4\x16\x1c\xbc\x78\x01\xb1\xeb\xf4\x6e\xdf\x77\x9b\x00\x90\xb0\x5a\xb2\x15\x95\x21\xa0\x15\x61\x3f\x27\x03\x5a\x1f\x2e\x34\x47\x87\xd3\xfd\x6b\x5e\xd5\xfd\xdc\xc1\x9d\x4f\x1d\xdb\x7d\x14\x76\x76\x4f\x73\x66\x41\x6b\x76\xec\x41\x63\xf0\xe7\x0f\xad\xb8\x60\x67\x0b\x08\x0a\xa9\x11\xe3\xc8\x83\x58\x78\x2c\xbe\x26\xfb\xe3\x03\xa9\x1e\xfb\xdf\xce\x40\x06\x4f\xbf\x52\x12\xc7\x9a\xe7\xd3\xfa\x64\x54\x19\xe7\x51\xeb\x0c\x96\xb6\xfb\x64\xac\x1f\xd2\x39\x0f\x8d\x3e\x83\xd1\x5e\x36\xa6\xb8\x46\xb0\xa3\xd1\xe9\xa0\xff\x5d\xfa\x8c\x57\x54\xb1\xa1\xaf\xde\x04\x9c\x1c\x32\xd2\xa3\xbb\x85\x8a\xf7\xa3\x3e\xea\x4e\xb6\x8d\x06\x36\x8e\x55\x2c\xa1\x73\x48\xb0\xa2\x09\x2a\x2b\xcd\x41\x34\x4e\x4b\x0f\x6c\x58\xeb\x5d\x8d\x74\x5e\x5a\x69\xbb\x10\x07\x60\x0f\x5d\xd8\x2f\x3e\x8b\x78\x3e\x6e\xfa\xe2\x0b\x05\xb7\x65\xb3\x3a\x4a\x69\xd3\x35\x05\xd9\x30\xbc\x8e\xb2\xec\x7c\xed\x39\x2c\x30\x2e\xad\x96\x68\x43\x4d\x7a\xb2\x06\x75\xc8\xb6\x4f\x59\x07\x7b\x1b\x1a\xd9\xd3\x9d\x27\xce\x96\x44\xba\x81\xbe\x5c\xc2\xa2\xb4\x16\x56\x3d\x1f\x36\x65\xe8\x4f\xa1\x8b\x39\x1f\x68\x55\x58\x7a\xa8\xd8\xa8\x1d\xef\xbd\xa9\xb8\x38\x42\xd8\xb9\x1a\x31\xbb\xaf\xf0\x6d\x2a\x5e\xe5\x05\x3a\xca\x60\x4a\xbe\x9c\x8a\xe5\x15\x9b\x69\xd2\x38\x6c\xa5\x89\x53\x57\x68\x2e\xf7\xe9\xd4\x59\x9d\xc1\xb0\xf6\xbe\x75\xd9\x74\x7a\x77\x07\x93\xf9\x87\x78\xd1\xcb\xfe\xe0\x1b\x71\xfd\x78\x82\xfb\xfb\xec\xd7\xb0\x51\x9d\x6c\x45\x47\x80\xd8\xf2\xff\x06\x1b\x0e\x06\x22\x69\xc9\x71\xb9\x97\x3c\x5e\xe6\xc1\x15\xfa\xbf\x00\x00\x00\xff\xff\x59\x89\x6c\x74\xff\x0b\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 3071, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\x41\x4e\xc4\x30\x0c\x45\xf7\x39\xc5\xbf\xc0\x70\x80\xac\xd9\xb0\x42\x1a\x0e\x10\xa5\xad\x33\x8d\x48\xe2\x2a\xf6\x68\xd4\xdb\xa3\xa4\x81\x41\x08\x90\x58\xb1\xfd\xb6\xff\x7b\xad\x72\x42\xf1\x99\x2c\x1e\x69\x4b\xbc\x43\x57\x42\xe2\xd9\x27\x3c\x6f\x54\x5e\xd6\x18\x14\x67\xbe\x2a\x55\xf8\xb2\xe0\x4c\x97\x28\x5a\x77\x03\xac\x2c\x2a\xf6\x58\xce\x5e\x94\xaa\x01\x2e\x5e\x57\xaa\x2e\xf8\xb9\xcd\x82\x4f\x42\xc6\x00\xea\xe5\x55\xac\x01\x80\x77\xde\x53\xde\xb8\x6a\x2f\xbd\x0a\xa1\x1e\x8c\xb6\x88\x10\x13\x21\x54\xce\xe0\x8d\x8a\x34\x87\x93\x2f\x12\xa7\x44\xf7\xc4\x35\x3e\x2d\xa8\x9c\xa8\x17\x03\xb1\x57\xba\x96\xd8\x11\x61\xd0\xbe\x9e\x7d\x8c\xbb\x99\x6b\x30\x3b\x1c\x1e\xf6\x9c\xcc\xaf\xaa\xe3\x1f\xfc\xb3\xec\xb0\xf8\x51\xf7\xde\x72\xa3\xc9\xcd\x5c\x84\x13\x75\x83\x6f\x74\xa7\xf6\x15\xca\x58\x8e\x57\x70\xa3\x09\xe3\xe2\x2f\xba\x9f\x40\xc6\xbc\x05\x00\x00\xff\xff\x0e\xfb\xfc\x37\x59\x02\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 601, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleServiceCatalogYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x5b\x6f\xdb\xb8\x12\x7e\xf7\xaf\x20\x82\x3e\x96\x75\xd2\xf6\x9c\xd3\x23\x60\x1f\x5c\x27\xbd\xa0\x4d\x6a\xc4\x6d\x5f\x16\x8b\x60\x4c\x8d\x65\xae\x29\x52\x18\x8e\x94\x1a\x45\xfe\xfb\x82\x92\x6c\x4b\x8c\xec\x5e\x90\xc5\x5e\xf4\x12\x85\x73\xff\x86\x33\xfa\x12\x28\xf4\x67\x24\xaf\x9d\x4d\x44\x75\x36\x5a\x6b\x9b\x26\xe2\x23\xe6\x85\x01\xc6\x91\x5b\xfc\x8e\x8a\x7d\x32\x92\xa2\xab\x88\x5f\x18\x6d\x78\xf5\xe3\xea\x6c\x81\x0c\x67\x23\x21\x1a\xd3\x73\xc0\xdc\xd9\x39\xf2\x48\x88\x1c\x19\x52\x60\x48\x46\x42\x08\x61\x60\x81\xc6\x37\xef\x42\x40\x51\x24\xc1\xa7\x47\xaa\x90\xea\x43\x0b\x39\x0e\x9d\xf9\x02\x14\x26\xe2\xd1\xd7\xab\xc9\xe5\xc5\x7c\x36\x99\x5e\xdc\x8d\x84\xf0\x05\xaa\xc6\x99\x47\x83\x8a\x1d\x6d\x5d\xe7\xc0\x6a\xf5\xbe\x17\x6d\x30\x5e\x59\xa4\xc0\x38\x67\x02\xc6\x6c\xb3\x55\x25\x67\x8c\xb6\xd9\xa7\x5a\xb8\xb7\xcf\xe1\xcb\x27\x0b\x15\x68\x03\x0b\x83\x89\x38\x6b\x25\xbc\x29\x30\x11\xd7\x5d\xa3\x5a\xc2\x2d\x84\xbb\xa4\x7a\x58\xd4\x19\x59\xeb\x18\x38\xa0\xb8\x3f\x14\x42\xc1\xcd\x0a\xfc\x2a\xd4\x3b\x9d\xdc\xbc\x99\xcc\xdf\xdc\xed\xa4\x26\x2a\x6a\xb0\xac\x2e\x34\x0d\x3c\x54\x69\x85\x13\xa5\x5c\x69\xf9\xaa\x06\xb9\x3d\x93\x0a\x18\x8c\xcb\x64\xec\x41\x08\xeb\x52\x9c\x47\xc0\x86\xc7\x15\x68\xfd\x4a\x2f\x59\x6a\xbb\x24\xb8\x1f\x5c\x08\xe5\x2c\x83\xb6\x48\x9d\x4c\xa5\x00\xca\x7a\x99\xcb\x01\xcb\x70\x2a\xa5\x67\x47\x90\xa1\x0c\xd0\xf6\x44\xc8\x2a\x8d\x75\x51\x95\x84\xb2\x70\xc4\x3d\xc9\xc9\x7f\x9f\x3f\x7f\x76\x12\x29\x07\x7b\xd9\x84\xf4\x3d\xd1\x8a\xb9\xf0\xc9\x78\xfc\xe8\xeb\xc5\xc7\xe9\xf9\xcd\xfc\xe2\xfa\xf3\xc5\xf5\x5d\xf2\xf4\xd9\xff\xfe\x3f\xe4\x42\xc1\x52\x9b\x7e\x6a\x63\x64\x35\x76\xa4\x33\x6d\xc7\x39\x78\x46\x6a\x7f\x3c\x69\x2d\x9e\xa8\x28\xc3\xad\x2f\x24\xfe\x61\x6f\x46\xa3\xe5\x43\x1e\xd7\xb8\xf9\x49\x87\x6b\xdc\xf4\x1d\x56\x7d\x4c\xcf\x4e\x63\x44\x95\x23\x2f\xc1\x18\x77\x8b\xa9\x6c\xfc\xf7\x91\x35\x4e\x81\x59\x39\x1f\x67\x0a\x69\xae\x7d\xd8\x20\x32\xdc\x16\x72\xa6\x27\x7f\x57\x2e\x90\x2c\x32\xfa\xab\xed\xfc\xbf\xd7\x4b\x54\x1b\x65\xf0\xf1\x39\x2e\xa1\x34\x3c\x6f\xae\xf0\xcc\x80\x7d\xdc\xbe\xbf\xd4\x36\xd5\x36\xf3\x7b\xdd\x8e\xd2\x74\x05\x36\xc3\xcf\x60\x74\x0a\xec\xe8\xf1\x4b\x72\x6b\xa4\x49\xc9\xab\x39\xd0\x74\x85\x6a\x1d\xa5\xb8\x44\xe0\x70\xb7\x32\x60\xec\x17\xf5\xa1\x2e\x14\x58\xdb\xec\x6d\x8a\x96\x35\x6f\x7e\x61\x2a\xbb\x90\xeb\x1c\xb2\x7a\x67\xbd\xbd\x9c\xbc\xbe\xb8\xeb\xce\xb7\xcb\x73\x08\x9b\xf2\xd7\x93\x71\xe9\x69\xbc\xd0\x76\x1c\x8d\xe3\xc9\x6f\xb1\xa7\x59\x69\xcc\xcc\x19\xad\x36\x89\x78\xbb\xbc\x72\x3c\x23\xf4\x68\xbb\xa8\x0e\x6d\xcf\xe6\x09\xc3\x11\x8d\xde\x6e\x44\x67\x8e\x38\x11\x61\x58\x3a\x72\x21\x0a\x72\xec\x94\x33\x89\xf8\x38\x9d\x75\x24\x84\xde\x95\xa4\xd0\x27\xe2\x6b\xb7\x28\x46\xca\x6b\x44\x9c\xbd\x44\xef\x43\xc6\xc0\xab\x44\x8c\x53\xac\xc6\x1d\xa1\x34\x2e\xeb\x98\x55\xce\x94\x39\x5e\x86\xbd\x14\x25\x98\x87\xb3\xd6\x47\x05\x34\xa6\xd2\x8e\xd7\xbb\x5b\x21\x23\xc0\x7a\xb9\x47\x40\x48\xef\x4d\x4f\x4e\x08\xe9\x07\x6b\x36\x89\x88\x7a\xd6\x8f\x7a\x6f\x62\x06\x82\xd4\xc3\x13\x6e\x77\x3d\xc6\xdf\x13\x25\xb5\x7e\xdb\xc7\xa9\x29\x83\xdb\x57\x9a\x3a\xd3\x41\xe8\x19\x88\xb7\x3a\x13\x73\x0b\x1b\xdf\x59\xe5\xaa\x24\xcd\x9b\xa9\xb3\x8c\x5f\xb8\xd7\x84\x0e\xca\xaf\x09\x14\xce\x90\xb4\x4b\xe7\xa8\x9c\x4d\x7d\x22\x9e\x9d\x8e\xfa\xa8\xf7\x96\xf3\x71\xcc\x3c\x2a\x42\x4e\x7a\xf5\xa5\xcd\x14\x5e\xba\x14\x13\xf1\xfc\xe9\x69\x4f\xd8\x18\x5c\x7d\xa3\x11\x9a\x31\xf7\x7d\xaf\x52\xac\x31\x40\x66\x7c\xb4\xdd\xc2\x53\xd4\x8d\xd9\xf9\xbb\xa7\xd1\x31\xee\x6f\xb2\x21\xe3\xae\x86\x14\xa1\x87\x75\xdf\x47\xf7\x6d\x8e\xde\x84\xa3\xf7\x40\x0a\xcc\x0b\xde\x9c\x6b\x8a\xc6\xa5\xb1\x0a\x74\x40\xa6\x9a\x46\xb2\xe5\x4e\xed\xb6\x1a\x09\x11\xb1\xb2\x98\x3e\xfc\x2c\x53\xea\x6c\x82\x6d\xcf\x9b\x0f\x68\x9b\x5b\x51\x6f\x83\xfd\x32\x18\x5a\x03\x0c\x94\x21\x47\x7b\x23\xa6\x60\x03\xb4\xc4\x63\xbd\xef\x27\xcb\xa5\xb6\x9a\x37\x89\xb8\x72\x16\x23\x5e\x59\xed\x79\xe4\xb5\x2b\x6b\x26\xf5\x70\x85\x27\x03\x05\x74\xaa\xe7\x3d\xb1\xea\x8c\x52\x22\x0a\xf0\x9e\x57\xe4\xca\x6c\xd5\xe8\xb9\xad\x5a\xdc\xb4\x43\x09\x0a\x71\x8b\x3a\x5b\x71\x22\xce\x4e\x9b\x39\xb9\xd5\x26\x55\x40\xe9\x76\xcc\x07\xa0\x78\x28\x8a\xdd\x7e\x5e\x0d\x92\xcc\xc1\x42\xd6\xe3\xda\x47\x84\x0f\x47\xba\x0f\x04\xf9\x8b\xd9\xf7\x01\x2a\x7d\x20\xd9\x9f\xe1\xd4\x7b\x57\x7f\x1e\xa9\x46\x5b\xf5\xbf\x9b\x4d\x5f\xdf\xbd\x98\xdf\xec\xfa\xd6\x5b\x69\x15\x98\x12\x5f\x91\xcb\x93\x68\x3f\x2e\x35\x9a\xf4\x1a\x97\xf1\x79\x2b\x69\x3e\x8a\x5b\x18\x9f\xec\x6e\x48\x17\xbf\x7b\x04\xff\x20\x98\xa2\xa5\x58\xf7\x69\xfb\x8b\xd3\x17\x31\xc9\x8c\x48\xe8\x7f\x62\x0e\x6a\x10\x52\x24\x59\xc3\x1a\x28\xc6\x50\x6e\x52\x04\xf2\x70\x84\x36\x04\x47\x8b\x9a\x11\x4a\x42\xa3\x7d\xe8\x04\x23\x55\x60\xa2\xe8\x79\x1c\xfe\x1f\x49\x13\x8f\x76\xe6\xdb\x7c\x31\x74\xe9\x5f\xc6\x17\xe3\xe9\xfd\x4e\xd6\xf8\xb7\xe6\x73\xc7\x6b\xfa\x61\x56\xf7\xd0\x7c\xed\x30\x4b\x2c\x80\x20\x47\xae\x97\xdd\xb6\x98\xf6\x9f\x21\xbb\xdf\x3b\x7f\xa9\xef\xce\xba\x3b\xaf\xde\x74\xc9\xf0\xdc\x6f\xf5\xeb\xa9\x1b\xfd\x11\x00\x00\xff\xff\x93\xbf\x72\xc1\x03\x13\x00\x00")

func masterTmpAnsibleServiceCatalogYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleServiceCatalogYaml,
		"master/tmp/ansible/service-catalog.yaml",
	)
}

func masterTmpAnsibleServiceCatalogYaml() (*asset, error) {
	bytes, err := masterTmpAnsibleServiceCatalogYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/service-catalog.yaml", size: 4867, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x8e\x1b\x37\x10\xbc\xf3\x2b\x1a\xb2\x8f\xd1\x3c\xb4\x71\x0c\x10\xf0\x41\xde\x87\xb3\x08\xd6\xde\x78\x17\xb9\x73\xc8\x1e\x89\x11\x87\xcd\x34\xc9\x59\x2b\x86\xff\x3d\x20\x47\xfb\x42\x2e\xc9\x45\xc0\xb0\xbb\xab\xab\x4a\xd5\xca\x39\x7a\xb8\xb0\x51\x0d\x0e\xcd\x05\xe9\x03\xb2\x84\x51\xb9\x88\x42\x05\xfb\x07\x72\xb4\xe4\x25\xcc\xbd\x30\x3e\x7e\xb4\xde\x6c\x8d\x61\x8c\x51\x42\xbf\x79\xdf\x74\x4d\xd7\xf4\xf2\xdd\x59\x29\x7e\x45\x9d\x39\xda\x19\xbf\x62\x24\x37\x9f\x93\x1f\x25\xb4\x98\x74\x4b\x6c\x77\xd6\xb7\x9e\x0c\xb6\x5c\x8b\x8d\x26\x3f\x96\xa1\x0b\x9a\x94\xf5\x12\xb4\xcb\x31\x21\x37\x8e\xb4\x72\xa5\x70\x7d\x2b\xa1\x7f\xbf\x69\xfa\xb2\xa4\x17\xa6\x32\x2b\x98\x76\x27\x05\x00\x7e\x43\xfd\xab\xf2\xc6\x21\x7f\x56\x13\x4a\x58\xad\x84\x0d\xa9\xa8\x88\x77\x47\xaf\x6f\x91\x2d\x19\x09\xab\xb3\x2e\xae\x84\x9d\xd4\x0e\x9f\x87\x47\xe2\x49\x25\x09\xf7\x97\x37\xb7\xd7\x37\xdb\x4f\x97\x1f\xb7\x77\x97\xeb\xb7\xdf\x35\x4d\x81\x3c\xfa\xf4\x43\xbe\xfd\x3e\x2f\xd2\x7f\x08\x00\xa7\x12\xc6\x24\xe1\xaa\xda\x72\xb0\xde\x48\xf8\x4c\xe6\x84\x28\x0e\x79\x40\x87\x69\xcb\xbb\x3c\xa1\x4f\xb1\xac\x28\x5a\xd7\x4e\x0d\xe8\xea\xe7\x7a\x79\x60\x72\xd8\x94\x76\xf6\x98\x30\x36\x96\xda\xb2\x33\x27\xfc\x90\x38\x63\x6d\x64\xdc\x59\xf2\x1f\x02\xdb\x49\xf1\x51\x00\x68\x47\xd9\xac\x03\xd3\x6c\x0d\xf2\x82\xb6\x52\x7f\x67\xc6\xd5\x53\x55\x3f\x69\x5b\xc3\xaa\x7a\x5e\x1b\x96\xdf\x6a\xf6\x4a\x4c\xaa\x38\x7c\xee\x2c\xfa\x74\x4e\xde\xa3\x4e\x96\xfc\x97\x19\x99\xad\xc1\x4a\x53\x69\x8d\xa1\x14\x13\xfa\x74\x7f\x0c\x18\x25\xa8\x10\x9c\xd5\xaa\xf4\xb6\xb3\x37\x2f\xe9\x07\xa6\x44\x43\x1e\x7f\x7a\xd9\xf3\x67\x24\x5f\x78\x3d\x83\xfc\x27\x0c\x01\x30\x64\x2e\x2e\x6f\xba\x4e\x00\xfc\x15\x4a\xc4\xba\xee\x44\xfb\xb7\x3c\x3c\xfe\x81\xd5\xca\x0a\xb1\xa8\x16\x1e\xd3\x03\xf1\xe1\xd6\xe5\x9d\xf5\x4b\x1a\x18\xcd\x5e\xa5\x96\x02\xfa\xb8\xb7\x63\x5a\xd3\x1c\xd7\x31\x0f\x1e\x93\x78\x03\xa7\x81\x05\x0f\x62\xe2\xac\x13\x58\x9f\x98\x4c\xd6\x68\xc0\x7a\x58\x22\x0b\x7d\xd3\x35\xbf\x80\xf2\x06\xbe\xdc\x5d\xc2\x59\xd3\x35\x1b\x78\xd8\x5b\xbd\x17\x6f\xc0\x60\x60\xd4\x25\x1a\xf0\x2f\x06\xa0\x06\x9a\xb1\x81\xfb\x3d\x42\x7a\x20\x88\x7b\xca\xce\xc0\xa4\x92\xde\x37\xe2\xd5\xfe\xe2\xfb\x94\xb2\x84\xfe\xe7\x77\x45\xf8\xff\x54\x13\xc8\xdc\x28\x6f\x47\x8c\xe9\x11\x2f\x22\xcf\xd6\xef\xae\xfd\x48\x05\x7c\x78\x79\xb4\x5d\x3d\xd9\x4e\xf6\xdd\xa6\x6e\xd3\xc8\xe9\xca\x3a\x94\x50\xa6\x90\x1b\xcd\xa9\xa6\xaa\xa6\x64\x2b\x41\xab\xd3\xd3\x01\x8f\xaf\x1a\x0f\x78\x14\x33\xb9\x3c\xe1\x85\x65\xd4\x89\xf8\x28\xa1\x9d\x15\xb7\xce\x0e\x8f\x27\xff\x44\x79\x39\xec\x66\x19\x88\x22\x30\x7d\x3b\xbe\x3a\x98\xfa\xb2\x9e\xc8\x60\xf9\x82\x12\xe4\xc7\x7b\x3e\xad\x79\xb6\xab\x62\xfd\x9e\x29\xa9\xa5\x37\x20\x5f\xdd\x7d\x62\xca\x41\x8a\x7f\x02\x00\x00\xff\xff\x24\x68\x66\x57\xd0\x04\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 1232, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x8f\xdc\x36\x0c\xbd\xeb\x57\x10\x93\x1c\x3b\xfe\x98\x6d\x1a\x40\x40\x0f\x93\xfd\x48\x17\xc5\x26\xdb\xec\xa2\x77\x59\xa2\x67\xd4\x91\x49\x97\x92\xbc\x99\x06\xf9\xef\x85\xec\xd9\x2f\xf4\xd2\x5c\x0c\x58\x24\x1f\xf9\x1e\xf9\x4c\x08\xfc\x70\xe1\xa3\xe9\x02\xba\x0b\xb6\x07\x14\x0d\xbd\x09\x11\x95\x19\xfd\x9f\x28\xd1\x33\x69\x98\x5a\xe5\x28\x7e\xf0\xe4\xb6\xce\x09\xc6\xa8\xa1\xdd\xbc\xaf\x9a\xaa\xa9\x5a\xfd\xee\xac\x04\xbf\xa0\xcd\x12\xfd\x84\x5f\x30\x72\x98\xce\x99\x7a\x0d\x35\x26\x5b\xb3\xf8\x9d\xa7\x9a\xd8\x61\x2d\x73\xb0\xb2\x4c\x7d\x29\xba\xe0\xc1\x78\xd2\x60\x43\x8e\x09\xa5\x0a\x6c\x4d\x28\x81\xeb\x5b\x0d\xed\xfb\x4d\xd5\x96\x26\xad\x72\xf3\x64\x05\xd3\xef\xb4\x02\xc0\xaf\x68\x7f\x33\xe4\x02\xca\x27\x33\xa0\x86\xd5\x4a\xf9\x31\x15\x16\xf1\xee\x48\xf6\x16\xc5\xb3\xd3\xb0\x3a\x6b\xe2\x4a\xf9\xc1\xec\xf0\xb9\xb8\x67\x19\x4c\xd2\x70\x7f\x79\x73\x7b\x7d\xb3\xfd\x78\xf9\x61\x7b\x77\xb9\x7e\xfb\xcd\xf2\x30\x32\x21\xa5\xef\xfa\xed\xb7\x69\xa1\xfe\x5d\x01\x04\x93\x30\x26\x0d\x57\xb3\x2c\x07\x4f\x4e\xc3\x27\x76\x27\x44\x75\xc8\x1d\x06\x4c\x5b\xd9\xe5\x01\x29\xc5\xd2\xa2\x70\x5d\x07\xd3\x61\x98\x7f\xd7\x20\xb8\xf3\x4c\xbf\x7a\xea\xc5\x28\x00\x1b\x38\xbb\xf5\x28\x3c\x79\x87\xb2\xa4\xac\xcc\x3f\x59\x70\xf5\x14\xb5\x4f\x03\xaf\x61\x35\x0b\x39\x27\x2c\xdf\x59\xc1\x95\x1a\x4c\x91\xed\x3c\x78\xa4\x74\xce\x44\x68\x93\x67\xfa\x3c\xa1\x88\x77\x38\xf7\x36\xd6\xe2\x58\x82\x09\x29\xdd\x1f\x47\x8c\x1a\xcc\x38\x06\x6f\x4d\xc9\xad\x27\x72\x55\xa1\x20\x84\x09\x63\x35\x0a\x27\xee\x72\xff\xd3\xcb\x9c\xbf\x22\x53\x99\xeb\x19\xe4\x7f\x61\x28\x80\x2e\x4b\x91\x6e\xd3\x34\x0a\xe0\xef\xb1\xdc\x4d\xd3\x9c\xc6\xfe\x3d\x77\x8f\x5b\x99\x05\x9b\x21\x16\xd6\x8a\x30\x3d\xb0\x1c\x6e\x43\xde\x79\x5a\x56\x2c\xe8\xf6\x26\xd5\x3c\x22\xc5\xbd\xef\xd3\x9a\xa7\xb8\x8e\xb9\x23\x4c\xea\x0d\x9c\x0a\x16\x3c\x88\x49\xb2\x4d\xe0\x29\x09\xbb\x6c\xd1\x81\x27\x58\xee\x10\xda\xaa\xa9\x7e\x01\x43\x0e\x3e\xdf\x5d\xc2\x59\xd5\x54\x1b\x78\xd8\x7b\xbb\x57\x6f\xc0\xe1\x28\x68\xcb\xbe\xe1\x3f\x13\x80\xe9\x78\xc2\x0a\xee\xf7\x08\xe9\x81\x21\xee\x39\x07\x07\x83\x49\x76\x5f\xa9\x57\xfd\x8b\xee\x43\xca\x1a\xda\x9f\xdf\x15\xe2\x3f\xc8\x66\x64\x77\x63\xc8\xf7\x18\xd3\x23\x5e\x44\x99\x3c\xed\xae\xa9\xe7\x02\xde\xbd\x74\x62\x33\xfb\xb0\xd1\x6d\xb3\x99\xbb\x59\x94\x74\xe5\x03\x6a\x28\x55\x28\x95\x95\x34\x5f\xd5\x7c\x25\x5b\x0d\xd6\x9c\x9e\x0e\x78\x7c\x95\x78\xc0\xa3\x9a\x38\xe4\x01\x2f\xbc\xa0\x4d\x2c\x47\x0d\xf5\x64\xa4\x0e\xbe\x7b\xf4\xf1\xd3\xc8\x8b\x5b\xab\xa5\x20\xaa\x51\xf8\xeb\xf1\x95\x0b\xe6\x97\xf5\xc0\x0e\xcb\x1f\x94\x43\x7e\x34\xe9\xa9\xcd\xb3\x5c\x33\xd6\x1f\x99\x93\x59\x72\x47\x94\xab\xbb\x8f\xc2\x79\xd4\xea\xdf\x00\x00\x00\xff\xff\x63\x42\xa1\x1a\xa5\x04\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 1189, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x8e\x1b\x37\x10\xbc\xf3\x2b\x1a\xb2\x8f\xd1\x3c\xb4\x71\x0c\x10\xf0\x41\xde\x87\xb3\x08\xd6\xde\x78\x17\xb9\x73\xc8\x1e\x89\x11\x87\xcd\x34\xc9\x59\x2b\x86\xff\x3d\x20\x47\xfb\x42\x2e\xc9\x45\xc0\xb0\xab\xab\xbb\x4a\xd5\xca\x39\x7a\xb8\xb0\x51\x0d\x0e\xcd\x05\xe9\x03\xb2\x84\x51\xb9\x88\x42\x05\xfb\x07\x72\xb4\xe4\x25\xcc\xbd\x30\x3e\x7e\xb4\xde\x6c\x8d\x61\x8c\x51\x42\xbf\x79\xdf\x74\x4d\xd7\xf4\xf2\xdd\x59\x29\x7e\x45\x9d\x39\xda\x19\xbf\x62\x24\x37\x9f\x93\x1f\x25\xb4\x98\x74\x4b\x6c\x77\xd6\xb7\x9e\x0c\xb6\x5c\x8b\x8d\x26\x3f\x96\xa6\x0b\x9a\x94\xf5\x12\xb4\xcb\x31\x21\x37\x8e\xb4\x72\xa5\x70\x7d\x2b\xa1\x7f\xbf\x69\xfa\x32\xa4\x17\xa6\x6e\x56\x38\xed\x4e\x0a\x00\xfc\x86\xfa\x57\xe5\x8d\x43\xfe\xac\x26\x94\xb0\x5a\x09\x1b\x52\x51\x11\xef\x8e\x5e\xdf\x22\x5b\x32\x12\x56\x67\x5d\x5c\x09\x3b\xa9\x1d\x3e\x37\x8f\xc4\x93\x4a\x12\xee\x2f\x6f\x6e\xaf\x6f\xb6\x9f\x2e\x3f\x6e\xef\x2e\xd7\x6f\xbf\x6b\x9a\x02\x79\xf4\xe9\x87\x7c\xfb\x7d\x5e\xa4\xff\x10\x00\x4e\x25\x8c\x49\xc2\x55\xb5\xe5\x60\xbd\x91\xf0\x99\xcc\x89\x51\x1c\xf2\x80\x0e\xd3\x96\x77\x79\x42\x9f\x62\x19\x51\xb4\xae\x9d\x1a\xd0\xd5\xcf\xf5\xf2\xc0\xe4\xb0\x29\x70\xf6\x98\x30\x36\x96\xda\x49\x15\xdd\x1f\x12\x67\xac\x38\x0a\xe8\xe3\xde\x8e\x69\x6d\xfd\xc8\xea\x83\x0a\x36\x22\xcf\xc8\x02\x40\x3b\xca\x66\x1d\x98\x66\x6b\x90\x17\xde\x95\xfa\x3b\x33\xae\x9e\xaa\xfa\x49\xe5\x1a\x56\xd5\xfd\x0a\x58\x7e\xab\xed\x2b\xb1\xcc\x3c\x77\x16\x7d\x3a\x27\xef\x51\x27\x4b\xfe\xcb\x8c\xcc\xd6\x60\x5d\x58\x69\x8d\xa1\x14\x13\xfa\x74\x7f\x0c\x18\x25\xa8\x10\x9c\xd5\xaa\x60\xdb\xd9\x9b\x97\x42\x02\x53\xa2\x21\x8f\x3f\xbd\xc4\xfc\x19\xc9\x97\xbd\x9e\x49\xfe\x13\x87\x00\x18\x32\x17\xbf\x37\x5d\x27\x00\xfe\x0a\x25\x6c\x5d\x77\x5a\xfb\xb7\x3c\x3c\xfe\x95\xd5\xd4\x4a\xb1\xa8\x16\x1e\xd3\x03\xf1\xe1\xd6\xe5\x9d\xf5\x4b\x2e\x18\xcd\x5e\xa5\xf6\xd9\x56\x9a\xe3\x3a\xe6\xc1\x63\x12\x6f\xe0\xd4\xb0\xf0\x41\x4c\x9c\x75\x02\xeb\x13\x93\xc9\x1a\x0d\x58\x0f\x4b\x78\xa1\x6f\xba\xe6\x17\x50\xde\xc0\x97\xbb\x4b\x38\x6b\xba\x66\x03\x0f\x7b\xab\xf7\xe2\x0d\x18\x0c\x8c\xba\x84\x04\xfe\xb5\x01\xa8\x81\x66\x6c\xe0\x7e\x8f\x90\x1e\x08\xe2\x9e\xb2\x33\x30\xa9\xa4\xf7\x8d\x78\x35\xbf\xf8\x3e\xa5\x2c\xa1\xff\xf9\x5d\x11\xfe\x3f\xd5\x04\x32\x37\xca\xdb\x11\x63\x7a\xe4\x2b\xc9\xb1\x7e\x77\xed\x47\x2a\xe4\xc3\xcb\xf3\xed\xea\xf1\x76\xb2\xef\x36\x75\x9a\x46\x4e\x57\xd6\xa1\x84\x25\x6f\x8d\xe6\x54\x53\x55\x53\xb2\x95\xa0\xd5\xe9\xe9\x80\xc7\x57\xc0\x03\x1e\xc5\x4c\x2e\x4f\x78\x61\x19\x75\x22\x3e\x4a\x68\x67\xc5\xad\xb3\xc3\xe3\xf1\x3f\xad\xbc\x9c\x78\xb3\x34\x44\x11\x98\xbe\x1d\x5f\x9d\x4e\x7d\x59\x4f\x64\xb0\x7c\x41\x09\xf2\xe3\x65\x9f\xc6\x3c\xdb\x55\xb9\x7e\xcf\x94\xd4\x82\x0d\xc8\x57\x77\x9f\x98\x72\x90\xe2\x9f\x00\x00\x00\xff\xff\xc5\x7d\x9a\xe0\xda\x04\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 1242, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcAzureAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x49\xcd\x4b\xcc\x2b\xf1\x4c\xb1\x52\xa8\xae\x56\xd0\x73\xac\x2a\x2d\x4a\x75\xce\xcf\x4b\xcb\x4c\xd7\x0b\x81\xc8\xb8\x28\xd4\xd6\x72\x15\x97\x26\x15\x27\x17\x65\x16\x94\x64\xe6\xe7\x61\x53\x1b\x8c\x2c\x0f\xd6\x91\x98\x98\xe2\x9c\x93\x99\x8a\xdd\x68\x47\x47\x17\xa8\x24\xaa\xda\xe0\xd4\xe4\xa2\xd4\x12\x3c\xea\x21\x0a\xa0\x7a\x42\x88\x72\x7a\x51\x6a\x71\x7e\x69\x51\x72\xaa\x7b\x51\x7e\x69\x01\xa6\xd2\x20\x64\x69\x90\xfa\x9c\xfc\xe4\x44\x90\x37\x30\x95\xfa\x40\x65\x40\xaa\x00\x01\x00\x00\xff\xff\x69\xfe\xce\x7d\x37\x01\x00\x00")

func nodeEtcAzureAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcAzureAzureConf,
		"node/etc/azure/azure.conf",
	)
}

func nodeEtcAzureAzureConf() (*asset, error) {
	bytes, err := nodeEtcAzureAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/azure/azure.conf", size: 311, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeNodeDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\x4b\x2d\xb2\xd5\xcf\xcc\xd3\x4d\x4c\x49\x29\xd2\x4b\x2c\x2a\x48\xd4\x37\x34\x32\xd7\x33\xd0\x33\xd0\x33\xe4\x82\x49\x27\xe7\x94\x16\x97\xa4\x16\xe9\xe5\xe4\x27\x27\xe6\x20\xc9\x03\x02\x00\x00\xff\xff\x87\xc4\xbf\xc2\x3f\x00\x00\x00")

func nodeEtcOriginNodeNodeDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeNodeDnsmasqConf,
		"node/etc/origin/node/node-dnsmasq.conf",
	)
}

func nodeEtcOriginNodeNodeDnsmasqConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeNodeDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/node-dnsmasq.conf", size: 63, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 25, mode: os.FileMode(436), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf": masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd": masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml": masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json": masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml": masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh": masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml": masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/ansible/service-catalog.yaml": masterTmpAnsibleServiceCatalogYaml,
	"master/tmp/bootstrapconfigs/compute-config.yaml": masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml": masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml": masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/azure/azure.conf": nodeEtcAzureAzureConf,
	"node/etc/origin/node/node-dnsmasq.conf": nodeEtcOriginNodeNodeDnsmasqConf,
	"node/etc/origin/node/resolv.conf": nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"master": &bintree{nil, map[string]*bintree{
		"etc": &bintree{nil, map[string]*bintree{
			"etcd": &bintree{nil, map[string]*bintree{
				"etcd.conf": &bintree{masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": &bintree{nil, map[string]*bintree{
				"master": &bintree{nil, map[string]*bintree{
					"htpasswd": &bintree{masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml": &bintree{masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json": &bintree{masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": &bintree{masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": &bintree{nil, map[string]*bintree{
			"ansible": &bintree{nil, map[string]*bintree{
				"ansible.sh": &bintree{masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": &bintree{masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml": &bintree{masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
				"service-catalog.yaml": &bintree{masterTmpAnsibleServiceCatalogYaml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": &bintree{nil, map[string]*bintree{
				"compute-config.yaml": &bintree{masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml": &bintree{masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml": &bintree{masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": &bintree{nil, map[string]*bintree{
		"etc": &bintree{nil, map[string]*bintree{
			"azure": &bintree{nil, map[string]*bintree{
				"azure.conf": &bintree{nodeEtcAzureAzureConf, map[string]*bintree{}},
			}},
			"origin": &bintree{nil, map[string]*bintree{
				"node": &bintree{nil, map[string]*bintree{
					"node-dnsmasq.conf": &bintree{nodeEtcOriginNodeNodeDnsmasqConf, map[string]*bintree{}},
					"resolv.conf": &bintree{nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


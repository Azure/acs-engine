// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/azure/azure.conf
// node/etc/origin/node/node-dnsmasq.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x40\xe6\x65\xf7\xa1\x90\xd2\xaf\xa5\x92\x1f\x8c\x33\x80\x85\x49\xb2\xb6\x03\x45\x55\x65\x51\x1a\x68\xb4\x14\x50\x12\xba\xad\x10\xff\xfd\xca\x49\x20\xb4\xd0\xab\xab\xdb\xfb\x96\xcc\x39\x33\x3e\x33\x73\x06\x14\x75\xb4\x4b\xfa\x80\x37\x9b\x4a\xad\x3f\x4e\xd2\x30\xae\x75\x97\x49\xba\x18\xbf\x84\x95\xed\xd6\xca\x08\x9c\x49\x05\xae\xf6\x01\x84\x0e\x04\x97\xf8\x39\x4d\x57\xc9\x6d\xbd\xbe\xd9\x54\xfe\x8a\x16\x4f\xe1\xdb\x3e\x97\xf9\x49\xc5\xfe\xbb\x26\xd3\x38\x5a\xcc\x2a\xdb\xed\x6d\xe3\xe2\x1f\x3b\xaf\xe2\x10\x45\xb4\xc3\x04\xae\xbf\x8e\xe3\xfa\x3c\x7a\xac\x87\xe9\xe4\xa9\x6e\x55\x33\x74\x48\x78\x06\x22\x54\x04\xa4\x4b\x7c\xd9\xf5\x94\xa6\x5e\xe0\x2a\x7c\x6e\xdb\x76\x51\xa8\x0b\x44\xa8\x16\x10\xa5\x99\xab\x40\x0c\x08\xc7\x57\x3b\x0c\x38\x50\xc5\x3c\x57\x2b\xd6\x07\x2f\x50\xb8\xb1\x87\x8a\x2e\x28\x67\xe0\xaa\xdf\xe8\xe3\xa6\x59\x28\xeb\x93\xbb\xbd\x3a\x89\xaf\x0e\xa2\x43\xc2\xcb\x00\xf5\x84\xc4\x96\x65\x55\xef\x27\xf3\xb5\x29\xfa\x90\xeb\x60\x2e\x53\x8c\x70\x4d\x9c\x01\x08\xc5\x24\x7c\x77\xb0\xbb\x82\x94\x07\x52\x81\xf8\x62\x95\x7f\xa4\xb6\x96\x8a\x28\xc0\x8b\xf0\xff\xd3\xb0\xf2\x7a\xe0\x62\xb3\xd7\xb3\xa2\xe9\xb3\xf3\x62\x1c\x0e\x93\xd4\x1b\x80\x18\xe1\xcf\x01\x2d\xc5\xe0\x38\xd8\x26\x9c\xb7\x08\xed\xe1\x55\xbc\x7c\x7b\x3f\x82\x7d\xe1\xdd\x8d\x70\xae\xa2\x9c\xe4\xf7\x97\x2b\x95\x60\x54\x69\x01\xd4\x73\xdb\xac\xa3\x69\x17\x68\x0f\xa3\xe9\x78\x9e\x84\x3b\x6b\x92\x40\x79\x9a\x7a\x7d\x9f\xe4\x5e\x13\xa0\xc0\x35\x5f\x18\xd9\x3b\x0e\xb8\xa4\xc5\x41\x0f\x1a\x18\xa5\xf1\x3a\x44\xb9\xd2\x7f\x03\x4f\x11\x6d\xda\x02\xd7\xd1\xad\x91\x02\x89\x2f\x1b\xcd\xcb\xe6\xf5\x4d\xa3\x79\x6d\xbc\x92\x75\xfb\x50\x14\xc9\x9b\x5c\x4e\xa7\x87\xff\xba\x4d\x18\x0f\x04\xe8\x21\x61\x0a\xa3\x2b\xdb\xde\x3f\x9a\xe3\x02\xda\x02\x64\xb7\xbc\x0e\x74\x61\x1f\x91\x1c\xb3\xb6\xdd\x91\xa0\xf3\x23\x7c\x28\x98\x82\x92\x70\xea\x15\xe2\x94\xb8\x8d\x8c\xf8\x24\x9c\xac\xe3\x28\x7d\x2f\x9c\xae\x84\x71\x85\xa3\x29\xd1\x6d\xc6\x01\x9b\x83\xcf\x8f\x7e\x32\xae\x4d\xe2\x34\x67\x15\x3b\xa3\x20\x94\x99\x6c\xf7\xc3\xc0\xb2\xe8\xa7\xe4\x24\x8c\x5f\xc3\xb8\x2c\xd0\x83\xd1\x17\x94\xff\xc2\xf7\xc3\x95\x29\x2e\xf7\x9b\xcc\x3b\x31\x87\xf7\x6b\x2a\x33\xea\x4f\xa5\xe6\x8c\x13\x7a\x57\xe1\xa1\xda\x8c\x76\x42\x72\xc6\x2a\x05\x67\xb4\x23\xd5\x56\xf5\x7e\xbe\x9c\xcd\xa2\xc5\xac\x18\xb1\x03\xad\xa0\x83\x51\xfb\xa0\x29\xee\x75\xb4\x4f\x68\x8f\x74\x40\x73\x18\x80\x49\x37\x2f\xe4\x33\xc1\x59\x06\x2a\xac\x36\x8d\xe6\x59\xad\x0f\x9e\xf5\x7d\xe1\xb5\x3f\x59\xbe\x0f\xe6\x2e\x24\x46\x8f\xe3\x24\x9a\x20\xab\x6a\x55\xef\xc7\xeb\xf4\xf9\xa1\x9c\x6f\xb7\xb8\x7e\x94\x44\x2f\xab\x79\x88\xac\x1f\x01\x00\x00\xff\xff\x20\x54\xc1\x6d\x5d\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x79\x6f\x1b\xbb\x11\xff\x5f\x9f\x82\x08\x1e\x90\xa4\xe8\xae\x24\x3b\xe7\x02\x45\xa1\xda\xce\x8b\xf0\xec\x58\x95\x9c\xa2\x40\x5d\x04\x14\x39\x5a\x31\xe2\x92\x1b\x1e\x8a\x15\x37\xdf\xbd\xe0\xb1\xa7\xa4\x38\xcd\x4b\xf1\x9c\x20\xf1\x92\x33\xc3\xe1\xcc\x8f\x73\x61\x5a\x30\xad\x99\x14\x67\x52\xac\x58\x9e\x0d\x10\x2a\xb9\xcd\x59\xeb\x1b\xa1\xbf\x59\xc6\xe9\x39\xac\xb0\xe5\x46\x87\x25\x84\x88\x27\xb0\x0a\x1b\x26\x45\xb5\x88\x10\x2e\xd9\x3f\x40\x39\x89\x19\xda\x8e\xeb\x65\x10\xdb\x0c\xfd\xeb\xdf\xf5\xf7\x86\x09\x9a\x75\x05\x87\x13\x6b\x0a\x05\x5a\x5a\x45\x40\x37\xb2\x11\xe2\xac\x60\x46\x67\xe8\xfe\x6b\x6b\x51\xc1\x27\x0b\xba\xb5\xec\xc5\x5e\x6f\x41\x29\x46\xe1\x07\x15\x6e\x29\x58\x4b\x6a\x69\x38\x93\x74\xa6\x40\x83\xf9\x31\xe9\x94\x69\xbc\xe4\x90\xa1\x15\xe6\x1a\x7a\x87\x46\x83\x4c\xba\xae\xf1\x44\xb2\x04\xa1\xd7\x6c\x65\x52\x26\x87\xd3\x02\xe7\x30\x93\x9c\x91\xdd\x0f\x3a\xe5\x0e\x88\x75\x94\x73\xcb\xdb\x76\x4e\x50\x81\x0d\x59\x7b\xf9\x13\x21\xa4\xf1\xe2\x3a\x8e\x48\xd0\x06\x76\x19\x62\x8e\x44\xa7\x1d\xb5\x28\x88\x5d\x52\x8b\x6e\xf1\x20\xb4\xc5\xdc\x42\x86\x1e\x1b\x65\xe1\x71\x6b\x47\xe0\x02\xb2\x46\x9d\x84\x82\x60\x40\x5b\x04\x52\xcc\x0f\xc1\x21\xa9\x51\x92\xa1\x52\x52\x7d\x64\x6b\xe9\xbc\xa8\x3b\x88\xf9\x08\xc4\x64\xc8\xe9\xd1\x5a\xd6\x1b\x56\x5e\xfb\x93\xb8\xd7\xe3\x0d\x66\xdc\x2a\xe8\xd1\x05\x27\xb5\x8c\x1f\xfd\x83\xf3\x5c\x41\x8e\x8d\x54\xad\xb7\xa4\xe4\xdd\xee\x8c\x33\x10\x66\x2a\x56\x32\xe8\x4e\x40\x99\x37\xcc\x79\xbf\x61\x49\x56\x4a\x0a\x93\x78\xfa\x94\x28\xe3\x09\x37\xb0\xfb\x26\xdd\x06\x76\x03\x5c\xb2\x4b\xd8\x02\xd7\xd9\x20\x71\xbe\xed\xb9\x1a\x5b\xb3\x6e\xd4\x89\x2f\xe5\x2d\x60\x0a\x2a\x2a\xe3\x95\x3b\x9b\x64\xa8\x25\x39\x21\xb8\x56\x22\x12\xc8\xa2\x90\xe2\x1d\x2e\x2a\x07\x24\x47\x94\x1a\x04\x60\x19\x85\xc3\x29\x33\x05\x2b\x76\xd7\x70\xfd\x33\x99\x43\x21\x0d\x24\x17\x8e\x26\xf1\xab\xb9\x92\xb6\x0c\xe4\xfb\x74\xbf\xba\x4d\xbf\x68\x35\x28\x87\x94\x63\x94\xef\x35\xa8\x01\x91\xc2\x28\xc9\x39\xb4\xbc\x00\x1c\x48\xf3\x20\xb8\x24\x9b\x77\x1e\x70\x35\x6c\x93\x02\x6b\x03\x2a\x69\x98\x1d\x5a\x34\xa8\x2d\x23\xb0\x70\xff\x89\xfc\x0c\x54\x7c\xec\x9a\xe5\xa2\x32\x5f\xdb\x9b\x91\x3e\x09\xfb\xb5\x01\x5b\x7e\xec\x51\x38\xff\xb5\x8e\xcc\xd0\xe3\x3f\x3d\x1e\x10\xa9\xf4\x84\x73\xf9\x19\xe8\xb5\x62\x39\x13\xde\xb3\x4f\xfe\xca\x9e\x0e\x87\xe3\x93\x97\xb7\xe9\xc8\xff\x1d\x3f\xc9\xfe\x73\xfb\xe5\x69\xbd\xc5\x25\xc1\x7c\x2d\xb5\xe9\xad\xdf\xdf\xa3\xbf\x5b\x69\xe0\x0a\x0c\x46\x4f\x98\xa0\x70\x87\xd2\x2b\x7f\xdd\x74\x3a\xd3\x68\xf4\x34\x5d\x18\xc5\x44\x8e\xbe\x7e\xed\xb1\x6e\xec\x12\x94\x00\x03\xfa\x36\xa5\x21\x26\x3d\x4c\x71\x9b\xea\x2d\xb9\x4d\x09\xb7\xee\x88\xdb\xd4\xeb\x75\x94\xed\x5b\xca\xa6\x17\x77\xc6\x39\x9c\x07\x6d\xdf\x4a\x6d\x9c\xf7\xf7\xf5\xac\xdd\x78\x4c\xcd\xae\xd8\x78\xf9\xff\x45\x9e\xbf\xd4\x77\xde\xbd\x47\x36\x7e\x79\x72\x9b\x9e\x1e\xf6\xd9\x91\x83\x1e\xb0\x5e\xcd\x15\xd7\xa9\xd0\x0d\xd4\x97\x4c\xd0\x09\xa5\x0a\xb4\xce\xd0\x28\xf5\x7f\xb2\x57\xa3\xe7\xa7\x71\xef\x1d\x98\xcf\x52\x6d\x32\x64\x48\xf9\x6c\x00\x86\xd0\x6e\x74\x22\x38\x43\xe1\x31\xa4\x6e\xb3\x09\x04\x0d\xcc\x3b\xdb\x9e\x39\x92\xd4\x30\x3f\x40\xe1\xa0\x8e\x90\x55\xdc\x3f\xdb\x04\xad\x8d\x29\x75\xe6\x5d\x73\xc0\x21\xd9\xc9\xe9\xcb\xd7\x5e\xbb\x85\x91\x0a\xe7\xd0\x5c\xb0\x31\x7b\xdc\x0a\x01\x26\x6b\x6d\xa4\x4c\x1e\x22\xec\x66\x40\x67\xc5\x85\xb3\x62\x4f\x4c\x3b\x95\x1d\x20\x6b\x0b\xf1\xc9\xaf\xd1\x6c\x25\x55\x81\x4d\x86\xae\x26\x8b\x9b\x8b\xf9\x87\xeb\xf9\xc5\xaf\x1f\xde\xcf\x2f\x93\x5f\xee\x89\x2c\x4a\x29\x40\x98\xaf\xd9\x2f\xf7\xdb\x20\xc1\x55\x2a\x1c\x1b\xd0\xa6\x2a\x02\x58\x3f\xa3\x38\xa1\x4c\x84\x37\x30\x87\x9c\x69\xa3\x76\x95\x91\x32\x44\x25\xd9\x80\x4a\x54\xdc\xa8\x10\xe4\x00\x94\x3d\x1f\x8d\x46\x83\x90\xa7\x82\x71\x63\x8a\x72\x36\xe1\x60\xf6\x5d\x4e\x70\xb2\xb4\x82\x72\x38\xe6\xed\xc8\xf9\x6d\x87\xf7\x88\x82\xcf\x4b\xa9\x4c\x86\xc6\xa3\x93\xe7\xa3\x41\xe3\x93\xb6\x5a\x4e\x09\x5c\x32\x17\x67\x41\x4d\x54\x6e\x0b\x10\x55\x9d\xa9\xac\x30\xac\x80\x84\xb4\xca\xd1\xc4\x51\xeb\xa1\x06\x63\x98\xc8\x75\xba\x79\xe5\x5c\x3e\xdc\x8e\x31\x2f\xd7\x78\xfc\x97\x3a\x5b\xeb\xe0\xb3\x64\x89\xc9\x06\x04\xad\xb8\x1d\xae\x4e\x3b\x04\x05\x50\x86\x13\xb3\x2b\xa1\x39\xa1\xe4\x8c\xf8\xba\x67\xb8\x15\x34\x6d\xa1\xab\x54\xd2\xc8\xa5\x5d\xc5\xec\x28\x2d\x75\x99\x6f\xcb\xea\x94\x9a\xa0\x47\xf8\x8b\x55\xf0\xa8\x45\xd1\xd5\xff\xd1\x10\x0c\x19\x7a\xa2\xf0\x6f\xea\xf6\x1d\x7d\x93\x0e\x7a\x86\x88\x21\xc1\xa7\x0e\x26\xf2\xc4\x79\x28\x59\x39\xeb\x77\x64\x4a\x9f\x32\x86\xc1\x21\xc3\xf0\x7a\x1f\x1d\x14\xb0\x81\xdd\xf7\xf0\x6f\x60\xf7\xe8\xff\x72\xd3\x22\x22\xc0\x0a\x07\x8f\x7a\x61\x3a\xcb\xd0\xfd\xfd\x43\x99\xca\xe3\x8a\x5e\x6c\x99\xcf\xeb\x37\xac\x00\x69\x4d\x86\x84\xe5\xfc\xe1\xaa\x2b\xa2\x35\x56\x3a\x6d\x40\xef\x43\xba\x43\x14\x00\xad\xc9\x1a\xa8\xed\x78\xa8\x3a\xb8\xde\x0a\xc0\x0e\x92\x0e\xd8\xb5\xa6\x4b\x3f\x6a\x5f\x22\xc7\xc2\x40\xbf\x93\x14\x66\x52\x99\x39\x16\xb9\x2b\x94\x1f\xb7\xf6\x16\x76\x29\xc0\xd9\xea\xe5\x49\x7a\xea\x03\xfb\x70\xfc\xc2\xed\xbb\xf2\x9c\x38\xce\x50\x9e\xb9\x36\x2b\x1a\xd7\xab\xed\x01\x04\x31\x97\xfe\x56\xe3\xf8\x2c\xd6\x75\x42\x84\xe2\xa8\xd7\x2f\x61\x42\xa0\x74\xdb\x06\x84\xb9\xd9\x95\x4e\xf0\x77\x3c\x8a\x3f\xb7\x69\xe2\xe5\x10\x5a\x5a\xe5\xe2\xdc\xb3\xd1\x68\x10\xbb\x94\x4a\xea\x77\x09\xf5\x4c\x9f\x4a\x9d\xa1\x13\x2f\x61\xff\x32\xee\xb7\x18\x4c\x82\xd1\xea\x30\x7e\x29\x65\xe9\xde\xff\x1f\x70\xdd\x17\xbf\xfb\xba\xa7\x5e\xc2\xde\x5d\xda\xb7\xed\xd7\xb0\x5e\x60\x78\x83\x11\x05\x33\xbb\xe4\x8c\xbc\x9f\x5f\x66\x9d\xac\x7b\xb4\xba\xca\x5a\x39\xd9\x61\xd1\x3d\x37\x11\xca\x86\x26\x5e\xc7\x68\x12\xcb\x89\xb3\xe9\xf9\xdc\xc5\xf8\x74\x7c\xf2\x2a\x00\xf3\xd9\x1e\x4d\x4c\xfc\x84\x51\xb5\x4f\x8a\x90\x2b\x5d\x03\xc2\x2f\x41\xe4\x66\x9d\xa1\xd7\x2d\x4f\x4f\x67\xad\x93\xa2\xa4\x58\xdd\x0c\x9d\x89\x0e\x73\x47\xad\x67\x7e\xa0\x11\x4a\x7e\x05\x74\x8d\x4d\x53\x43\x25\x72\xab\x13\xed\x39\x9b\xa7\xd6\xbd\x55\xe7\xb9\xc9\x6e\x43\x85\xb5\x06\xf3\x13\x0c\x3c\x24\x52\x68\xc9\x61\x38\x70\xdd\x10\xf6\x40\xad\xa3\x68\x01\x66\x2d\x69\x86\xb0\x35\xae\x24\x61\x14\x84\x61\x66\x37\x8b\xa1\x58\x67\x83\xfb\xfb\x04\xb1\x15\x4a\x2f\x04\x5e\x72\x98\x4c\xce\x27\xd6\xac\x1d\x55\x00\x9a\x8f\x97\x49\xec\xb2\x27\x2e\x0a\xa3\xc9\x79\x80\xe6\x1a\x73\x0e\x3e\xd6\x34\x93\x08\x2e\x73\x26\x5a\x4d\x6f\x81\xcb\x92\x89\xfc\x2a\xaa\x41\x38\x66\x85\xdf\xe8\x26\x83\x23\x63\x86\x50\x86\x5c\x97\x20\xa6\xe7\xd3\x9e\xea\x55\x0b\x15\x42\xf5\xb9\x8f\xfc\xa9\x57\x30\xdc\x3f\x9d\x4c\xce\x63\x1c\x3f\x0f\x51\xbf\x21\x5f\x00\x51\x2e\x1c\x1e\x65\x09\x04\x6d\x36\xcc\x8a\xd6\xf8\x80\xd1\xf6\xc4\x43\xdb\x65\xfd\x55\x2a\x58\x81\x52\x40\xdf\xc7\x8e\xb3\x4d\x68\x05\xfb\x64\xe1\x83\x5b\xae\x57\xfb\x34\x9d\x4d\x28\x30\xe3\xed\x5d\xbf\x10\xbf\xab\x8a\x38\x1a\xd0\x9a\xb5\x54\xec\x0b\x34\x48\xf2\xce\x48\x0b\x46\x94\xd4\x72\x65\xa4\xe0\x4c\xb8\x24\x5a\x0c\xfb\x17\xbf\x01\x81\xa3\xa1\x86\x1e\xa6\x27\xc3\x5a\x5e\x7d\x82\x91\x1b\x10\x3f\x49\xba\x97\xe5\xb1\x07\x82\x76\x30\x76\xe9\xda\x16\x54\x62\xad\x3f\x4b\x45\xfb\x48\xab\x81\xf5\x73\x81\xb6\x3a\x96\x6d\xd7\xc6\x6b\x42\x3b\x80\x7c\x7b\x33\xf3\x8b\xb3\xa8\xe4\x01\x68\xc6\x24\x3a\xd9\x2f\x8f\x7f\x5e\x60\xad\x64\xfd\x5e\x29\x1a\x7a\x53\xdc\x7a\xe9\x0a\xdf\x4d\x72\x58\xb8\x9c\x40\x5d\x4a\xa9\xb2\x52\xdc\x0e\x61\x51\x6b\xd1\x5e\x0c\x4f\x47\x1f\xaf\x5f\x02\x59\xa2\x03\x5d\xba\xc3\x85\x03\xb4\x07\x44\x5b\x05\x97\x55\xb5\xbe\x71\xcb\x3d\x35\x5e\xbd\xa8\x8a\x81\x1a\xa3\x87\xc8\x9e\x8f\x46\x83\x12\x5b\xed\x50\xd8\x8c\x49\x42\xa8\x2a\x7b\xad\xd2\x52\x4a\xa3\x8d\xc2\x65\xe8\xa1\x8e\x2a\x1f\xf8\xaa\xca\xab\xce\x04\x53\xb1\x52\x58\x1b\x65\x89\xb1\x2a\x94\x52\x25\x26\x9d\x29\x11\x73\x24\x6d\x9e\xc5\x1a\x2b\xa0\xf5\x68\xf2\x10\xd3\xa0\x54\xf2\x23\x90\x56\x40\x8f\x8d\x9a\x2b\xd8\x16\x7e\x32\x25\x55\x86\x84\xa4\x90\x28\xc9\x21\xed\xf4\xb1\x43\xd7\x3a\x5a\x03\x55\x4f\x13\x85\xcd\xc3\x1c\xef\x0a\xb4\xc6\x75\x9d\xd8\xdd\xbb\x81\xa2\x74\xfd\x65\x5d\x44\x12\xab\x98\xd9\x4d\x38\x97\x04\xbb\x23\xc3\x8b\x23\xba\x5e\x89\x35\xa7\x1e\x65\xc3\x93\x6a\xf3\x12\x2f\x81\xeb\x19\xa8\x59\x10\x9e\xa1\xe7\x61\x14\xc7\x68\x9f\x6f\x3c\xaa\x7e\x92\xf1\xeb\xea\x67\xe8\x57\x07\x4a\x5a\xd7\xaa\x35\x36\xd0\x76\x49\x65\x81\xdd\xeb\xbf\xb9\xb8\x9a\xcd\xaf\xdf\xdf\x5c\xcc\xa7\xb3\x54\xb0\xd2\xf5\xdd\x31\x0f\x4f\x08\x71\xed\x41\xc3\xe6\xc7\xff\x01\x9c\x73\x17\xa2\x41\x10\xd0\x4d\xea\x2a\xb0\xc0\x39\xd0\x7a\x4a\x99\x54\xb6\xf6\xbf\xfb\x29\xb0\x7f\xd8\x6e\xbd\xe4\x72\xf7\xc0\x2b\x2f\x15\xdb\x62\x03\xbf\xf5\xa6\x77\x38\x68\xe5\xea\x35\xbf\x5f\xf5\xb9\x3e\x1a\x44\xe2\x78\xfc\x1e\x87\xa7\xf1\x0c\x3a\x4c\x15\xab\xfe\xe4\xe0\xdc\xe6\xe0\x4b\xdf\x9f\xe2\x1c\xe8\x6d\xb4\xef\xa5\xab\x66\xbe\x1e\xf1\xd6\xd3\x9c\x7e\x9b\x13\xe9\xc3\x4d\x0a\x7c\x17\x41\xa4\xa7\xe2\x0d\x67\xf9\xda\x84\x97\x58\x0f\x90\x63\xc3\xd5\x0d\x2a\x5b\xc9\x6d\xd1\x9a\x87\xd0\x9d\xc0\x05\x23\x3e\xa0\xba\x68\xc1\x44\x1e\xea\x13\x1a\x43\xfe\x7f\x03\x00\x00\xff\xff\x2a\xb2\x27\xe9\x7c\x1a\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x16\xa5\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x5a\x85\xda\x5a\x25\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x24\x15\xae\x79\xc9\x48\x0a\x00\x01\x00\x00\xff\xff\x58\x97\xb9\x86\x74\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x6d\x6f\xdb\xc8\x11\xfe\xee\x5f\x31\x90\x03\xa8\x45\x23\xa9\x49\x0e\x68\x8f\x40\x3e\xe8\x7c\x4c\x6c\x5c\x6c\x19\x92\x5c\x24\x2d\x0a\x62\xc9\x1d\x8a\x5b\xaf\x76\x78\xbb\x4b\xc9\x3a\xc3\xff\xbd\x18\xee\xea\x8d\x7e\x89\x2f\xfa\x24\x8a\x33\xcf\xcc\xce\x3c\xf3\xb2\x1a\x0c\x06\x27\xa7\xf0\xe9\xe2\xeb\x65\x9a\xc0\xd8\x6c\x7c\xa5\xcc\x02\x72\xd4\xb4\x06\x65\x40\x68\x3d\x28\x44\xed\xa0\x12\x0e\x94\xef\x3b\x58\x09\xdd\x20\x58\xac\xb5\x28\x50\x42\xbe\x01\x87\x92\x45\x7d\x85\x27\xa7\x10\x3f\x54\xa3\x71\x95\x2a\xfd\x52\x38\x8f\xd6\x15\x56\xd5\x7e\xe8\x2a\x58\x57\xaa\xa8\x40\x39\x30\xe4\x41\x49\x14\xfa\x2d\xac\x11\x5c\x45\x8d\x96\x50\xaa\x3b\xf0\x95\xf0\xc3\x13\x4d\x85\xd0\x41\x39\x39\x01\xa8\xc8\x79\xc7\x5f\x00\xda\x37\xfc\x7c\x02\xb0\x12\x36\xfe\x2a\x8c\x53\xb9\xc6\xac\x20\x63\xb0\xf0\x8a\x4c\x12\x24\x8f\xde\xd6\x1b\x5f\x91\xc9\x94\xf1\x68\x6b\x8b\x0c\x0e\xa3\xc6\xd9\x51\xae\xcc\x28\xbc\x7c\x7f\x72\x72\x74\x80\x4c\x39\x06\xf5\x42\x19\xb4\xea\x0f\x94\x09\x7c\x12\xda\x61\x47\xaa\xd0\x0a\x8d\xcf\x72\x65\x84\xdd\x1c\x80\x52\xf1\x08\x6f\x29\x16\x98\x79\xb1\x48\xa0\xb7\xfa\x57\x3a\x9d\x5d\x4c\xae\x7a\x41\xe8\x14\xae\x26\xf3\x34\x81\x79\xa5\x1c\x14\x95\x30\x0b\x74\x1c\xda\x0f\xc3\x77\x7f\xff\x1b\x08\x23\x43\x0a\x84\xd6\x50\xd0\x32\x57\xa6\x8d\xbc\x27\x10\xe0\x94\x59\x68\xe4\x80\x28\x91\x6b\x8c\x70\xe1\xd3\x18\x89\x96\xf3\x03\x46\x2c\xf1\xc0\x95\x35\xe6\x7c\x36\x47\x1a\xa3\x5b\x2c\xd0\xf1\xf7\x50\xa8\xb6\x58\xaa\xbb\x04\x7a\x17\x97\xe3\xcf\x69\x76\x3d\x4d\x3f\x5d\x7c\x1d\xf5\x5e\xd0\xd8\xc3\xee\xb4\xe6\xdf\xae\xd3\xc1\x1a\xf3\x41\x94\x79\x49\x7d\x85\xd6\xb5\xb9\xec\x86\x8a\x2c\x2e\xb2\xc6\xea\x2c\x72\x04\xfa\x97\xe3\xd9\x3c\x9d\x66\x93\x69\xfa\x39\xbb\x99\x7e\x19\xbc\xb9\x2f\x68\x59\x93\x41\xe3\x1f\x92\x37\xf7\x11\xe9\xa1\xdf\xb1\x16\xf4\x33\x89\xa5\x68\xb4\xcf\x5c\x93\x4b\x5a\x0a\x65\x12\xe8\xcf\xd3\xcb\xeb\xe9\xe4\x66\x9e\x4e\x2f\xae\x87\x46\xd5\x43\x45\xfd\x6d\xa2\xda\x8a\x89\xdf\xdb\x74\x45\x06\xe7\x08\x7e\x53\xe3\x47\x65\x4a\x2b\xde\x42\xde\x78\xa6\x77\x25\x56\x08\x9e\x40\xab\x15\xc2\x5a\xf9\x0a\x2c\x2e\x14\x99\x20\x06\x25\x59\x30\xb4\x8e\x70\x39\x16\xa2\x71\x08\x54\x82\xc6\x85\x28\x36\x60\x51\x38\x32\xae\xe3\xb9\xa5\x86\x3d\x77\xa8\xb1\xf0\xc4\x21\x38\x04\xed\x9e\x93\xdf\x39\x6f\x37\x2f\xcb\x9f\xc2\x15\xb5\x65\x09\xeb\x6a\x03\x9e\x0f\xa6\x1c\x08\x90\xaa\x2c\xd1\xa2\xf1\x20\x85\x17\xed\x11\xc3\xe1\x94\x07\xd5\x75\xac\xb6\xb4\x44\x5f\x61\xe3\x32\x43\x12\x0f\x2c\xde\x47\x93\xfd\x04\xfa\xc1\xea\xc3\x36\xa0\x33\xf4\x30\xfe\xa3\xb1\x08\xae\xc6\x42\x95\xaa\x08\xa6\x38\x36\x5c\xed\x28\x61\x7b\x84\x8e\xb9\xf0\xf6\xe0\x80\x9e\x2c\x93\xae\xb6\xb4\x52\x92\xb9\xd1\x13\x0c\x9c\xe5\x9a\xf2\x2e\xd9\x9e\x53\xbe\x55\x46\x26\xd0\xa3\xfc\x7f\x58\xf8\xd7\x2a\xed\xcd\x64\xa2\x28\xa8\x31\x3e\x10\xbf\x3f\x4d\x3f\x5f\xcc\xe6\xd3\x6f\xd9\x6c\x3e\x99\x72\x0d\x8c\xff\x7d\x33\x4d\xb3\xf1\xd9\xd9\xe4\xe6\x6a\x7e\x35\xbe\x4c\xbb\xe9\x7a\xbd\x89\x5b\xdc\x7c\xd7\xc2\x6f\xe9\xb7\x1f\x30\xb0\x6b\x7b\x09\xf4\xb6\x72\x3f\x10\x0a\x8b\x42\x2f\x13\xe8\x15\x64\x71\xb8\x56\x46\xd2\xda\x0d\x0d\xfa\xde\x13\xb5\x14\x7f\x39\x17\x56\x42\x41\x12\x03\x05\x63\x7d\x0c\x8f\x64\xce\x1a\xcb\x84\xd4\x9b\xb6\xb3\x15\xba\xe1\x3a\x06\xe7\x85\x47\x10\x1e\x24\xd6\x9a\x36\x4b\xa6\xac\x57\x4b\x04\x49\x18\x86\x4e\xa8\x45\x6e\x86\x24\xd1\x45\xb0\xe0\x3f\x5a\x94\x5c\xa6\xfc\x36\xf4\x85\x50\xac\x5a\xe4\xa8\x1d\x88\xba\xd6\x0a\x65\xdb\x88\x2d\x0a\xb9\x61\xd9\x1c\xe1\xf7\x06\xad\x42\x19\xa1\xc4\x42\x28\xe3\x3c\xfb\xc0\x38\x35\x29\xe3\xdb\xf9\xc8\x5e\x84\x39\x19\x9d\x6b\x47\x5d\x10\xd2\x62\x93\x13\xdd\x3a\xb0\x8d\x19\xc2\x58\x3b\x7a\x1b\xe1\xf8\x75\xa8\xf4\x76\xe8\xaa\x42\x40\x9b\x76\x88\x1d\x0b\x7a\xa5\xd0\xda\x41\x2e\x8a\xdb\x1e\x3b\xf4\x8e\xfd\xb4\x54\x5b\x25\x3c\xea\x0d\xac\x2b\xb4\x08\xc2\x1d\xe2\xc5\x6c\xed\x10\x35\x2d\xb8\xde\x62\x88\x86\x30\x6f\x75\xd6\x82\x67\x8d\x23\x90\xca\x15\x8d\xe3\xf6\x09\x22\x27\xae\xfa\x32\xa2\x85\x79\xb4\xb7\xc7\x0e\x48\x0a\x59\x8b\x7d\xae\xb5\xe0\xe0\xe3\x47\x08\xcd\xae\x0d\xfb\xae\xc9\x31\x40\xc4\xaa\xd1\x96\x58\x70\x42\x4b\x14\xed\xbc\x66\xb4\x36\x5d\xc2\x1c\x28\xc7\xf3\x57\x6a\x51\xb5\x63\x4d\x6c\x63\xea\x94\xdd\x65\x61\x6b\xf7\x98\x33\x53\x5c\x29\xa7\x3c\x68\xc1\xf1\xfc\x4b\x4d\x8e\xed\x6c\xb8\xc1\x09\x5c\x92\x71\xe8\x81\x2c\xbc\x21\x5f\xa1\xfd\xeb\x33\x54\x0f\x6d\x77\x6b\x20\x81\x77\xdf\x29\x89\x43\xc9\xe7\x3b\x65\x4b\xdc\x04\x7a\xb5\x45\x87\xe6\x51\xcb\xe9\xf6\x54\xbc\xab\xc9\xb2\x1f\x61\xc0\xee\xe6\x64\xff\x7a\x3a\xb9\x4c\xe7\xe7\xe9\xcd\x2c\x4b\xbf\x5e\x4f\xa6\x3c\x13\xe3\xe8\xec\x77\xcd\x1f\x0d\x6a\xe3\xbc\xd0\x3a\x81\xb9\x6d\xf0\x05\x3f\x83\xbd\xd7\x2d\x02\xfb\x1a\xcc\x78\x62\x24\xd0\x1f\x5f\xcd\x2e\x7e\xf9\x92\x66\xbf\xa6\xd7\x5f\x26\xdf\xda\x55\x20\x7a\xb5\x5d\xd1\x1c\xda\x95\x2a\x30\xcb\x2d\xdd\xf2\xf1\x8e\xdc\x3a\x86\xdf\x8a\x16\xc2\x0b\x4d\x8b\x17\x5d\x3b\x58\x3d\xba\x5e\x3e\x0d\xb3\x8f\xe8\x6a\x17\xbe\x27\x37\x07\xf4\x85\xe4\x4d\xc4\x25\xf0\x9f\x5e\xe5\x7d\xed\x92\xd1\xe8\x7c\x32\x6b\xdb\x7a\xf2\xfe\xc3\x3f\x7e\xee\xfd\x37\x1c\xd1\xe3\xb2\x66\xe6\x75\xcf\xf8\x52\x30\x9f\xd3\x79\x6e\xaf\xda\xca\x0f\xa2\xfc\x20\xc8\xbf\x0c\xf6\xec\x96\x75\xb4\x90\x2a\x07\x16\x65\x63\xa4\x30\x3e\x0c\x7f\x8b\xbf\x37\x2a\xf6\xcc\x4a\x18\xc9\x0b\x68\x80\x02\x77\x8b\x6b\xc8\xd1\xaf\x11\xcd\xd1\x32\xba\x8b\xdf\x20\x66\x9c\x7b\xe2\xc4\xaa\x05\xdf\x36\x8c\x84\xc9\xd9\x75\x27\xce\x78\x27\x96\xb5\xc6\xb0\x86\x33\x97\x0e\xdc\x9d\x9d\x4f\xa6\x73\xe6\x77\xaf\x4b\xd9\x82\x8a\xdb\x5a\x6d\x39\x78\x18\xe5\xb3\xc9\xd9\x6f\xd7\x17\xf3\xe7\x48\xfb\x48\x31\x17\x0e\x63\xa0\xb7\xaa\xbf\x8c\x67\x29\xa7\xf7\xbb\xba\x7b\x57\xb7\xaa\x4f\x07\xf8\x57\x6a\x67\x93\xc4\x52\x19\xfc\x6e\xcf\x01\x47\xfb\xd9\xe1\x85\xbb\x85\x52\xed\x76\xfe\x20\x3b\xdc\x2c\x35\x28\xe3\x94\x0c\xc3\xae\x0b\x09\x96\x34\x42\x69\x69\xf9\x44\x46\xd6\x4a\xeb\xed\x34\x6b\x3c\xd5\x54\x37\x4c\x1b\x5e\xf6\x1a\xbe\x68\x3c\x89\xd8\xdd\x47\xdb\x6c\xf2\x68\xdc\x28\xb3\x38\x18\x3e\xa6\x59\xe6\x68\x79\xbb\x3d\x98\x07\x5d\xba\xed\x6f\x32\x2e\x5e\x46\x85\x65\xa6\x78\xb4\x46\x68\xe6\xdb\x63\xaf\xd9\xde\x1a\xfb\xf6\xf8\xf2\x13\xb6\xc0\xe8\xf4\x12\xda\xc1\xc6\x37\xa6\x15\x29\xd9\xfa\xa3\x4c\xc1\x9b\x04\xef\x1b\xce\xb3\x5b\xa5\x28\x3c\x94\xca\xc8\xad\xdf\x3b\x53\xe1\xaa\x09\x7c\xf9\x5a\x92\xd9\x3e\xf1\xb3\x29\xd5\xa2\x25\x4a\x02\x23\xf4\xc5\x88\x5a\x42\x8f\x76\x12\xaf\xe4\x70\x10\xde\x5f\x7b\xe3\x11\x9a\x5c\xab\x62\xd7\xa9\x1b\xab\x13\xd8\x75\x9a\xfb\x7b\x18\xa6\x77\x21\x2e\x97\xad\xe2\x39\xb9\x76\xef\x84\x87\x87\xe4\x9f\x3f\xfd\xf4\x61\x74\x74\xcf\x3a\x00\x14\xb5\xfa\xd3\x60\x7b\x90\xd7\xf4\x3d\x38\x8d\xff\x2c\x5c\x11\x68\x32\x0b\xb4\x60\x10\x25\xef\x50\x8e\x43\xfd\x28\x89\x83\x0f\xc3\x9f\x87\xef\xdf\x0f\xde\xc5\x9b\x53\xdf\x62\x5b\x18\x64\x02\xe1\xb7\xed\x65\x83\x3e\x3a\xc2\xf4\xd9\x87\x8a\x9f\xe2\xce\xbd\x75\xa5\x7f\x72\x42\x14\x9b\xb5\xcb\x3c\x65\x21\x5b\xcf\xfe\xab\xf0\xff\x00\x00\x00\xff\xff\x14\x49\xa7\xb3\x12\x11\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x95\x31\x8f\xdb\x38\x10\x85\x7b\xfd\x8a\x87\xbd\xc2\xcd\x79\xbd\x8b\xeb\x04\xdc\x55\x97\x00\x5b\x04\x29\x92\x22\x40\x10\x08\x14\x35\xb6\x08\x53\xa4\xc0\x19\xae\x63\x60\x7f\x7c\x40\x89\x92\x17\x0b\x7b\x6d\x21\x45\x3a\x9b\xd2\xbc\xf7\x71\xe6\x89\x5c\xc3\xa9\x8e\x4a\xfc\x4f\xbd\xf5\x47\x7c\xee\xc9\x7d\x69\xcd\x56\x60\xdc\x36\x28\x96\x10\xb5\xc4\x40\x38\xf8\xb0\xb7\x5e\x35\x05\xd0\x7a\x16\x2e\x61\xbd\x56\xb6\x53\x2c\x14\x0a\x60\xa7\xa4\xa5\x50\x6d\x95\x4e\xcf\xb6\xca\x32\x15\x05\x20\x8a\xf7\x5c\x16\x00\x30\x39\x3d\x75\xbd\x0f\x02\xdf\x93\xe3\xe4\x54\xd5\xde\x0b\x4b\x50\x7d\xa5\xa2\x78\xd5\xf7\xc1\x3f\x53\x40\xf0\x96\xb0\x0d\xbe\x3b\xbd\xba\x56\x8e\x4d\x6d\x09\xe2\xd1\x8c\xc0\xce\x37\x84\x59\x01\x49\x01\x93\xc4\x60\x0b\x98\xc1\xb0\x4a\x7a\x65\x5e\x42\x66\xb9\x06\x51\x9c\x23\x57\xae\x41\x64\x42\xf0\x51\x28\x0c\x5b\xc4\xd6\x5c\x86\x3d\x99\xa4\xce\x51\x33\xec\x6c\x09\xdb\x58\x36\x3f\x1e\x7a\x5a\x25\xb3\x32\x33\xdc\x1f\x3b\xfb\x3e\x2a\xed\x0c\x4b\x38\xfe\x61\xd8\x4c\x71\x11\xf7\xa4\x72\xa0\xba\xd2\xde\x71\xca\xc0\x6d\x41\x38\x50\x8d\x5c\xb1\x04\xf7\x95\xd1\x88\xf4\x17\x3e\x3e\x7d\xfb\xf4\x01\x6b\x7c\x6d\x29\xd0\x8a\xa1\x10\x94\xa6\x24\xde\x18\x31\xde\xe1\x90\x1e\x40\x5a\x1a\x3f\x12\x58\x55\x93\x85\x61\xb7\x92\x94\x3d\x6b\xa8\x81\xf8\xac\x36\x37\x62\x7e\x7d\x88\x6c\x13\x83\x71\x3b\x68\x1b\xd3\x07\x84\x7a\xf8\x17\x7b\x18\xf7\xa6\xee\x5a\x44\xff\x86\xb4\x86\x61\x18\x7d\xf0\xb5\xa5\x4e\x89\xd1\xa8\x49\xab\x34\x78\x69\xe9\xa2\x5e\x1f\x7c\x47\xd2\x52\xe4\xb1\xc5\xba\x25\xbd\xe7\xd4\x52\x72\x1c\xc7\x1d\x06\x4a\xca\x99\xf9\x60\xa4\xbd\xb8\x2b\x26\x4b\x5a\x7c\x40\xec\x37\xea\x59\x19\xab\x6a\x4b\x1b\xd6\x2d\x35\x71\xf8\x7d\x9f\x27\xce\x2d\x59\x5b\x62\xb5\x89\x1c\x36\xb5\x71\x1b\xaf\xb1\x23\x19\x2c\x18\x6b\x8b\xbb\x94\x13\xef\xfe\x1d\x74\xef\xf0\x82\x83\xc6\xda\xae\xf2\x08\xc7\x10\x51\x48\x71\xe2\x68\x25\x2f\x47\x27\xc6\x4e\x6b\xf7\x2c\x8d\x8f\x52\x59\xe3\x88\xbf\x3f\xfc\x78\x31\x4e\xf0\x1f\x1e\x67\x09\x09\x86\xb8\xc4\x3f\x0f\x79\xa5\x21\xab\x8e\x25\x1e\x1f\x8a\x2b\xb9\x7c\xdb\xb3\xab\xb1\x3c\x15\x2c\x49\xe5\xab\xaa\xf7\x79\x98\xc2\xb3\xd1\x54\x69\x25\xca\xfa\xdd\x8d\x50\x69\x6a\xb9\x12\xb9\x72\x09\xdd\x1b\xd3\x0b\x27\xcf\x60\x3a\xbf\x5b\x07\xbf\xbf\xf9\x50\x4f\x7c\xd3\xea\xc4\x39\x0a\x5c\xc7\x3c\x6f\x7c\x96\x51\xa8\xeb\xad\x92\xdf\x80\x9c\x14\x16\x53\x5e\xb0\xbe\x32\x6d\xfa\xa9\xba\xde\xd2\xad\xd9\x4b\x84\x53\xc9\x92\xf9\xce\x35\xef\xd3\x8c\x27\x7d\x35\x6d\x65\x09\x55\xbe\x5b\xe6\xd2\xe5\x17\xcc\xc9\xf6\x2c\xa5\xf6\x7a\xdf\x1b\xa9\xa2\x59\x40\x35\xdf\x92\x37\xdf\x23\xd9\x66\x1d\x4d\xf1\x2b\x00\x00\xff\xff\x57\x93\xda\x47\x49\x09\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4b\x6f\x1b\x37\x10\xbe\xf3\x57\x0c\x94\x1c\xab\x7d\xc8\x4d\x03\x10\xc8\xc1\xf5\x23\x35\x8a\x24\xaa\x6d\x14\xed\xa9\xe0\x92\x23\x89\x15\x97\xc3\x0e\xc9\x75\xd4\xc0\xff\xbd\x20\x57\xf2\x03\xbd\xb4\x97\x05\x38\x8f\x6f\xbe\xf9\xf6\x1b\xe5\x1c\x3d\x5c\xda\xa8\x06\x87\xe6\x92\xf4\x1e\x59\xc2\x46\xb9\x88\x42\x05\xfb\x2b\x72\xb4\xe4\x25\x4c\xbd\x30\x3e\xfe\x68\xbd\x39\x37\x86\x31\x46\x09\xfd\xea\x7d\xd3\x35\x5d\xd3\xcb\x77\x67\x25\x79\x8b\x3a\x73\xb4\x13\xde\x62\x24\x37\x5d\x90\xdf\x48\x68\x31\xe9\x96\xd8\x6e\xad\x6f\x3d\x19\x6c\xb9\x26\x1b\x4d\x7e\x53\x9a\x2e\x69\x54\xd6\x4b\xd0\x2e\xc7\x84\xdc\x38\xd2\xca\x95\xc4\xcd\x5a\x42\xff\x7e\xd5\xf4\x65\x48\x2f\x4c\x65\x56\x30\xed\x56\x0a\x00\xfc\x8a\xfa\x27\xe5\x8d\x43\xfe\xac\x46\x94\xb0\x58\x08\x1b\x52\xd9\x22\xde\x1d\xbc\x5e\x23\x5b\x32\x12\x16\x67\x5d\x5c\x08\x3b\xaa\x2d\x3e\x37\x6f\x88\x47\x95\x24\xdc\x7c\x3a\xff\x78\xf5\xc7\xfa\xf6\xea\xfa\xe6\xb7\x76\x7e\xdc\xff\xbe\xbe\x5a\xbe\xfd\xa6\x69\x0c\xe4\xd1\xa7\x47\xf9\xf6\xdb\x34\x8b\xf0\x28\x00\x9c\x4a\x18\x93\x84\xeb\x2a\xd0\xde\x7a\x23\xe1\x33\x99\x23\xb6\xd8\xe7\x01\x1d\xa6\x73\xde\xe6\x11\x7d\x8a\x65\x58\xd9\x7a\xe9\xd4\x80\xae\x3e\x97\x73\x80\xc9\x61\x53\xca\xd9\x63\xc2\xd8\x58\x6a\xcb\xcc\x9c\xf0\x43\xe2\x8c\xb5\x90\x71\x6b\xc9\x7f\x08\x6c\x47\xc5\x07\x01\xa0\x1d\x65\xb3\x0c\x4c\x93\x35\xc8\x33\xda\x42\xfd\x9d\x19\x17\x4f\x59\xfd\xb4\xe5\x12\x16\x55\xfd\x5a\x30\x7f\xab\xec\x0b\x31\xaa\xa2\xf5\x85\xb3\xe8\xd3\x05\x79\x8f\x3a\x59\xf2\x5f\x26\x64\xb6\x06\x2b\x4d\xa5\x35\x86\x92\x4c\xe8\xd3\xfd\x21\x60\x94\xa0\x42\x70\x56\xab\x52\xdb\x4e\xde\xbc\xa4\x1f\x98\x12\x0d\x79\xf3\xdd\xcb\x9a\x3f\x23\xf9\xc2\xeb\x19\xe4\x3f\x61\x08\x80\x21\x73\x51\x79\xd5\x75\x02\xe0\xaf\x50\xcc\xd6\x75\x47\xda\x3f\xe7\xe1\xf4\x2b\xab\x94\x15\x62\xde\x5a\x78\x4c\x0f\xc4\xfb\xb5\xcb\x5b\xeb\x67\x5f\x30\x9a\x9d\x4a\x2d\x05\xf4\x71\x67\x37\x69\x49\x53\x5c\xc6\x3c\x78\x4c\xe2\x0d\x1c\x1b\x66\x3c\x88\x89\xb3\x4e\x60\x7d\x62\x32\x59\xa3\x01\xeb\x61\x36\x2f\xf4\x4d\xd7\xfc\x00\xca\x1b\xf8\x72\x77\x05\x67\x4d\xd7\xac\xe0\x61\x67\xf5\x4e\xbc\x01\x83\x81\x51\x17\x6b\xc0\xbf\x18\x80\x1a\x68\xc2\x06\xee\x77\x08\xe9\x81\x20\xee\x28\x3b\x03\xa3\x4a\x7a\xd7\x88\x57\xf3\x8b\xee\x63\xca\x12\xfa\xef\xdf\x95\xc5\xff\xe7\x36\x81\xcc\x27\xe5\xed\x06\x63\x3a\xe1\x45\xe4\xc9\xfa\xed\x8d\xdf\x50\x01\x1f\x5e\x9e\x6f\x57\x8f\xb7\x93\x7d\xb7\xaa\xd3\x34\x72\xba\xb6\x0e\x25\x94\x2e\xe4\x46\x73\xaa\xae\xaa\x2e\x39\x97\xa0\xd5\x31\xb4\xc7\xc3\xab\xc2\x3d\x1e\xc4\x44\x2e\x8f\x78\x69\x19\x75\x22\x3e\x48\x68\x27\xc5\xad\xb3\xc3\xe9\xf8\x9f\x28\xcf\x27\xde\xcc\x0d\x51\x04\xa6\xaf\x87\x57\x07\x53\x23\xcb\x91\x0c\x96\x17\x14\x23\x9f\x2e\xfb\x38\xe6\x59\xae\x8a\xf5\x4b\xa6\xa4\xe6\xda\x80\x7c\x7d\xf7\x91\x29\x07\x29\xfe\x09\x00\x00\xff\xff\x9e\xdd\x05\x83\xda\x04\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\x1c\x37\x0c\xbd\xeb\x57\x10\x9b\x1c\xbb\xf3\xb1\x6e\x1a\x40\x40\x0f\xae\x3f\x52\xa3\x48\xb2\xb5\x8d\xa2\x3d\x15\x1a\x89\xb3\xab\xae\x86\x9c\x52\xd2\x38\xdb\x20\xff\xbd\xd0\xcc\xda\x8e\xd1\x4b\x73\x19\x40\x43\xf2\x91\xef\x91\xcf\x84\xc0\x0f\x97\x3e\x9a\x2e\xa0\xbb\x64\x7b\x40\xd1\xd0\x9b\x10\x51\x99\xd1\xff\x86\x12\x3d\x93\x86\xa9\x55\x8e\xe2\x4f\x9e\xdc\xb9\x73\x82\x31\x6a\x68\x37\x6f\xab\xa6\x6a\xaa\x56\xbf\x39\x2b\xc1\x5b\xb4\x59\xa2\x9f\xf0\x16\x23\x87\xe9\x82\xa9\xd7\x50\x63\xb2\x35\x8b\xdf\x79\xaa\x89\x1d\xd6\x32\x07\x2b\xcb\xd4\x97\xa2\x4b\x1e\x8c\x27\x0d\x36\xe4\x98\x50\xaa\xc0\xd6\x84\x12\xb8\xd9\x6a\x68\xdf\x6e\xaa\xb6\x34\x69\x95\x9b\x27\x2b\x98\x7e\xa7\x15\x00\x7e\x42\xfb\xb3\x21\x17\x50\x3e\x98\x01\x35\xac\x56\xca\x8f\xa9\xb0\x88\x77\x47\xb2\x5b\x14\xcf\x4e\xc3\xea\xac\x89\x2b\xe5\x07\xb3\xc3\xe7\xe2\x9e\x65\x30\x49\xc3\xcd\xfb\xf3\x77\x57\x7f\x6e\x6f\xaf\xae\x6f\x7e\xaf\x97\xc7\xfd\x1f\xdb\xab\xf5\xeb\xcf\x96\x87\x91\x09\x29\x7d\xd1\xaf\x3f\x4f\x8b\x08\x5f\x14\x40\x30\x09\x63\xd2\x70\x3d\x0b\x74\xf0\xe4\x34\x7c\x60\x77\xc2\x56\x87\xdc\x61\xc0\x74\x2e\xbb\x3c\x20\xa5\x58\x9a\x15\xd6\xeb\x60\x3a\x0c\xf3\x73\x0d\x82\x3b\xcf\xf4\xa3\xa7\x5e\x8c\x02\xb0\x81\xb3\x5b\x8f\xc2\x93\x77\x28\x4b\xca\xca\xfc\x93\x05\x57\x4f\x51\xfb\x34\xfa\x1a\x56\xb3\xa4\x73\xc2\xf2\x9d\xb5\x5c\xa9\xc1\x14\x01\x2f\x82\x47\x4a\x17\x4c\x84\x36\x79\xa6\x8f\x13\x8a\x78\x87\x73\x6f\x63\x2d\x8e\x25\x98\x90\xd2\xfd\x71\xc4\xa8\xc1\x8c\x63\xf0\xd6\x94\xdc\x7a\x22\x57\x15\x0a\x42\x98\x30\x56\xa3\x70\xe2\x2e\xf7\xdf\x7d\x9d\xf3\x57\x64\x2a\x73\x3d\x83\xfc\x2f\x0c\x05\xd0\x65\x29\xd2\x6d\x9a\x46\x01\xfc\x3d\x96\x0b\x6a\x9a\xd3\xd8\xbf\xe4\xee\x71\x3f\xb3\x60\x33\xc4\xc2\x5a\x11\xa6\x07\x96\xc3\x36\xe4\x9d\xa7\x65\xd9\x82\x6e\x6f\x52\xcd\x23\x52\xdc\xfb\x3e\xad\x79\x8a\xeb\x98\x3b\xc2\xa4\x5e\xc1\xa9\x60\xc1\x83\x98\x24\xdb\x04\x9e\x92\xb0\xcb\x16\x1d\x78\x82\xe5\x22\xa1\xad\x9a\xea\x07\x30\xe4\xe0\xe3\xdd\x15\x9c\x55\x4d\xb5\x81\x87\xbd\xb7\x7b\xf5\x0a\x1c\x8e\x82\xb6\xec\x1b\xfe\x33\x01\x98\x8e\x27\xac\xe0\x7e\x8f\x90\x1e\x18\xe2\x9e\x73\x70\x30\x98\x64\xf7\x95\x7a\xd1\xbf\xe8\x3e\xa4\xac\xa1\xfd\xfe\x4d\x21\xfe\x8d\x6c\x46\x76\xef\x0d\xf9\x1e\x63\x7a\xc4\x8b\x28\x93\xa7\xdd\x0d\xf5\x5c\xc0\xbb\xaf\x3d\xd9\xcc\x8e\x6c\x74\xdb\x6c\xe6\x6e\x16\x25\x5d\xfb\x80\x1a\x4a\x15\x4a\x65\x25\xcd\x57\x35\x5f\xc9\xb9\x06\x6b\x4e\xbf\x0e\x78\x7c\x91\x78\xc0\xa3\x9a\x38\xe4\x01\x2f\xbd\xa0\x4d\x2c\x47\x0d\xf5\x64\xa4\x0e\xbe\x7b\x74\xf4\xd3\xc8\x8b\x6f\xab\xa5\x20\xaa\x51\xf8\xd3\xf1\x85\x0b\xe6\x3f\xeb\x81\x1d\x96\x17\x94\x43\x7e\xb4\xeb\xa9\xcd\xb3\x5c\x33\xd6\xaf\x99\x93\x59\x72\x47\x94\xeb\xbb\x77\xc2\x79\xd4\xea\xdf\x00\x00\x00\xff\xff\xb9\x56\xc5\xa3\xaf\x04\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x8f\x1b\x37\x0c\xbd\xeb\x57\x10\x4e\x8e\xf5\x7c\x38\x4d\x03\x08\xc8\x61\xbb\x1f\xe9\xa2\x48\xe2\xee\x2e\x8a\xf6\x54\x68\x24\x8e\xad\x5a\x23\xaa\x94\x34\x1b\x37\xc8\x7f\x2f\xa4\xf1\x7e\xa1\x97\xf6\x32\x80\x44\xf2\x91\xef\xe9\x71\x94\x73\x74\x7f\x61\xa3\x1a\x1c\x9a\x0b\xd2\x07\x64\x09\xa3\x72\x11\x85\x0a\xf6\x57\xe4\x68\xc9\x4b\x98\x7b\x61\x7c\xfc\xd1\x7a\x73\x66\x0c\x63\x8c\x12\xfa\xcd\xbb\xa6\x6b\xba\xa6\x97\x6f\xdf\x94\xe0\x0d\xea\xcc\xd1\xce\x78\x83\x91\xdc\x7c\x4e\x7e\x94\xd0\x62\xd2\x2d\xb1\xdd\x59\xdf\x7a\x32\xd8\x72\x0d\x36\x9a\xfc\x58\x8a\x2e\x68\x52\xd6\x4b\xd0\x2e\xc7\x84\xdc\x38\xd2\xca\x95\xc0\xf5\x56\x42\xff\x6e\xd3\xf4\xa5\x49\x2f\x4c\x9d\xac\x60\xda\x9d\x14\x00\xf8\x05\xf5\x4f\xca\x1b\x87\xfc\x49\x4d\x28\x61\xb5\x12\x36\xa4\xc2\x22\xde\x1e\xbd\xde\x22\x5b\x32\x12\x56\x6f\xba\xb8\x12\x76\x52\x3b\x7c\x2a\x1e\x89\x27\x95\x24\x5c\x7f\x3c\xfb\x70\xf9\xc7\xf6\xe6\xf2\xea\xfa\xb7\x76\x39\xdc\xfd\xbe\xbd\x5c\xbf\xfe\xaa\x69\x0a\xe4\xd1\xa7\x6f\xf2\xf5\xd7\x79\x11\xe1\x9b\x00\x70\x2a\x61\x4c\x12\xae\xaa\x40\x07\xeb\x8d\x84\x4f\x64\x4e\xd8\xe2\x90\x07\x74\x98\xce\x78\x97\x27\xf4\x29\x96\x66\x85\xf5\xda\xa9\x01\x5d\x3d\xae\x97\x0b\x26\x87\x4d\x49\x67\x8f\x09\x63\x63\xa9\x9d\x54\x51\xe0\x7d\xe2\x8c\x35\x8f\x02\xfa\xb8\xb7\x63\x5a\x5b\x3f\xb2\x7a\xaf\x82\x8d\xc8\x33\xb2\x00\xd0\x8e\xb2\x59\x07\xa6\xd9\x1a\xe4\x05\x77\xa5\xfe\xce\x8c\xab\xc7\xa8\x7e\xe4\xbb\x86\x55\x7d\x87\x9a\xb0\x7c\xeb\x03\xac\xc4\xd2\xf3\xdc\x59\xf4\xe9\x9c\xbc\x47\x9d\x2c\xf9\xcf\x33\x32\x5b\x83\x75\x60\xa5\x35\x86\x12\x4c\xe8\xd3\xdd\x31\x60\x94\xa0\x42\x70\x56\xab\x92\xdb\xce\xde\x3c\x27\x12\x98\x12\x0d\x79\xfc\xee\x79\xce\x9f\x91\x7c\x99\xeb\x09\xe4\x3f\x61\x08\x80\x21\x73\xd1\x7b\xd3\x75\x02\xe0\xaf\x50\x6c\xd7\x75\xa7\xb1\x7f\xce\xc3\xc3\xa3\x56\x51\x2b\xc4\xc2\x5a\x78\x4c\xf7\xc4\x87\xad\xcb\x3b\xeb\x17\x87\x30\x9a\xbd\x4a\xed\x93\xac\x34\xc7\x75\xcc\x83\xc7\x24\x5e\xc1\xa9\x60\xc1\x83\x98\x38\xeb\x04\xd6\x27\x26\x93\x35\x1a\xb0\x1e\x16\x1b\x43\xdf\x74\xcd\x0f\xa0\xbc\x81\xcf\xb7\x97\xf0\xa6\xe9\x9a\x0d\xdc\xef\xad\xde\x8b\x57\x60\x30\x30\xea\x62\x12\xf8\xd7\x04\xa0\x06\x9a\xb1\x81\xbb\x3d\x42\xba\x27\x88\x7b\xca\xce\xc0\xa4\x92\xde\x37\xe2\x45\xff\xa2\xfb\x94\xb2\x84\xfe\xfb\xb7\x85\xf8\xff\x64\x13\xc8\x7c\x54\xde\x8e\x18\xd3\x03\x5e\x71\x8e\xf5\xbb\x6b\x3f\x52\x01\x1f\x9e\x2f\x72\x57\xd7\xb8\x93\x7d\xb7\xa9\xdd\x34\x72\xba\xb2\x0e\x25\x2c\x7e\x6b\x34\xa7\xea\xaa\xea\x92\x33\x09\x5a\x9d\xae\x0e\x78\x7c\x91\x78\xc0\xa3\x98\xc9\xe5\x09\x2f\x2c\xa3\x4e\xc4\x47\x09\xed\xac\xb8\x75\x76\x78\xf8\x0d\x3c\x8e\xbc\x2c\x7b\xb3\x14\x44\x11\x98\xbe\x1c\x5f\xac\x4e\xbd\x59\x4f\x64\xb0\x9c\xa0\x18\xf9\x61\xc7\x4f\x6d\x9e\xe4\xaa\x58\xbf\x64\x4a\x6a\xc9\x0d\xc8\x57\xb7\x1f\x98\x72\x90\xe2\x9f\x00\x00\x00\xff\xff\xe9\x63\x55\x7a\xe4\x04\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcAzureAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x49\xcd\x4b\xcc\x2b\xf1\x4c\xb1\x52\xa8\xae\x56\xd0\x73\xac\x2a\x2d\x4a\x75\xce\xcf\x4b\xcb\x4c\xd7\x0b\x81\xc8\xb8\x28\xd4\xd6\x72\x15\x97\x26\x15\x27\x17\x65\x16\x94\x64\xe6\xe7\x61\x53\x1b\x8c\x2c\x0f\xd6\x91\x98\x98\xe2\x9c\x93\x99\x8a\xdd\x68\x47\x47\x17\xa8\x24\xaa\xda\xe0\xd4\xe4\xa2\xd4\x12\x3c\xea\x21\x0a\xa0\x7a\x42\x88\x72\x7a\x51\x6a\x71\x7e\x69\x51\x72\xaa\x7b\x51\x7e\x69\x01\xa6\xd2\x20\x64\x69\x90\xfa\x9c\xfc\xe4\x44\x90\x37\x30\x95\xfa\x40\x65\x40\xaa\x00\x01\x00\x00\xff\xff\x69\xfe\xce\x7d\x37\x01\x00\x00")

func nodeEtcAzureAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcAzureAzureConf,
		"node/etc/azure/azure.conf",
	)
}

func nodeEtcAzureAzureConf() (*asset, error) {
	bytes, err := nodeEtcAzureAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/azure/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeNodeDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\x4b\x2d\xb2\xd5\xcf\xcc\xd3\x4d\x4c\x49\x29\xd2\x4b\x2c\x2a\x48\xd4\x37\x34\x32\xd7\x33\xd0\x33\xd0\x33\xe4\x82\x49\x27\xe7\x94\x16\x97\xa4\x16\xe9\xe5\xe4\x27\x27\xe6\x20\xc9\x03\x02\x00\x00\xff\xff\x87\xc4\xbf\xc2\x3f\x00\x00\x00")

func nodeEtcOriginNodeNodeDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeNodeDnsmasqConf,
		"node/etc/origin/node/node-dnsmasq.conf",
	)
}

func nodeEtcOriginNodeNodeDnsmasqConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeNodeDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/node-dnsmasq.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/azure/azure.conf":                           nodeEtcAzureAzureConf,
	"node/etc/origin/node/node-dnsmasq.conf":              nodeEtcOriginNodeNodeDnsmasqConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"azure": {nil, map[string]*bintree{
				"azure.conf": {nodeEtcAzureAzureConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"node": {nil, map[string]*bintree{
					"node-dnsmasq.conf": {nodeEtcOriginNodeNodeDnsmasqConf, map[string]*bintree{}},
					"resolv.conf":       {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

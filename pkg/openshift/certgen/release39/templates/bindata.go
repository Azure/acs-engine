// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/azure/azure.conf
// node/etc/origin/node/node-dnsmasq.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x40\xe6\x65\xf7\xa1\x90\xd2\xaf\xa5\x92\x1f\x8c\x33\x80\x85\x49\xb2\xb6\x03\x45\x55\x65\x51\x1a\x68\xb4\x14\x50\x12\xba\xad\x10\xff\xfd\xca\x49\x20\xb4\xd0\xab\xab\xdb\xfb\x96\xcc\x39\x33\x3e\x33\x73\x06\x14\x75\xb4\x4b\xfa\x80\x37\x9b\x4a\xad\x3f\x4e\xd2\x30\xae\x75\x97\x49\xba\x18\xbf\x84\x95\xed\xd6\xca\x08\x9c\x49\x05\xae\xf6\x01\x84\x0e\x04\x97\xf8\x39\x4d\x57\xc9\x6d\xbd\xbe\xd9\x54\xfe\x8a\x16\x4f\xe1\xdb\x3e\x97\xf9\x49\xc5\xfe\xbb\x26\xd3\x38\x5a\xcc\x2a\xdb\xed\x6d\xe3\xe2\x1f\x3b\xaf\xe2\x10\x45\xb4\xc3\x04\xae\xbf\x8e\xe3\xfa\x3c\x7a\xac\x87\xe9\xe4\xa9\x6e\x55\x33\x74\x48\x78\x06\x22\x54\x04\xa4\x4b\x7c\xd9\xf5\x94\xa6\x5e\xe0\x2a\x7c\x6e\xdb\x76\x51\xa8\x0b\x44\xa8\x16\x10\xa5\x99\xab\x40\x0c\x08\xc7\x57\x3b\x0c\x38\x50\xc5\x3c\x57\x2b\xd6\x07\x2f\x50\xb8\xb1\x87\x8a\x2e\x28\x67\xe0\xaa\xdf\xe8\xe3\xa6\x59\x28\xeb\x93\xbb\xbd\x3a\x89\xaf\x0e\xa2\x43\xc2\xcb\x00\xf5\x84\xc4\x96\x65\x55\xef\x27\xf3\xb5\x29\xfa\x90\xeb\x60\x2e\x53\x8c\x70\x4d\x9c\x01\x08\xc5\x24\x7c\x77\xb0\xbb\x82\x94\x07\x52\x81\xf8\x62\x95\x7f\xa4\xb6\x96\x8a\x28\xc0\x8b\xf0\xff\xd3\xb0\xf2\x7a\xe0\x62\xb3\xd7\xb3\xa2\xe9\xb3\xf3\x62\x1c\x0e\x93\xd4\x1b\x80\x18\xe1\xcf\x01\x2d\xc5\xe0\x38\xd8\x26\x9c\xb7\x08\xed\xe1\x55\xbc\x7c\x7b\x3f\x82\x7d\xe1\xdd\x8d\x70\xae\xa2\x9c\xe4\xf7\x97\x2b\x95\x60\x54\x69\x01\xd4\x73\xdb\xac\xa3\x69\x17\x68\x0f\xa3\xe9\x78\x9e\x84\x3b\x6b\x92\x40\x79\x9a\x7a\x7d\x9f\xe4\x5e\x13\xa0\xc0\x35\x5f\x18\xd9\x3b\x0e\xb8\xa4\xc5\x41\x0f\x1a\x18\xa5\xf1\x3a\x44\xb9\xd2\x7f\x03\x4f\x11\x6d\xda\x02\xd7\xd1\xad\x91\x02\x89\x2f\x1b\xcd\xcb\xe6\xf5\x4d\xa3\x79\x6d\xbc\x92\x75\xfb\x50\x14\xc9\x9b\x5c\x4e\xa7\x87\xff\xba\x4d\x18\x0f\x04\xe8\x21\x61\x0a\xa3\x2b\xdb\xde\x3f\x9a\xe3\x02\xda\x02\x64\xb7\xbc\x0e\x74\x61\x1f\x91\x1c\xb3\xb6\xdd\x91\xa0\xf3\x23\x7c\x28\x98\x82\x92\x70\xea\x15\xe2\x94\xb8\x8d\x8c\xf8\x24\x9c\xac\xe3\x28\x7d\x2f\x9c\xae\x84\x71\x85\xa3\x29\xd1\x6d\xc6\x01\x9b\x83\xcf\x8f\x7e\x32\xae\x4d\xe2\x34\x67\x15\x3b\xa3\x20\x94\x99\x6c\xf7\xc3\xc0\xb2\xe8\xa7\xe4\x24\x8c\x5f\xc3\xb8\x2c\xd0\x83\xd1\x17\x94\xff\xc2\xf7\xc3\x95\x29\x2e\xf7\x9b\xcc\x3b\x31\x87\xf7\x6b\x2a\x33\xea\x4f\xa5\xe6\x8c\x13\x7a\x57\xe1\xa1\xda\x8c\x76\x42\x72\xc6\x2a\x05\x67\xb4\x23\xd5\x56\xf5\x7e\xbe\x9c\xcd\xa2\xc5\xac\x18\xb1\x03\xad\xa0\x83\x51\xfb\xa0\x29\xee\x75\xb4\x4f\x68\x8f\x74\x40\x73\x18\x80\x49\x37\x2f\xe4\x33\xc1\x59\x06\x2a\xac\x36\x8d\xe6\x59\xad\x0f\x9e\xf5\x7d\xe1\xb5\x3f\x59\xbe\x0f\xe6\x2e\x24\x46\x8f\xe3\x24\x9a\x20\xab\x6a\x55\xef\xc7\xeb\xf4\xf9\xa1\x9c\x6f\xb7\xb8\x7e\x94\x44\x2f\xab\x79\x88\xac\x1f\x01\x00\x00\xff\xff\x20\x54\xc1\x6d\x5d\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x79\x6f\x1b\xb9\x15\xff\x5f\x9f\x82\x08\x16\x48\x52\x74\x66\x24\x3b\xe7\x00\x45\xa1\xda\xce\x46\x58\x3b\x51\x65\xa7\xd8\xa2\x2e\x16\x14\xf9\x34\x62\xc4\x21\x27\x3c\x14\x2b\x6e\xbe\x7b\xc1\x63\x4e\x49\x49\x9a\x4d\xb1\xde\x45\xe2\xe1\x3b\xf8\xf8\xde\x8f\xef\x60\x30\x2d\x99\xd6\x4c\x8a\x33\x29\x56\xac\xc8\x47\x08\x55\xdc\x16\xac\xf3\x8d\xd0\xdf\x2c\xe3\xf4\x1c\x56\xd8\x72\xa3\xc3\x12\x42\xc4\x33\x58\x85\x0d\x93\xa2\x5e\x44\x08\x57\xec\x1f\xa0\x9c\xc6\x1c\x6d\x27\xcd\x32\x88\x6d\x8e\xfe\xf5\xef\xe6\x7b\xc3\x04\xcd\xfb\x8a\xc3\x8e\x0d\x87\x02\x2d\xad\x22\xa0\x5b\xdd\x08\x71\x56\x32\xa3\x73\x74\xff\xb9\xb3\xa8\xe0\x83\x05\xdd\x59\xf6\x6a\xdf\x6e\x41\x29\x46\xe1\x3b\x0d\xee\x18\xd8\x68\xea\x58\x38\x97\x74\xae\x40\x83\xf9\x3e\xed\x94\x69\xbc\xe4\x90\xa3\x15\xe6\x1a\x06\x9b\x46\x87\x4c\xfb\xa1\xf1\x4c\xb2\x02\xa1\xd7\x6c\x65\x52\x26\xb3\x59\x89\x0b\x98\x4b\xce\xc8\xee\x3b\x83\x72\x07\xc4\x3a\xce\x85\xe5\x5d\x3f\x27\xa8\xc4\x86\xac\xbd\xfe\xa9\x10\xd2\x78\x75\xbd\x40\x24\x68\x03\xbb\x1c\x31\xc7\xa2\xd3\x9e\x59\x14\xc4\x2e\x69\x54\x77\x64\x10\xda\x62\x6e\x21\x47\x0f\x8d\xb2\xf0\xb0\x43\x11\xb8\x84\xbc\x35\x27\xa1\x20\x18\xd0\x0e\x83\x14\x8b\x43\x70\x48\x1a\x94\xe4\xa8\x92\x54\x1f\x21\x2d\x5d\x14\x75\x0f\x31\xef\x81\x98\x1c\x39\x3b\x3a\xcb\x7a\xc3\xaa\xb7\x7e\x27\xee\xed\x78\x85\x19\xb7\x0a\x06\x7c\x21\x48\x1d\xe7\xc7\xf8\xe0\xa2\x50\x50\x60\x23\x55\xe7\x2e\x29\x79\xb7\x3b\xe3\x0c\x84\x99\x89\x95\x0c\xb6\x13\x50\xe6\x15\x73\xd1\x6f\x45\x92\x95\x92\xc2\x24\x9e\x3f\x25\xca\x78\xc6\x0d\xec\xbe\xc8\xb7\x81\xdd\x08\x57\xec\x12\xb6\xc0\x75\x3e\x4a\x5c\x6c\x07\xa1\xc6\xd6\xac\x5b\x73\xe2\x4d\x79\x0d\x98\x82\x8a\xc6\x78\xe3\xce\xa6\x39\xea\x68\x4e\x08\x6e\x8c\x88\x0c\xb2\x2c\xa5\x78\x83\xcb\x3a\x00\xc9\x11\xa3\x46\x01\x58\x46\xe1\xb0\xcb\x5c\xc1\x8a\xdd\xb5\x52\xbf\x26\x0b\x28\xa5\x81\xe4\xc2\xf1\x24\x7e\xb5\x50\xd2\x56\x81\x7d\x9f\xef\x67\x47\xf4\x8b\x56\x83\x72\x48\x39\xc6\xf9\x4e\x83\x1a\x11\x29\x8c\x92\x9c\x43\x27\x0a\xc0\x81\xb4\x17\x82\x4b\xb2\x79\xe3\x01\xd7\xc0\x36\x29\xb1\x36\xa0\x92\x56\xd8\xa1\x45\x83\xda\x32\x02\xd7\xee\x2f\x51\x9c\x81\x8a\x97\x5d\xb3\x42\xd4\xee\xeb\x46\x33\xf2\x27\x81\xde\x38\xb0\x13\xc7\x01\x87\x8b\x5f\x67\xcb\x1c\x3d\xfc\xd3\xc3\x11\x91\x4a\x4f\x39\x97\x1f\x81\xbe\x55\xac\x60\xc2\x47\xf6\xd1\x5f\xd9\xe3\x2c\x9b\x9c\x3c\xbf\x4d\xc7\xfe\xff\xc9\xa3\xfc\x3f\xb7\x9f\x1e\x37\x24\x2e\x09\xe6\x6b\xa9\xcd\x60\xfd\xfe\x1e\xfd\xdd\x4a\x03\x57\x60\x30\x7a\xc4\x04\x85\x3b\x94\x5e\xf9\xe3\xa6\xb3\xb9\x46\xe3\xc7\xe9\xb5\x51\x4c\x14\xe8\xf3\xe7\x81\xe8\xc6\x2e\x41\x09\x30\xa0\x6f\x53\x1a\x72\xd2\xd7\x39\x6e\x53\xbd\x25\xb7\x29\xe1\xd6\x6d\x71\x9b\x7a\xbb\x8e\x8a\x7d\xc9\xd8\xf4\xe2\xce\xb8\x80\xf3\x60\xed\x6b\xa9\x8d\x8b\xfe\xbe\x9d\x4d\x18\x8f\x99\xd9\x57\x1b\x0f\xff\xbf\xe8\xf3\x87\xfa\xc6\xb3\x0f\xd8\x26\xcf\x4f\x6e\xd3\xd3\xc3\x31\x3b\xb2\xd1\x57\xbc\xd7\x48\xc5\x75\x2a\x74\x0b\xf5\x25\x13\x74\x4a\xa9\x02\xad\x73\x34\x4e\xfd\x7f\xf9\x8b\xf1\xd3\xd3\x48\x7b\x03\xe6\xa3\x54\x9b\x1c\x19\x52\x3d\x19\x81\x21\xb4\x9f\x9d\x08\xce\x51\xb8\x0c\xa9\x23\xb6\x89\xa0\x85\x79\x8f\xec\x85\x23\x4b\x03\xf3\x03\x1c\x0e\xea\x08\x59\xc5\xfd\xb5\x4d\xd0\xda\x98\x4a\xe7\x3e\x34\x07\x02\x92\x9f\x9c\x3e\x7f\xe9\xad\xbb\x36\x52\xe1\x02\xda\x03\xb6\x6e\x8f\xa4\x90\x60\xf2\x0e\x21\x65\xf2\x10\x63\xbf\x02\x3a\x2f\x5e\x3b\x2f\x0e\xd4\x74\x4b\xd9\x01\xb6\xae\x12\x5f\xfc\x5a\xcb\x56\x52\x95\xd8\xe4\x68\x76\x35\xfd\xf9\xe2\xb7\xf9\xe2\xe2\xd5\xec\xd7\x2c\x7c\xdc\xfc\x73\x7e\x91\xfc\x74\x4f\x64\x59\x49\x01\xc2\x7c\xce\x7f\xba\xdf\x06\x4d\xae\x63\xe1\xd8\x80\x36\x75\x33\xc0\x86\x95\xc5\x29\x67\x22\xdc\x85\x05\x14\x4c\x1b\xb5\xab\x9d\x95\x23\x2a\xc9\x06\x54\xa2\x22\xa1\x46\x92\x03\x52\xfe\x74\x3c\x1e\x8f\x42\xbd\x0a\x4e\x8e\xa5\xca\xf9\x86\x83\xd9\x0f\x3d\xc1\xc9\xd2\x0a\xca\xe1\x58\xd4\xa3\xe4\x97\x03\x3f\x60\x0a\xb1\xaf\xa4\x32\x39\x9a\x8c\x4f\x9e\x8e\x47\x6d\x6c\xba\x66\x39\x23\x70\xc5\x5c\xbe\x05\x35\x55\x85\x2d\x41\xd4\xfd\xa6\xb2\xc2\xb0\x12\x12\xd2\x69\x4b\x13\xc7\xad\x33\x0d\xc6\x30\x51\xe8\x74\xf3\xc2\x85\x3e\xdb\x4e\x30\xaf\xd6\x78\xf2\x97\xa6\x6a\xeb\x10\xbb\x64\x89\xc9\x06\x04\xad\xa5\x1d\xbe\x4e\x7b\x0c\x25\x50\x86\x13\xb3\xab\xa0\xdd\xa1\xe2\x8c\xf8\xfe\x27\xdb\x0a\x9a\x76\x50\x56\x29\x69\xe4\xd2\xae\x62\x95\x94\x96\xba\x0a\xb8\x65\x4d\x69\x4d\xd0\x03\xfc\xc9\x2a\x78\xd0\xe1\xe8\xdb\xff\x20\x03\x43\x32\xcf\x14\xfe\x4c\x1d\xdd\xf1\xb7\x65\x61\xe0\x88\x98\x1a\x7c\x09\x61\xa2\x48\x5c\x84\x92\x95\xf3\x7e\x4f\xa7\xf4\xa5\x23\x0b\x01\xc9\xc2\x2d\x7e\x70\x50\xc1\x06\x76\xdf\x22\xbf\x81\xdd\x83\xff\xcb\x49\xcb\x88\x00\x2b\x1c\x3c\x9a\x85\xd9\x3c\x47\xf7\xf7\x5f\xab\x58\x1e\x57\xf4\x62\xcb\x7c\x7d\xbf\x61\x25\x48\x6b\x72\x24\x2c\xe7\x5f\xef\xbe\x22\x5a\x63\xc7\xd3\x05\xf4\x3e\xa4\x7b\x4c\x01\xd0\x9a\xac\x81\xda\x5e\x84\xea\x8d\x1b\x52\x00\x76\xd0\x74\xc0\xaf\x0d\x5f\xfa\x5e\xfb\x56\x39\x36\x08\xfa\x8d\xa4\x30\x97\xca\x2c\xb0\x28\x5c\xc3\xfc\xb0\x43\xbb\xb6\x4b\x01\xce\x57\xcf\x4f\xd2\x53\x9f\xe0\xb3\xc9\x33\x47\x77\x6d\x3a\x71\x92\xa1\x4d\x73\xe3\x56\x74\xae\x37\xdb\x03\x08\x62\x4d\xfd\xa5\xc1\xf1\x59\xec\xef\x84\x08\x4d\xd2\x60\x6e\xc2\x84\x40\xe5\xc8\x06\x84\xb9\xd9\x55\x4e\xf1\x37\x5c\x8a\x3f\x77\x79\xe2\xe1\x10\x5a\x5a\xe5\xf2\xdc\x93\xf1\x78\x14\xa7\x95\x5a\xeb\x37\x29\xf5\x42\x1f\x2a\x9d\xa3\x13\xaf\x61\xff\x30\xee\xb7\x98\x4c\x82\xd3\x9a\x74\x7e\x29\x65\xe5\xee\xff\x1f\x70\xdc\x67\xbf\xfb\xb8\xa7\x5e\xc3\xde\x59\xba\xa7\x1d\xf6\xb2\x5e\x61\xb8\x83\x11\x05\x73\xbb\xe4\x8c\xbc\x5b\x5c\xe6\xbd\xea\x7b\xb4\xcb\xca\x3b\xb5\xd9\x61\xd1\x5d\x37\x11\xda\x87\x36\x5f\xc7\x6c\x12\xdb\x8a\xb3\xd9\xf9\xc2\xe5\xf8\x74\x72\xf2\x22\x00\xf3\xc9\x1e\x4f\x6c\x00\x08\xa3\x6a\x9f\x15\x21\xd7\xc2\x06\x84\x5f\x82\x28\xcc\x3a\x47\x2f\x3b\x91\x9e\xcd\x3b\x3b\x45\x4d\xb1\xcb\xc9\x9c\x8b\x0e\x4b\x47\xab\xe7\xfe\x61\x23\xb4\xfe\x0a\xe8\x1a\x9b\xb6\x97\x4a\xe4\x56\x27\xda\x4b\xb6\x57\xad\x7f\xaa\xde\x75\x93\xfd\xc1\x0a\x6b\x0d\xe6\x07\x38\x38\x23\x52\x68\xc9\x21\x1b\xb9\xa9\x08\x7b\xa0\x36\x59\xb4\x04\xb3\x96\x34\x47\xd8\x1a\xd7\x9a\x30\x0a\xc2\x30\xb3\x9b\xc7\x54\xac\xf3\xd1\xfd\x7d\x82\xd8\x0a\xa5\x17\x02\x2f\x39\x4c\xa7\xe7\x53\x6b\xd6\x8e\x2b\x00\xcd\xe7\xcb\x24\x4e\xdb\x53\x97\x85\xd1\xf4\x3c\x40\x73\x8d\x39\x07\x9f\x6b\xda\x17\x09\x2e\x0b\x26\x3a\xc3\x6f\x89\xab\x8a\x89\xe2\x2a\x9a\x41\x38\x66\xa5\x27\xf4\x8b\xc1\x91\xe7\x86\xd0\x86\xbc\xad\x40\xcc\xce\x67\x03\xd3\xeb\x51\x2a\xa4\xea\x73\x9f\xf9\x53\x6f\x60\x38\x7f\x3a\x9d\x9e\xc7\x3c\x7e\x1e\xb2\x7e\xcb\x7e\x0d\x44\xb9\x74\x78\x54\x24\x30\x74\xc5\x30\x2b\x3b\xcf\x08\x8c\x76\x5f\x3e\xb4\x5d\x36\x5f\x95\x82\x15\x28\x05\xf4\x5d\x9c\x3c\xbb\x8c\x56\xb0\x0f\x16\x7e\x73\xcb\xcd\xea\x90\xa7\x47\x84\x12\x33\xde\xa5\xfa\x85\xf8\x5d\x77\xc6\xd1\x81\xd6\xac\xa5\x62\x9f\xa0\x45\x92\x0f\x46\x5a\x32\xa2\xa4\x96\x2b\x23\x05\x67\xc2\x15\xd1\x32\x1b\x1e\xfc\x06\x04\x8e\x8e\xca\x3c\x4c\x4f\xb2\x46\x5f\xb3\x83\x91\x1b\x10\x3f\x48\xbb\xd7\xe5\xb1\x07\x82\xf6\x30\x76\xe9\xc6\x17\x54\x61\xad\x3f\x4a\x45\x87\x48\x6b\x80\xf5\x63\x81\xb6\x3a\x56\x6d\xd7\xc6\x5b\x42\x7b\x80\x7c\x7d\x33\xf7\x8b\xf3\x68\xe4\x01\x68\xc6\x22\x3a\xdd\x6f\x8f\x7f\x5c\x62\xad\x75\xfd\x5e\x2d\x1a\x06\xaf\xb9\xcd\xd2\x15\xbe\x9b\x16\x70\xed\x6a\x02\x75\x25\xa5\xae\x4a\x91\x1c\xd2\xa2\xd6\xa2\xbb\x18\xae\x8e\x3e\xde\xbf\x04\xb6\x44\x07\xbe\x74\x87\x4b\x07\x68\x0f\x88\xae\x09\xae\xaa\x6a\x7d\xe3\x96\x07\x66\xbc\x78\x56\x37\x03\x0d\x46\x0f\xb1\x3d\x1d\x8f\x47\x15\xb6\xda\xa1\xb0\x7d\x2e\x09\xa9\xaa\x1a\x8c\x4a\x4b\x29\x8d\x36\x0a\x57\x61\x86\x3a\x6a\x7c\x90\xab\x3b\xaf\xa6\x12\xcc\xc4\x4a\x61\x6d\x94\x25\xc6\xaa\xd0\x4a\x55\x98\xf4\x5e\x8b\x98\x63\xe9\xca\x5c\xaf\xb1\x02\xda\x3c\x51\x1e\x12\x1a\x55\x4a\xbe\x07\xd2\x49\xe8\x71\x50\x73\x0d\xdb\xb5\x7f\xa1\x92\x2a\x47\x42\x52\x48\x94\xe4\x90\xf6\xe6\xd9\xcc\x8d\x8e\xd6\x40\x3d\xd3\x44\x65\x8b\xf0\x9e\x77\x05\x5a\xe3\xa6\x4f\xec\xd3\x6e\xa0\xac\xdc\x7c\xd9\x34\x91\xc4\x2a\x66\x76\x53\xce\x25\xc1\x6e\xcb\x70\xe3\x88\x6e\x56\x62\xcf\xa9\xc7\x79\x76\x52\x13\x2f\xf1\x12\xb8\x9e\x83\x9a\x07\xe5\x39\x7a\x1a\x9e\xe4\x18\x1d\xca\x4d\xc6\xf5\x4f\x32\x79\x59\xff\x64\x7e\x75\xa4\xa4\x75\xa3\x5a\xeb\x03\x6d\x97\x54\x96\xd8\xdd\xfe\x9b\x8b\xab\xf9\xe2\xed\xbb\x9b\x8b\xc5\x6c\x9e\x0a\x56\xb9\xf9\x3b\xd6\xe1\x29\x21\x6e\x3c\x68\xc5\xfc\x3f\x03\x04\x70\x2e\x5c\x8a\x06\x41\x40\xb7\xa5\xab\xc4\x02\x17\x40\x9b\xd7\xca\xa4\xf6\xb5\xff\xdd\xbf\x06\xfb\x8b\xed\xd6\x2b\x2e\x77\x5f\xb9\xe5\x95\x62\x5b\x6c\xe0\x97\xc1\x2b\x1e\x0e\x56\xb9\x7e\xcd\xd3\xeb\x39\xd7\x67\x83\xc8\x1c\xb7\xdf\x93\xf0\x3c\x5e\x40\x87\xd7\xc5\x7a\x3e\x39\xf8\x7e\x73\xf0\xa6\xef\xbf\xe6\x1c\x98\x6d\xb4\x9f\xa5\xeb\x61\xbe\x79\xea\x6d\x5e\x75\x86\x63\x4e\xe4\x0f\x27\x29\xf1\x5d\x04\x91\x9e\x89\x57\x9c\x15\x6b\x13\x6e\x62\xf3\x90\x1c\x07\xae\x7e\x52\xd9\x4a\x6e\xcb\xce\xbb\x08\xdd\x09\x5c\x32\xe2\x13\xaa\xcb\x16\x4c\x14\xa1\x3f\xa1\x31\xe5\xff\x37\x00\x00\xff\xff\x96\xdf\x75\xfd\x84\x1a\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x16\xa5\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x5a\x85\xda\x5a\x25\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x24\x15\xae\x79\xc9\x48\x0a\x00\x01\x00\x00\xff\xff\x58\x97\xb9\x86\x74\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x6d\x6f\xdb\xc8\x11\xfe\xee\x5f\x31\x90\x03\xa8\x45\x23\xa9\x49\x0e\x68\x8f\x40\x3e\xf8\x7c\xcc\xd9\xb8\xb3\x65\x48\x4a\x91\xb4\x28\x88\x25\x77\x28\x6e\xbd\xda\xe1\xed\x2e\x25\xeb\x0c\xff\xf7\x62\xb8\x4b\xbd\xd0\x2f\xf1\x45\x9f\x44\x71\xe6\x99\x67\xe7\x7d\x35\x1a\x8d\x4e\x4e\xe1\xd3\xe5\x97\xab\x34\x81\x33\xb3\xf5\x95\x32\x4b\xc8\x51\xd3\x06\x94\x01\xa1\xf5\xa8\x10\xb5\x83\x4a\x38\x50\x7e\xe8\x60\x2d\x74\x83\x60\xb1\xd6\xa2\x40\x09\xf9\x16\x1c\x4a\x16\xf5\x15\x9e\x9c\x42\xfc\x50\x8d\xc6\x55\xaa\xf4\x2b\xe1\x3c\x5a\x57\x58\x55\xfb\xb1\xab\x60\x53\xa9\xa2\x02\xe5\xc0\x90\x07\x25\x51\xe8\xb7\xb0\x41\x70\x15\x35\x5a\x42\xa9\xee\xc0\x57\xc2\x8f\x4f\x34\x15\x42\x07\xe5\xe4\x04\xa0\x22\xe7\x1d\x7f\x01\x68\xdf\xf0\xf3\x09\xc0\x5a\xd8\xf8\xab\x30\x4e\xe5\x1a\xb3\x82\x8c\xc1\xc2\x2b\x32\x49\x90\x3c\x7a\x5b\x6f\x7d\x45\x26\x53\xc6\xa3\xad\x2d\x32\x38\x4c\x1a\x67\x27\xb9\x32\x93\xf0\xf2\xfd\xc9\xc9\xd1\x01\x32\xe5\x18\xd4\x0b\x65\xd0\xaa\x3f\x50\x26\xf0\x49\x68\x87\x3d\xa9\x42\x2b\x34\x3e\xcb\x95\x11\x76\x7b\x00\x4a\xc5\x23\xbc\x95\x58\x62\xe6\xc5\x32\x81\xc1\xfa\x5f\xe9\x6c\x7e\x39\xbd\x1e\x04\xa1\x53\xb8\x9e\x2e\xd2\x04\x16\x95\x72\x50\x54\xc2\x2c\xd1\xb1\x6b\x3f\x8c\xdf\xfd\xfd\x6f\x20\x8c\x0c\x21\x10\x5a\x43\x41\xab\x5c\x99\xd6\xf3\x9e\x40\x80\x53\x66\xa9\x91\x1d\xa2\x44\xae\x31\xc2\x85\x4f\x63\x24\x5a\x8e\x0f\x18\xb1\xc2\x03\x2a\x1b\xcc\xf9\x6c\x8e\x34\x46\x5a\x2c\xd0\xe3\x7b\x28\x54\x5b\x2c\xd5\x5d\x02\x83\xcb\xab\xb3\x5f\xd2\xec\x66\x96\x7e\xba\xfc\x32\x19\xbc\xa0\xb1\x87\xdd\x69\x2d\xbe\xde\xa4\xa3\x0d\xe6\xa3\x28\xf3\x92\xfa\x1a\xad\x6b\x63\xd9\x77\x15\x59\x5c\x66\x8d\xd5\x59\xcc\x11\x18\x1e\x51\x3a\xb0\xf4\xe6\xbe\xa0\x55\x4d\x06\x8d\x7f\x48\xde\xdc\x47\xc4\x87\x61\xcf\x6a\xc0\xc9\x24\x96\xa2\xd1\x3e\x73\x4d\x2e\x69\x25\x94\x49\x60\xb8\x48\xaf\x6e\x66\xd3\xcf\x8b\x74\x76\x79\x33\x36\xaa\x1e\x2b\x1a\x76\x01\x6b\x2b\x27\x7e\x6f\xc3\x16\x33\x39\x47\xf0\xdb\x1a\x3f\x2a\x53\x5a\xf1\x16\xf2\xc6\x73\x9a\x57\x62\x8d\xe0\x09\xb4\x5a\x23\x6c\x94\xaf\xc0\xe2\x52\x91\x09\x62\x50\x92\x05\x43\x9b\x08\x97\x63\x21\x1a\x87\x40\x25\x68\x5c\x8a\x62\x0b\x16\x85\x23\xe3\x7a\xcc\x2d\x35\xcc\xdc\xa1\xc6\xc2\x13\xbb\xe2\x10\xb4\x7f\x4e\x7e\xe7\xbc\xdd\xbe\x2c\x7f\x0a\xd7\xd4\x96\x27\x6c\xaa\x2d\x78\x3e\x98\x72\x20\x40\xaa\xb2\x44\x8b\xc6\x83\x14\x5e\xb4\x47\x0c\x87\x53\x1e\x54\x9f\x58\x6d\x69\x85\xbe\xc2\xc6\x65\x86\x24\x1e\x58\xbc\x8f\x26\x87\x09\x0c\x83\xd5\x87\xce\xa1\x73\xf4\x70\xf6\x47\x63\x11\x5c\x8d\x85\x2a\x55\x11\x4c\xb1\x6f\xb8\xea\x51\x42\x77\x84\x9e\xb9\xf0\xf6\xe0\x80\x9e\x2c\x27\x5f\x6d\x69\xad\x24\xe7\xc8\x40\x30\x70\x96\x6b\xca\xfb\x49\xf7\x9c\xf2\xad\x32\x32\x81\x01\xe5\xff\xc3\xc2\xbf\x56\x69\x6f\x26\x13\x45\x41\x8d\xf1\xa1\x00\x86\xb3\xf4\x97\xcb\xf9\x62\xf6\x35\x9b\x2f\xa6\x33\xce\xd0\xb3\x7f\x7f\x9e\xa5\xd9\xd9\xf9\xf9\xf4\xf3\xf5\xe2\xfa\xec\x2a\xed\x87\xeb\xf5\x26\x6e\x71\xfb\x4d\x0b\xbf\xa6\x5f\xbf\xc3\xc0\xae\xfd\x25\x30\xe8\xe4\xbe\xc3\x15\x16\x85\x5e\x25\x30\x28\xc8\xe2\x78\xa3\x8c\xa4\x8d\x1b\x1b\xf4\x83\x27\x6a\x29\xfe\x72\x21\xac\x84\x82\x24\x86\x14\x8c\xf5\x31\x3e\x92\x39\x6f\x2c\x27\xa4\xde\xb6\x1d\xae\xd0\x0d\xd7\x31\x38\x2f\x3c\x82\xf0\x20\xb1\xd6\xb4\x5d\x71\xca\x7a\xb5\x42\x90\x84\x61\xf8\x84\x5a\xe4\xa6\x48\x12\x5d\x04\x0b\xfc\xd1\xa2\xe4\x32\xe5\xb7\xa1\x2f\x84\x62\xd5\x22\x47\xed\x40\xd4\xb5\x56\x28\xdb\x86\x6c\x51\xc8\x2d\xcb\xe6\x08\xbf\x37\x68\x15\xca\x08\x25\x96\x42\x19\xe7\x99\x03\xe3\xd4\xa4\x8c\x6f\xe7\x24\xb3\x08\xf3\x32\x92\x6b\x47\x5e\x10\xd2\x62\x9b\x13\xdd\x3a\xb0\x8d\x19\xc3\x99\x76\xf4\x36\xc2\xf1\xeb\x50\xe9\xed\xf0\x55\x85\x80\x36\xec\x10\x3b\x16\x0c\x4a\xa1\xb5\x83\x5c\x14\xb7\x03\x26\xf4\x8e\x79\x5a\xaa\xad\x12\x1e\xf5\x16\x36\x15\x5a\x04\xe1\x0e\xf1\x62\xb4\x76\x88\x9a\x96\x5c\x6f\xd1\x45\x63\x58\xb4\x3a\x1b\xc1\x33\xc7\x11\x48\xe5\x8a\xc6\x71\xfb\x04\x91\x13\x57\x7d\x19\xd1\xc2\x5c\xda\xdb\x63\x02\x92\x42\xd4\x62\x9f\x6b\x2d\x38\xf8\xf8\x11\x42\xb3\x6b\xdd\xbe\x6b\x72\x0c\x10\xb1\x6a\xb4\x25\x16\x1c\xd0\x12\x45\x3b\xb7\x19\xad\x0d\x97\x30\x07\xca\xf1\xfc\x95\x5a\x56\xed\x78\x13\x9d\x4f\x9d\xb2\xbb\x28\x74\x76\x8f\x73\x66\x86\x6b\xe5\x94\x07\x2d\xd8\x9f\x7f\xa9\xc9\xb1\x9d\x2d\x37\x38\x81\x2b\x32\x0e\x3d\x90\x85\x37\xe4\x2b\xb4\x7f\x7d\x26\xd5\x43\xdb\xed\x0c\x24\xf0\xee\x1b\x25\x71\x28\xf9\x7c\xa7\x6c\x13\x37\x81\x41\x6d\xd1\xa1\x79\xd4\x72\xfa\x3d\x15\xef\x6a\xb2\xcc\x23\x0c\xda\xdd\xbc\x1c\xde\xcc\xa6\x57\xe9\xe2\x22\xfd\x3c\xcf\xd2\x2f\x37\xd3\xd9\x22\x9d\x65\x71\x84\x0e\xfb\xe6\x8f\x06\xb6\x71\x5e\x68\x9d\xc0\xc2\x36\xf8\x02\xcf\x60\xef\x75\x0b\xc1\xbe\x06\x33\x9e\x18\x09\x0c\xcf\xae\xe7\x97\x3f\xfd\x96\x66\x3f\xa7\x37\xbf\x4d\xbf\xb6\x83\x3a\xb2\xea\x56\x35\x87\x76\xad\x0a\xcc\x72\x4b\xb7\x7c\xbc\x23\x5a\xc7\xf0\x9d\x68\x21\xbc\xd0\xb4\x7c\x91\xda\xc1\x62\xd0\x67\xf9\x34\xcc\xde\xa3\xeb\x9d\xfb\x9e\xdc\x1c\xd0\x17\x92\x37\x12\x97\xc0\x7f\x06\x95\xf7\xb5\x4b\x26\x93\x8b\xe9\xbc\x6d\xeb\xc9\xfb\x0f\xff\xf8\x71\xf0\xdf\x70\x44\x8f\xab\x9a\x33\xaf\x7f\xc6\x97\x9c\xf9\x9c\xce\x73\xfb\x55\x27\x3f\x8a\xf2\xa3\x20\xff\x32\xd8\xb3\xdb\xd6\xd1\x62\xaa\x1c\x58\x94\x8d\x91\xc2\xf8\x30\xfc\x2d\xfe\xde\xa8\xd8\x33\x2b\x61\x24\x2f\xa2\x01\x0a\xdc\x2d\x6e\x20\x47\xbf\x41\x34\x47\x4b\xe9\xce\x7f\xa3\x18\x71\xee\x89\x53\xab\x96\x7c\xeb\x30\x12\xa6\xe7\x37\x3d\x3f\xe3\x9d\x58\xd5\x1a\xc3\x3a\xce\xb9\x74\x40\x77\x7e\x31\x9d\x2d\x38\xbf\x07\xfd\x94\x2d\xa8\xb8\xad\x55\x97\x83\x87\x5e\x3e\x9f\x9e\xff\x7a\x73\xb9\x78\x2e\x69\x1f\x29\xe6\xc2\x61\x74\x74\xa7\xfa\xd3\xd9\x3c\xe5\xf0\x7e\x53\x77\x4f\xb5\x53\x7d\xda\xc1\x3f\x53\x3b\x9b\x24\x96\xca\xe0\x37\x7b\x0e\x38\xda\xcf\x0e\x2f\xdc\x2d\x94\x6a\xb7\xfb\x07\xd9\xf1\x76\xa5\x41\x19\xa7\x64\x18\x76\x7d\x48\xb0\xa4\x11\x4a\x4b\xab\x27\x22\xb2\x51\x5a\x77\xd3\xac\xf1\x54\x53\xdd\x70\xda\xf0\xb2\xd7\xf0\x85\xe3\x49\xc4\xfe\x3e\xda\x46\x93\x47\xe3\x56\x99\xe5\xc1\xf0\x31\xcd\x2a\x47\xcb\xdb\xed\xc1\x3c\xe8\xa7\xdb\xfe\x46\xe3\xe2\xa5\x54\x58\xce\x14\x8f\xd6\x08\xcd\xf9\xf6\x98\x35\xdb\xdb\xe0\xd0\x1e\x5f\x82\xc2\x16\x18\x49\xaf\xa0\x1d\x6c\x7c\x73\x5a\x93\x92\x2d\x1f\x65\x0a\xde\x24\x78\xdf\x70\x9e\x69\x95\xa2\xf0\x50\x2a\x23\x3b\xde\x3b\x53\xe1\xca\x09\x7c\x09\x5b\x91\xe9\x9e\xf8\xd9\x94\x6a\xd9\x26\x4a\x02\x13\xf4\xc5\x84\xda\x84\x9e\xec\x24\x5e\x99\xc3\x41\x78\x7f\xfd\x8d\x47\x68\x72\xad\x8a\x5d\xa7\x6e\xac\x4e\x60\xd7\x69\xee\xef\x61\x9c\xde\x05\xbf\x5c\xb5\x8a\x17\xe4\xda\xbd\x13\x1e\x1e\x92\x7f\xfe\xf0\xc3\x87\xc9\xd1\x7d\xeb\x00\x50\xd4\xea\x4f\x83\xed\x41\x5e\xd3\xf7\xe0\x34\xfe\xc3\x70\x4d\xa0\xc9\x2c\xd1\x82\x41\x94\xbc\x43\x39\x76\xf5\xa3\x20\x8e\x3e\x8c\x7f\x1c\xbf\x7f\x3f\x7a\x17\x6f\x4e\x43\x8b\x6d\x61\x90\x09\x09\xdf\xb5\x97\x2d\xfa\x48\x84\xd3\x67\xef\x2a\x7e\x8a\x3b\x77\x47\x65\x78\x72\x42\x14\x9b\xb5\xcb\x3c\x65\x21\x5a\xcf\xfe\xbb\xf0\xff\x00\x00\x00\xff\xff\xce\xfa\x8f\x78\x1a\x11\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x95\x31\x8f\xdb\x38\x10\x85\x7b\xfd\x8a\x87\xbd\xc2\xcd\x79\xbd\x8b\xeb\x04\xdc\x55\x97\x00\x5b\x04\x29\x92\x22\x40\x10\x08\x14\x35\xb6\x08\x53\xa4\xc0\x19\xae\x63\x60\x7f\x7c\x40\x89\x92\x17\x0b\x7b\x6d\x21\x45\x3a\x9b\xd2\xbc\xf7\x71\xe6\x89\x5c\xc3\xa9\x8e\x4a\xfc\x4f\xbd\xf5\x47\x7c\xee\xc9\x7d\x69\xcd\x56\x60\xdc\x36\x28\x96\x10\xb5\xc4\x40\x38\xf8\xb0\xb7\x5e\x35\x05\xd0\x7a\x16\x2e\x61\xbd\x56\xb6\x53\x2c\x14\x0a\x60\xa7\xa4\xa5\x50\x6d\x95\x4e\xcf\xb6\xca\x32\x15\x05\x20\x8a\xf7\x5c\x16\x00\x30\x39\x3d\x75\xbd\x0f\x02\xdf\x93\xe3\xe4\x54\xd5\xde\x0b\x4b\x50\x7d\xa5\xa2\x78\xd5\xf7\xc1\x3f\x53\x40\xf0\x96\xb0\x0d\xbe\x3b\xbd\xba\x56\x8e\x4d\x6d\x09\xe2\xd1\x8c\xc0\xce\x37\x84\x59\x01\x49\x01\x93\xc4\x60\x0b\x98\xc1\xb0\x4a\x7a\x65\x5e\x42\x66\xb9\x06\x51\x9c\x23\x57\xae\x41\x64\x42\xf0\x51\x28\x0c\x5b\xc4\xd6\x5c\x86\x3d\x99\xa4\xce\x51\x33\xec\x6c\x09\xdb\x58\x36\x3f\x1e\x7a\x5a\x25\xb3\x32\x33\xdc\x1f\x3b\xfb\x3e\x2a\xed\x0c\x4b\x38\xfe\x61\xd8\x4c\x71\x11\xf7\xa4\x72\xa0\xba\xd2\xde\x71\xca\xc0\x6d\x41\x38\x50\x8d\x5c\xb1\x04\xf7\x95\xd1\x88\xf4\x17\x3e\x3e\x7d\xfb\xf4\x01\x6b\x7c\x6d\x29\xd0\x8a\xa1\x10\x94\xa6\x24\xde\x18\x31\xde\xe1\x90\x1e\x40\x5a\x1a\x3f\x12\x58\x55\x93\x85\x61\xb7\x92\x94\x3d\x6b\xa8\x81\xf8\xac\x36\x37\x62\x7e\x7d\x88\x6c\x13\x83\x71\x3b\x68\x1b\xd3\x07\x84\x7a\xf8\x17\x7b\x18\xf7\xa6\xee\x5a\x44\xff\x86\xb4\x86\x61\x18\x7d\xf0\xb5\xa5\x4e\x89\xd1\xa8\x49\xab\x34\x78\x69\xe9\xa2\x5e\x1f\x7c\x47\xd2\x52\xe4\xb1\xc5\xba\x25\xbd\xe7\xd4\x52\x72\x1c\xc7\x1d\x06\x4a\xca\x99\xf9\x60\xa4\xbd\xb8\x2b\x26\x4b\x5a\x7c\x40\xec\x37\xea\x59\x19\xab\x6a\x4b\x1b\xd6\x2d\x35\x71\xf8\x7d\x9f\x27\xce\x2d\x59\x5b\x62\xb5\x89\x1c\x36\xb5\x71\x1b\xaf\xb1\x23\x19\x2c\x18\x6b\x8b\xbb\x94\x13\xef\xfe\x1d\x74\xef\xf0\x82\x83\xc6\xda\xae\xf2\x08\xc7\x10\x51\x48\x71\xe2\x68\x25\x2f\x47\x27\xc6\x4e\x6b\xf7\x2c\x8d\x8f\x52\x59\xe3\x88\xbf\x3f\xfc\x78\x31\x4e\xf0\x1f\x1e\x67\x09\x09\x86\xb8\xc4\x3f\x0f\x79\xa5\x21\xab\x8e\x25\x1e\x1f\x8a\x2b\xb9\x7c\xdb\xb3\xab\xb1\x3c\x15\x2c\x49\xe5\xab\xaa\xf7\x79\x98\xc2\xb3\xd1\x54\x69\x25\xca\xfa\xdd\x8d\x50\x69\x6a\xb9\x12\xb9\x72\x09\xdd\x1b\xd3\x0b\x27\xcf\x60\x3a\xbf\x5b\x07\xbf\xbf\xf9\x50\x4f\x7c\xd3\xea\xc4\x39\x0a\x5c\xc7\x3c\x6f\x7c\x96\x51\xa8\xeb\xad\x92\xdf\x80\x9c\x14\x16\x53\x5e\xb0\xbe\x32\x6d\xfa\xa9\xba\xde\xd2\xad\xd9\x4b\x84\x53\xc9\x92\xf9\xce\x35\xef\xd3\x8c\x27\x7d\x35\x6d\x65\x09\x55\xbe\x5b\xe6\xd2\xe5\x17\xcc\xc9\xf6\x2c\xa5\xf6\x7a\xdf\x1b\xa9\xa2\x59\x40\x35\xdf\x92\x37\xdf\x23\xd9\x66\x1d\x4d\xf1\x2b\x00\x00\xff\xff\x57\x93\xda\x47\x49\x09\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4b\x6f\x1b\x37\x10\xbe\xf3\x57\x0c\x94\x1c\xab\x7d\xc8\x4d\x03\x10\xc8\xc1\xf5\x23\x35\x8a\x24\xaa\x6d\x14\xed\xa9\xe0\x92\x23\x89\x15\x97\xc3\x0e\xc9\x75\xd4\xc0\xff\xbd\x20\x57\xf2\x03\xbd\xb4\x97\x05\x38\x8f\x6f\xbe\xf9\xf6\x1b\xe5\x1c\x3d\x5c\xda\xa8\x06\x87\xe6\x92\xf4\x1e\x59\xc2\x46\xb9\x88\x42\x05\xfb\x2b\x72\xb4\xe4\x25\x4c\xbd\x30\x3e\xfe\x68\xbd\x39\x37\x86\x31\x46\x09\xfd\xea\x7d\xd3\x35\x5d\xd3\xcb\x77\x67\x25\x79\x8b\x3a\x73\xb4\x13\xde\x62\x24\x37\x5d\x90\xdf\x48\x68\x31\xe9\x96\xd8\x6e\xad\x6f\x3d\x19\x6c\xb9\x26\x1b\x4d\x7e\x53\x9a\x2e\x69\x54\xd6\x4b\xd0\x2e\xc7\x84\xdc\x38\xd2\xca\x95\xc4\xcd\x5a\x42\xff\x7e\xd5\xf4\x65\x48\x2f\x4c\x65\x56\x30\xed\x56\x0a\x00\xfc\x8a\xfa\x27\xe5\x8d\x43\xfe\xac\x46\x94\xb0\x58\x08\x1b\x52\xd9\x22\xde\x1d\xbc\x5e\x23\x5b\x32\x12\x16\x67\x5d\x5c\x08\x3b\xaa\x2d\x3e\x37\x6f\x88\x47\x95\x24\xdc\x7c\x3a\xff\x78\xf5\xc7\xfa\xf6\xea\xfa\xe6\xb7\x76\x7e\xdc\xff\xbe\xbe\x5a\xbe\xfd\xa6\x69\x0c\xe4\xd1\xa7\x47\xf9\xf6\xdb\x34\x8b\xf0\x28\x00\x9c\x4a\x18\x93\x84\xeb\x2a\xd0\xde\x7a\x23\xe1\x33\x99\x23\xb6\xd8\xe7\x01\x1d\xa6\x73\xde\xe6\x11\x7d\x8a\x65\x58\xd9\x7a\xe9\xd4\x80\xae\x3e\x97\x73\x80\xc9\x61\x53\xca\xd9\x63\xc2\xd8\x58\x6a\xcb\xcc\x9c\xf0\x43\xe2\x8c\xb5\x90\x71\x6b\xc9\x7f\x08\x6c\x47\xc5\x07\x01\xa0\x1d\x65\xb3\x0c\x4c\x93\x35\xc8\x33\xda\x42\xfd\x9d\x19\x17\x4f\x59\xfd\xb4\xe5\x12\x16\x55\xfd\x5a\x30\x7f\xab\xec\x0b\x31\xaa\xa2\xf5\x85\xb3\xe8\xd3\x05\x79\x8f\x3a\x59\xf2\x5f\x26\x64\xb6\x06\x2b\x4d\xa5\x35\x86\x92\x4c\xe8\xd3\xfd\x21\x60\x94\xa0\x42\x70\x56\xab\x52\xdb\x4e\xde\xbc\xa4\x1f\x98\x12\x0d\x79\xf3\xdd\xcb\x9a\x3f\x23\xf9\xc2\xeb\x19\xe4\x3f\x61\x08\x80\x21\x73\x51\x79\xd5\x75\x02\xe0\xaf\x50\xcc\xd6\x75\x47\xda\x3f\xe7\xe1\xf4\x2b\xab\x94\x15\x62\xde\x5a\x78\x4c\x0f\xc4\xfb\xb5\xcb\x5b\xeb\x67\x5f\x30\x9a\x9d\x4a\x2d\x05\xf4\x71\x67\x37\x69\x49\x53\x5c\xc6\x3c\x78\x4c\xe2\x0d\x1c\x1b\x66\x3c\x88\x89\xb3\x4e\x60\x7d\x62\x32\x59\xa3\x01\xeb\x61\x36\x2f\xf4\x4d\xd7\xfc\x00\xca\x1b\xf8\x72\x77\x05\x67\x4d\xd7\xac\xe0\x61\x67\xf5\x4e\xbc\x01\x83\x81\x51\x17\x6b\xc0\xbf\x18\x80\x1a\x68\xc2\x06\xee\x77\x08\xe9\x81\x20\xee\x28\x3b\x03\xa3\x4a\x7a\xd7\x88\x57\xf3\x8b\xee\x63\xca\x12\xfa\xef\xdf\x95\xc5\xff\xe7\x36\x81\xcc\x27\xe5\xed\x06\x63\x3a\xe1\x45\xe4\xc9\xfa\xed\x8d\xdf\x50\x01\x1f\x5e\x9e\x6f\x57\x8f\xb7\x93\x7d\xb7\xaa\xd3\x34\x72\xba\xb6\x0e\x25\x94\x2e\xe4\x46\x73\xaa\xae\xaa\x2e\x39\x97\xa0\xd5\x31\xb4\xc7\xc3\xab\xc2\x3d\x1e\xc4\x44\x2e\x8f\x78\x69\x19\x75\x22\x3e\x48\x68\x27\xc5\xad\xb3\xc3\xe9\xf8\x9f\x28\xcf\x27\xde\xcc\x0d\x51\x04\xa6\xaf\x87\x57\x07\x53\x23\xcb\x91\x0c\x96\x17\x14\x23\x9f\x2e\xfb\x38\xe6\x59\xae\x8a\xf5\x4b\xa6\xa4\xe6\xda\x80\x7c\x7d\xf7\x91\x29\x07\x29\xfe\x09\x00\x00\xff\xff\x9e\xdd\x05\x83\xda\x04\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\x1c\x37\x0c\xbd\xeb\x57\x10\x9b\x1c\xbb\xf3\xb1\x6e\x1a\x40\x40\x0f\xae\x3f\x52\xa3\x48\xb2\xb5\x8d\xa2\x3d\x15\x1a\x89\xb3\xab\xae\x86\x9c\x52\xd2\x38\xdb\x20\xff\xbd\xd0\xcc\xda\x8e\xd1\x4b\x73\x19\x40\x43\xf2\x91\xef\x91\xcf\x84\xc0\x0f\x97\x3e\x9a\x2e\xa0\xbb\x64\x7b\x40\xd1\xd0\x9b\x10\x51\x99\xd1\xff\x86\x12\x3d\x93\x86\xa9\x55\x8e\xe2\x4f\x9e\xdc\xb9\x73\x82\x31\x6a\x68\x37\x6f\xab\xa6\x6a\xaa\x56\xbf\x39\x2b\xc1\x5b\xb4\x59\xa2\x9f\xf0\x16\x23\x87\xe9\x82\xa9\xd7\x50\x63\xb2\x35\x8b\xdf\x79\xaa\x89\x1d\xd6\x32\x07\x2b\xcb\xd4\x97\xa2\x4b\x1e\x8c\x27\x0d\x36\xe4\x98\x50\xaa\xc0\xd6\x84\x12\xb8\xd9\x6a\x68\xdf\x6e\xaa\xb6\x34\x69\x95\x9b\x27\x2b\x98\x7e\xa7\x15\x00\x7e\x42\xfb\xb3\x21\x17\x50\x3e\x98\x01\x35\xac\x56\xca\x8f\xa9\xb0\x88\x77\x47\xb2\x5b\x14\xcf\x4e\xc3\xea\xac\x89\x2b\xe5\x07\xb3\xc3\xe7\xe2\x9e\x65\x30\x49\xc3\xcd\xfb\xf3\x77\x57\x7f\x6e\x6f\xaf\xae\x6f\x7e\xaf\x97\xc7\xfd\x1f\xdb\xab\xf5\xeb\xcf\x96\x87\x91\x09\x29\x7d\xd1\xaf\x3f\x4f\x8b\x08\x5f\x14\x40\x30\x09\x63\xd2\x70\x3d\x0b\x74\xf0\xe4\x34\x7c\x60\x77\xc2\x56\x87\xdc\x61\xc0\x74\x2e\xbb\x3c\x20\xa5\x58\x9a\x15\xd6\xeb\x60\x3a\x0c\xf3\x73\x0d\x82\x3b\xcf\xf4\xa3\xa7\x5e\x8c\x02\xb0\x81\xb3\x5b\x8f\xc2\x93\x77\x28\x4b\xca\xca\xfc\x93\x05\x57\x4f\x51\xfb\x34\xfa\x1a\x56\xb3\xa4\x73\xc2\xf2\x9d\xb5\x5c\xa9\xc1\x14\x01\x2f\x82\x47\x4a\x17\x4c\x84\x36\x79\xa6\x8f\x13\x8a\x78\x87\x73\x6f\x63\x2d\x8e\x25\x98\x90\xd2\xfd\x71\xc4\xa8\xc1\x8c\x63\xf0\xd6\x94\xdc\x7a\x22\x57\x15\x0a\x42\x98\x30\x56\xa3\x70\xe2\x2e\xf7\xdf\x7d\x9d\xf3\x57\x64\x2a\x73\x3d\x83\xfc\x2f\x0c\x05\xd0\x65\x29\xd2\x6d\x9a\x46\x01\xfc\x3d\x96\x0b\x6a\x9a\xd3\xd8\xbf\xe4\xee\x71\x3f\xb3\x60\x33\xc4\xc2\x5a\x11\xa6\x07\x96\xc3\x36\xe4\x9d\xa7\x65\xd9\x82\x6e\x6f\x52\xcd\x23\x52\xdc\xfb\x3e\xad\x79\x8a\xeb\x98\x3b\xc2\xa4\x5e\xc1\xa9\x60\xc1\x83\x98\x24\xdb\x04\x9e\x92\xb0\xcb\x16\x1d\x78\x82\xe5\x22\xa1\xad\x9a\xea\x07\x30\xe4\xe0\xe3\xdd\x15\x9c\x55\x4d\xb5\x81\x87\xbd\xb7\x7b\xf5\x0a\x1c\x8e\x82\xb6\xec\x1b\xfe\x33\x01\x98\x8e\x27\xac\xe0\x7e\x8f\x90\x1e\x18\xe2\x9e\x73\x70\x30\x98\x64\xf7\x95\x7a\xd1\xbf\xe8\x3e\xa4\xac\xa1\xfd\xfe\x4d\x21\xfe\x8d\x6c\x46\x76\xef\x0d\xf9\x1e\x63\x7a\xc4\x8b\x28\x93\xa7\xdd\x0d\xf5\x5c\xc0\xbb\xaf\x3d\xd9\xcc\x8e\x6c\x74\xdb\x6c\xe6\x6e\x16\x25\x5d\xfb\x80\x1a\x4a\x15\x4a\x65\x25\xcd\x57\x35\x5f\xc9\xb9\x06\x6b\x4e\xbf\x0e\x78\x7c\x91\x78\xc0\xa3\x9a\x38\xe4\x01\x2f\xbd\xa0\x4d\x2c\x47\x0d\xf5\x64\xa4\x0e\xbe\x7b\x74\xf4\xd3\xc8\x8b\x6f\xab\xa5\x20\xaa\x51\xf8\xd3\xf1\x85\x0b\xe6\x3f\xeb\x81\x1d\x96\x17\x94\x43\x7e\xb4\xeb\xa9\xcd\xb3\x5c\x33\xd6\xaf\x99\x93\x59\x72\x47\x94\xeb\xbb\x77\xc2\x79\xd4\xea\xdf\x00\x00\x00\xff\xff\xb9\x56\xc5\xa3\xaf\x04\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x8f\x1b\x37\x0c\xbd\xeb\x57\x10\x4e\x8e\xf5\x7c\x38\x4d\x03\x08\xc8\x61\xbb\x1f\xe9\xa2\x48\xe2\xee\x2e\x8a\xf6\x54\x68\x24\x8e\xad\x5a\x23\xaa\x94\x34\x1b\x37\xc8\x7f\x2f\xa4\xf1\x7e\xa1\x97\xf6\x32\x80\x44\xf2\x91\xef\xe9\x71\x94\x73\x74\x7f\x61\xa3\x1a\x1c\x9a\x0b\xd2\x07\x64\x09\xa3\x72\x11\x85\x0a\xf6\x57\xe4\x68\xc9\x4b\x98\x7b\x61\x7c\xfc\xd1\x7a\x73\x66\x0c\x63\x8c\x12\xfa\xcd\xbb\xa6\x6b\xba\xa6\x97\x6f\xdf\x94\xe0\x0d\xea\xcc\xd1\xce\x78\x83\x91\xdc\x7c\x4e\x7e\x94\xd0\x62\xd2\x2d\xb1\xdd\x59\xdf\x7a\x32\xd8\x72\x0d\x36\x9a\xfc\x58\x8a\x2e\x68\x52\xd6\x4b\xd0\x2e\xc7\x84\xdc\x38\xd2\xca\x95\xc0\xf5\x56\x42\xff\x6e\xd3\xf4\xa5\x49\x2f\x4c\x9d\xac\x60\xda\x9d\x14\x00\xf8\x05\xf5\x4f\xca\x1b\x87\xfc\x49\x4d\x28\x61\xb5\x12\x36\xa4\xc2\x22\xde\x1e\xbd\xde\x22\x5b\x32\x12\x56\x6f\xba\xb8\x12\x76\x52\x3b\x7c\x2a\x1e\x89\x27\x95\x24\x5c\x7f\x3c\xfb\x70\xf9\xc7\xf6\xe6\xf2\xea\xfa\xb7\x76\x39\xdc\xfd\xbe\xbd\x5c\xbf\xfe\xaa\x69\x0a\xe4\xd1\xa7\x6f\xf2\xf5\xd7\x79\x11\xe1\x9b\x00\x70\x2a\x61\x4c\x12\xae\xaa\x40\x07\xeb\x8d\x84\x4f\x64\x4e\xd8\xe2\x90\x07\x74\x98\xce\x78\x97\x27\xf4\x29\x96\x66\x85\xf5\xda\xa9\x01\x5d\x3d\xae\x97\x0b\x26\x87\x4d\x49\x67\x8f\x09\x63\x63\xa9\x9d\x54\x51\xe0\x7d\xe2\x8c\x35\x8f\x02\xfa\xb8\xb7\x63\x5a\x5b\x3f\xb2\x7a\xaf\x82\x8d\xc8\x33\xb2\x00\xd0\x8e\xb2\x59\x07\xa6\xd9\x1a\xe4\x05\x77\xa5\xfe\xce\x8c\xab\xc7\xa8\x7e\xe4\xbb\x86\x55\x7d\x87\x9a\xb0\x7c\xeb\x03\xac\xc4\xd2\xf3\xdc\x59\xf4\xe9\x9c\xbc\x47\x9d\x2c\xf9\xcf\x33\x32\x5b\x83\x75\x60\xa5\x35\x86\x12\x4c\xe8\xd3\xdd\x31\x60\x94\xa0\x42\x70\x56\xab\x92\xdb\xce\xde\x3c\x27\x12\x98\x12\x0d\x79\xfc\xee\x79\xce\x9f\x91\x7c\x99\xeb\x09\xe4\x3f\x61\x08\x80\x21\x73\xd1\x7b\xd3\x75\x02\xe0\xaf\x50\x6c\xd7\x75\xa7\xb1\x7f\xce\xc3\xc3\xa3\x56\x51\x2b\xc4\xc2\x5a\x78\x4c\xf7\xc4\x87\xad\xcb\x3b\xeb\x17\x87\x30\x9a\xbd\x4a\xed\x93\xac\x34\xc7\x75\xcc\x83\xc7\x24\x5e\xc1\xa9\x60\xc1\x83\x98\x38\xeb\x04\xd6\x27\x26\x93\x35\x1a\xb0\x1e\x16\x1b\x43\xdf\x74\xcd\x0f\xa0\xbc\x81\xcf\xb7\x97\xf0\xa6\xe9\x9a\x0d\xdc\xef\xad\xde\x8b\x57\x60\x30\x30\xea\x62\x12\xf8\xd7\x04\xa0\x06\x9a\xb1\x81\xbb\x3d\x42\xba\x27\x88\x7b\xca\xce\xc0\xa4\x92\xde\x37\xe2\x45\xff\xa2\xfb\x94\xb2\x84\xfe\xfb\xb7\x85\xf8\xff\x64\x13\xc8\x7c\x54\xde\x8e\x18\xd3\x03\x5e\x71\x8e\xf5\xbb\x6b\x3f\x52\x01\x1f\x9e\x2f\x72\x57\xd7\xb8\x93\x7d\xb7\xa9\xdd\x34\x72\xba\xb2\x0e\x25\x2c\x7e\x6b\x34\xa7\xea\xaa\xea\x92\x33\x09\x5a\x9d\xae\x0e\x78\x7c\x91\x78\xc0\xa3\x98\xc9\xe5\x09\x2f\x2c\xa3\x4e\xc4\x47\x09\xed\xac\xb8\x75\x76\x78\xf8\x0d\x3c\x8e\xbc\x2c\x7b\xb3\x14\x44\x11\x98\xbe\x1c\x5f\xac\x4e\xbd\x59\x4f\x64\xb0\x9c\xa0\x18\xf9\x61\xc7\x4f\x6d\x9e\xe4\xaa\x58\xbf\x64\x4a\x6a\xc9\x0d\xc8\x57\xb7\x1f\x98\x72\x90\xe2\x9f\x00\x00\x00\xff\xff\xe9\x63\x55\x7a\xe4\x04\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcAzureAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x49\xcd\x4b\xcc\x2b\xf1\x4c\xb1\x52\xa8\xae\x56\xd0\x73\xac\x2a\x2d\x4a\x75\xce\xcf\x4b\xcb\x4c\xd7\x0b\x81\xc8\xb8\x28\xd4\xd6\x72\x15\x97\x26\x15\x27\x17\x65\x16\x94\x64\xe6\xe7\x61\x53\x1b\x8c\x2c\x0f\xd6\x91\x98\x98\xe2\x9c\x93\x99\x8a\xdd\x68\x47\x47\x17\xa8\x24\xaa\xda\xe0\xd4\xe4\xa2\xd4\x12\x3c\xea\x21\x0a\xa0\x7a\x42\x88\x72\x7a\x51\x6a\x71\x7e\x69\x51\x72\xaa\x7b\x51\x7e\x69\x01\xa6\xd2\x20\x64\x69\x90\xfa\x9c\xfc\xe4\x44\x90\x37\x30\x95\xfa\x40\x65\x40\xaa\x00\x01\x00\x00\xff\xff\x69\xfe\xce\x7d\x37\x01\x00\x00")

func nodeEtcAzureAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcAzureAzureConf,
		"node/etc/azure/azure.conf",
	)
}

func nodeEtcAzureAzureConf() (*asset, error) {
	bytes, err := nodeEtcAzureAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/azure/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeNodeDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\x4b\x2d\xb2\xd5\xcf\xcc\xd3\x4d\x4c\x49\x29\xd2\x4b\x2c\x2a\x48\xd4\x37\x34\x32\xd7\x33\xd0\x33\xd0\x33\xe4\x82\x49\x27\xe7\x94\x16\x97\xa4\x16\xe9\xe5\xe4\x27\x27\xe6\x20\xc9\x03\x02\x00\x00\xff\xff\x87\xc4\xbf\xc2\x3f\x00\x00\x00")

func nodeEtcOriginNodeNodeDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeNodeDnsmasqConf,
		"node/etc/origin/node/node-dnsmasq.conf",
	)
}

func nodeEtcOriginNodeNodeDnsmasqConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeNodeDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/node-dnsmasq.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/azure/azure.conf":                           nodeEtcAzureAzureConf,
	"node/etc/origin/node/node-dnsmasq.conf":              nodeEtcOriginNodeNodeDnsmasqConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"azure": {nil, map[string]*bintree{
				"azure.conf": {nodeEtcAzureAzureConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"node": {nil, map[string]*bintree{
					"node-dnsmasq.conf": {nodeEtcOriginNodeNodeDnsmasqConf, map[string]*bintree{}},
					"resolv.conf":       {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

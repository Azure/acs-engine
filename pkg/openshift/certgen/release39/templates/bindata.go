// Code generated by go-bindata. DO NOT EDIT.
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/azure/azure.conf
// node/etc/origin/node/node-dnsmasq.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x88\xcc\xcb\xee\xc3\x85\x94\xdb\x8f\xa5\x92\x1f\x8c\x33\x80\x85\x49\x52\xdb\x81\xa2\xaa\xb2\x28\x0d\x34\xda\x14\x50\x12\xba\xad\xba\xfd\xef\x2b\x27\x81\xd0\xc2\xae\x56\xba\xea\x1b\xcc\x1c\xcf\x9c\x39\x73\x26\xa0\xa8\xab\x3d\x32\x02\xfc\xfe\x6e\x37\x47\xb3\x2c\x8f\xd2\xe6\x60\x9d\xe5\xab\xd9\x73\x64\xff\x6d\x67\x4f\x51\x92\xdc\x6c\xd7\x79\x64\x7f\x7c\x58\x05\x9a\x33\xa9\xc0\xd3\x01\x80\xd0\xa1\xe0\xd2\xbc\xdc\xa4\xf1\x2a\xb7\xd1\x53\x9e\x6f\xb2\xeb\x56\x0b\xd9\xbf\xc5\xab\xc7\xe8\x75\x5f\x91\x05\x99\xed\xfc\xde\x94\x79\x1a\xaf\x96\x36\xba\x6e\xff\xfc\xc3\x41\xa7\xcb\xbb\x44\x11\xed\x32\x81\x5b\x2f\xb3\xb4\x95\xc4\x0f\xad\x28\x9f\x3f\xb6\xac\x46\x91\x9d\x10\x5e\x24\x11\xaa\x02\xd2\x23\x81\x1c\xf8\x4a\x53\x3f\xf4\x14\x3e\x73\x1c\xc7\x29\x0b\x0d\x80\x08\xd5\x05\xa2\x34\xf3\x14\x88\x31\xe1\xf8\x62\x97\x03\x0e\x54\x31\xdf\xd3\x8a\x8d\xc0\x0f\x15\x6e\xef\x53\xd5\x78\x94\x33\xf0\xd4\x2f\x0c\x78\xd5\x39\x1e\xb0\xa4\x3c\x22\xb7\x7b\xda\x12\x5f\x1c\x44\x27\x84\xd7\x01\xea\x0b\x89\x2d\xcb\x6a\xdc\xcd\x93\xad\x69\x72\x5f\x12\x64\x1e\x53\x8c\x70\x4d\xdc\x31\x08\xc5\x24\x7c\xdb\x2a\x76\x9d\x28\x0f\xa5\x02\x51\x57\x3f\x32\x0a\xc2\xdf\xd0\x4f\x4b\x45\x14\xe0\x55\xf4\xd7\xe9\xb4\xf2\x87\xe0\x61\xe3\x8e\x1f\x95\x42\x3f\xce\x2a\xed\x5c\x26\xa9\x3f\x06\x31\xc5\x5f\x03\x5a\x8a\xf1\x71\xb0\x47\x38\xef\x12\x3a\xc4\x9b\x74\xfd\xfa\x76\x94\x0e\x84\x7f\x3b\xc5\x25\x8b\x5a\xf6\x6f\xb4\x88\x54\x82\x51\xa5\x05\x50\xdf\xeb\xb1\xbe\xa6\x03\xa0\x43\x8c\x16\xb3\x24\x8b\x76\xce\x27\xa1\xf2\x35\xf5\x47\x01\x29\xad\x2c\x40\x81\x67\x7e\x61\xe4\xec\x30\xe0\x91\x2e\x07\x3d\x6e\x63\x94\xa7\xdb\x08\x95\x23\xdc\x84\xbe\x22\xda\xcc\x0b\x9e\xab\xbb\x53\x05\x12\x9f\xb7\x3b\xe7\x9d\xcb\xab\x76\xe7\xd2\x38\xae\x90\xe1\xbe\x2a\x52\x4e\xbf\x5e\x2c\x0e\xff\xeb\x1e\x61\x3c\x14\xa0\x27\x84\x29\x8c\x2e\x1c\x67\xdf\xb4\xcc\x0b\xe8\x09\x90\x83\xfa\xf8\xd0\x4f\xe7\x08\xe4\x9a\x7d\xee\x6e\x10\x9d\x1d\xe5\x27\x82\x29\xa8\x01\xa7\xba\x10\xb7\xce\x3b\xc8\x90\xcf\xa2\xf9\x36\x8d\xf3\xb7\xea\x5e\x94\x30\x76\x71\x35\x25\xba\xc7\x38\x60\xf3\x3d\x29\xbf\x29\xf3\x59\x73\x9e\xe6\x25\xaa\x5a\x26\x05\xa1\x8c\xb2\x83\x4f\x82\x15\xd1\x2f\x8f\xb3\x28\x7d\x89\xd2\xba\xc0\x10\xa6\xff\x02\xf9\x33\x7a\x3b\x5c\x99\xe2\x72\xbf\xc9\x72\x12\x73\xbe\xff\x8f\x65\x01\xfd\x4f\xaa\x25\xe2\x04\xdf\x4d\x74\xc8\xb6\x80\x9d\xa0\x5c\xa0\x6a\xc2\x05\xec\x88\xb5\xd5\xb8\x4b\xd6\xcb\x65\xbc\x5a\x56\x12\xbb\xd0\x0d\xfb\x18\xf5\x0e\x86\xe2\x7e\x5f\x07\x84\x0e\x49\x1f\x34\x87\x31\x98\xe7\xa6\x43\xa9\x09\x2e\x5e\xa0\xca\x6a\x8b\x38\x29\x6a\x7d\xf2\x6c\x10\x08\xbf\xf7\xc5\xf2\x23\x30\x77\x21\x31\x7a\x98\x65\xf1\x1c\x59\x0d\xab\x71\x37\xdb\xe6\x4f\xf7\xb5\xbe\x83\xea\xb3\x80\xb2\xf8\x79\x93\x44\xc8\xfa\x27\x00\x00\xff\xff\x6b\x4e\x0b\x40\xe2\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x7b\x6f\x1b\xb9\x11\xff\x5f\x9f\x82\x10\x0e\x48\x52\x74\x57\xb2\x9d\xe7\x02\x45\xa1\xda\xce\xc5\x38\x3b\x56\x65\xa7\x28\x50\x17\x01\x45\x8e\x56\x8c\xb8\xe4\x86\x0f\xc5\x8a\x2f\xdf\xbd\xe0\x63\x77\xb9\x7a\x24\x41\x9a\xc3\x39\x41\x22\x91\x33\xc3\xe1\xcc\x8f\xf3\x32\xa6\x15\xd3\x9a\x49\x71\x2a\xc5\x82\x95\xc5\x00\xa1\x9a\xdb\x92\x25\xdf\x11\xfa\x87\x65\x9c\x9e\xc1\x02\x5b\x6e\x74\x58\x42\x88\x78\x02\xab\xb0\x61\x52\x34\x8b\x08\xe1\x9a\xfd\x0b\x94\x93\x58\xa0\xf5\x51\xbb\x0c\x62\x5d\xa0\xff\xfc\xb7\xfd\xbe\x62\x82\x16\x7d\xc1\xe1\xc4\x96\x42\x81\x96\x56\x11\xd0\x9d\x6c\x84\x38\xab\x98\xd1\x05\x7a\xf8\x92\x2c\x2a\xf8\x68\x41\x27\xcb\x5e\xec\xf5\x1a\x94\x62\x14\x7e\x50\xe1\x44\xc1\x56\x52\xa2\xe1\x54\xd2\xa9\x02\x0d\xe6\xc7\xa4\x53\xa6\xf1\x9c\x43\x81\x16\x98\x6b\xd8\x3a\x34\x1a\x64\xd2\x77\x8d\x27\x92\x35\x08\xbd\x64\x0b\x93\x33\x39\xba\xa8\x70\x09\x53\xc9\x19\xd9\xfc\xa0\x53\xee\x81\x58\x47\x39\xb3\x3c\xb5\x73\x86\x2a\x6c\xc8\xd2\xcb\x9f\x08\x21\x8d\x17\xd7\x73\x44\x86\x56\xb0\x29\x10\x73\x24\x3a\xef\xa9\x45\x41\x6c\xb2\x56\x74\xc2\x83\xd0\x1a\x73\x0b\x05\x7a\x64\x94\x85\x47\xc9\x8e\xc0\x15\x14\x9d\x3a\x19\x05\xc1\x80\x26\x04\x52\xcc\xf6\xc1\x21\x6b\x51\x52\xa0\x5a\x52\x7d\x60\x6b\xee\xbc\xa8\x7b\x88\xf9\x00\xc4\x14\xc8\xe9\x91\x2c\xeb\x15\xab\xaf\xfd\x49\xdc\xeb\xf1\x1a\x33\x6e\x15\x6c\xd1\x05\x27\x25\xc6\x8f\xfe\xc1\x65\xa9\xa0\xc4\x46\xaa\xe4\x2d\x29\x79\xbf\x39\xe5\x0c\x84\xb9\x10\x0b\x19\x74\x27\xa0\xcc\x6b\xe6\xbc\xdf\xb1\x64\x0b\x25\x85\xc9\x3c\x7d\x4e\x94\xf1\x84\x2b\xd8\x7c\x95\x6e\x05\x9b\x01\xae\xd9\x25\xac\x81\xeb\x62\x90\x39\xdf\x6e\xb9\x1a\x5b\xb3\xec\xd4\x89\x2f\xe5\x0d\x60\x0a\x2a\x2a\xe3\x95\x3b\x9d\x14\x28\x91\x9c\x11\xdc\x2a\x11\x09\x64\x55\x49\xf1\x16\x57\x8d\x03\xb2\x03\x4a\x0d\x02\xb0\x8c\xc2\xe1\x94\xa9\x82\x05\xbb\xef\xb8\xfe\x9d\xcd\xa0\x92\x06\xb2\x73\x47\x93\xf9\xd5\x52\x49\x5b\x07\xf2\x5d\xba\x5f\xdd\xa6\x5f\xb4\x1a\x94\x43\xca\x21\xca\x77\x1a\xd4\x80\x48\x61\x94\xe4\x1c\x12\x2f\x00\x07\xd2\x3d\x08\x2e\xc9\xea\xad\x07\x5c\x0b\xdb\xac\xc2\xda\x80\xca\x3a\x66\x87\x16\x0d\x6a\xcd\x08\xdc\xb8\xff\x44\x79\x0a\x2a\x3e\x76\xcd\x4a\xd1\x98\x2f\xf5\x66\xa4\xcf\xc2\x7e\x6b\xc0\xc4\x8f\x5b\x14\xce\x7f\xc9\x91\x05\x7a\xf4\x97\x47\x03\x22\x95\x9e\x70\x2e\x3f\x01\xbd\x56\xac\x64\xc2\x7b\xf6\xf1\xdf\xd9\x93\xd1\xe8\xe8\xf8\xc5\x5d\x3e\xf6\x7f\x8f\x1e\x17\xbf\xdf\x7d\x7e\xd2\x6e\x71\x49\x30\x5f\x4a\x6d\xda\xf5\x87\x07\x54\x2b\x26\x0c\x1a\x06\x8a\x21\x7a\xfc\x4f\x2b\x0d\x5c\x81\xc1\xe8\x31\x13\x14\xee\x51\x7e\xe5\x2f\x9e\x5f\x4c\x35\x1a\x3f\xc9\x6f\x8c\x62\xa2\x7c\x82\x86\x4e\xc8\xdd\xe7\x27\x43\xf4\x3b\xfa\xe8\x78\xd0\x97\x2f\xed\x49\x2b\x3b\x07\x25\xc0\x80\xbe\xcb\x69\x08\x55\x5b\xba\xec\xa1\xb8\xcb\xf5\x9a\xdc\xe5\x84\x5b\x77\xde\x5d\xee\xd5\x3d\xc8\xf6\x7d\x77\xc8\xcf\xef\x8d\x43\x04\x0f\x97\x78\x23\xb5\x71\xf0\xf8\x86\xfa\xad\xd3\x77\xb5\xff\xfa\x69\xd1\x54\x3f\x7c\x8c\x37\xc1\x77\x5a\x6a\x8b\xec\xe8\xc5\xf1\x5d\x7e\xb2\xdf\xf1\x07\x0e\xfa\x86\xad\x5b\xae\xb8\x4e\x85\xee\xde\xcb\x9c\x09\x3a\xa1\x54\x81\xd6\x05\x1a\xe7\xfe\x4f\xf1\x72\xfc\xec\x24\xee\xbd\x05\xf3\x49\xaa\x55\x81\x0c\xa9\x9f\x0e\xc0\x10\xda\x0f\x71\x04\x17\x28\xbc\xa8\xdc\x6d\x76\xd1\xa4\x7b\x2b\xbd\x6d\xcf\x1c\x49\xda\xb7\xb2\x87\xc2\xbd\x17\x84\xac\xe2\xfe\xed\xa7\xfe\x5a\x1a\x53\xeb\xc2\x79\x6c\xdb\x4d\x68\x58\x1c\x9f\xbc\x78\xd5\xf3\x91\x93\x79\x63\xa4\xc2\x25\x74\x97\xee\x5c\x11\xb7\x42\xe4\x2a\x92\x8d\x9c\xc9\x7d\x84\xfd\xd4\xea\x2c\x7b\xe3\x2c\xbb\x25\x26\xcd\x91\x7b\xc8\x52\x21\x3e\xab\x76\x9a\x2d\xa4\xaa\xb0\x29\xd0\xd5\xe4\xe6\xf6\x7c\xf6\xfe\x7a\x76\xfe\xeb\xfb\x77\xb3\xcb\xec\x97\x07\x22\xab\x5a\x0a\x10\xe6\x4b\xf1\xcb\xc3\x3a\x48\x70\x25\x10\xc7\x06\xb4\x69\xaa\x0b\xb6\x9d\xaa\x9c\x50\x26\xc2\xdb\x99\x41\xc9\xb4\x51\x9b\xc6\x5e\x05\xa2\x92\xac\x40\x65\x2a\x6e\x34\xa8\x72\xa0\x2a\x9e\x8d\xc7\xe3\x41\x48\x80\xc1\xce\x31\xf7\x39\x9b\x70\x30\xbb\x30\x20\x38\x9b\x5b\x41\x39\x1c\x42\x40\xe4\xfc\x3a\x08\xb6\x88\x02\x0e\x6a\xa9\x4c\x81\x8e\xc6\xc7\xcf\xc6\x83\xce\x27\xa9\x5a\x4e\x09\x5c\x33\x17\xc0\x41\x4d\x54\x69\x2b\x10\x4d\x01\xab\xac\x30\xac\x82\x8c\x24\x75\x6e\xe6\xa8\xf5\x48\x83\x31\x4c\x94\x3a\x5f\xbd\x74\x2e\x1f\xad\x8f\x30\xaf\x97\xf8\xe8\x6f\x6d\x19\xa0\x83\xcf\xb2\x39\x26\x2b\x10\xb4\xe1\x76\xb8\x3a\xe9\x11\x54\x40\x19\xce\xcc\xa6\x86\xee\x84\x9a\x33\xe2\x0b\xaa\xd1\x5a\xd0\x3c\x41\x57\xad\xa4\x91\x73\xbb\x88\x69\x57\x5a\xea\x52\xea\x9a\xb5\xb9\x3a\x43\x43\xfc\xd9\x2a\x18\x26\x14\x7d\xfd\x87\x23\x30\x64\xe4\x89\xc2\xbf\xb9\xdb\x77\xf4\x5d\x9e\xd9\x32\x44\x0c\x13\x3e\x27\x31\x51\x66\xce\x43\xd9\xc2\x59\xbf\x27\x53\xfa\x5c\x34\x0a\x0e\x19\x85\x17\x3d\xdc\x2b\x60\x05\x9b\xef\xe1\x5f\xc1\x66\xf8\x87\xdc\xb4\x8a\x08\xb0\xc2\xc1\xa3\x5d\xb8\x98\x16\x2e\x60\x7c\x2d\xf1\xa5\x31\xc2\xe1\x8b\x9e\xaf\x99\x2f\x1c\x6e\x59\x05\xd2\x9a\x02\x09\xcb\xf9\xb7\xcb\xba\x88\xda\x58\x4a\xa5\xc0\xde\x85\x76\x8f\x28\x00\x5b\x93\x25\x50\xdb\xf3\x54\x73\x70\xbb\x15\x00\x1e\x24\xed\xb1\x6f\x4b\x97\x7f\xd0\xbe\x06\x8f\x95\x87\x7e\x2b\x29\x4c\xa5\x32\x33\x2c\x4a\x57\x89\x3f\x4a\xf6\x6e\xec\x5c\x80\xb3\xd9\x8b\xe3\xfc\xc4\x07\xfd\xd1\xd1\x73\xb7\xef\xea\x7f\xe2\x38\x43\xfd\xe7\xfa\xb8\x68\x64\xaf\xb6\x07\x12\xc4\x5c\xfc\x5b\x8b\xe7\xd3\x58\x38\x0a\x11\xaa\xaf\xad\x86\x0c\x13\x02\xb5\xdb\x36\x20\xcc\xed\xa6\x76\x82\xbf\xe3\x71\xfc\x35\xa5\x89\x97\x43\x68\x6e\x95\x8b\x77\x4f\xc7\xe3\x41\x6c\x83\x1a\xa9\xdf\x25\xd4\x33\x7d\xac\x75\x81\x8e\xbd\x84\xdd\xcb\xb8\x4f\x31\xa8\x04\xa3\xb5\xe1\xfc\x52\xca\xda\xc5\x81\x3f\xe1\xba\xcf\xff\xef\xeb\x9e\x78\x09\x3b\x77\x49\x6f\xbb\x5d\x24\x7b\x81\xe1\x2d\x46\x14\x4c\xed\x9c\x33\xf2\x6e\x76\x59\xec\xcf\xc8\xfb\xcb\x34\x34\x2c\xba\x6c\xed\x20\x99\xbe\x3e\x11\x2a\x8c\x2e\x8c\xc7\x20\x13\x2b\x8f\xd3\x8b\xb3\x99\x0b\xfd\xf9\xd1\xf1\xcb\x80\xd3\xa7\x3b\x34\xb1\x46\x20\x8c\xaa\x5d\x52\x84\x5c\xa9\x1c\x00\x7f\x09\xa2\x34\xcb\x02\xbd\x4a\x1c\x7f\x31\x4d\x4e\x8a\x92\x62\x21\x34\x72\x16\xdb\xcf\x1d\xb5\x9e\xfa\x01\x4a\x68\x31\x14\xd0\x25\x36\x5d\xb9\x95\xc9\xb5\xce\xb4\xe7\xec\x5e\x5e\xff\x56\xbd\xd7\x27\xfb\x0d\x1c\xd6\x1a\xcc\xcf\xb2\xf7\x70\x44\xa4\xd0\x92\xc3\x68\xd8\x8f\x7c\xa5\xc2\x1e\xc9\x6d\xb8\xad\xc0\x2c\x25\x2d\x10\xb6\xc6\xd5\x2e\x8c\x82\x30\xcc\x6c\xa6\x31\x66\xeb\x62\xf0\xf0\x90\x21\xb6\x40\xf9\xb9\xc0\x73\x0e\x93\xc9\xd9\xc4\x9a\xa5\xa3\x0a\x48\xf4\x62\xb3\xd8\xe7\x4f\x5c\xb8\x46\x93\xb3\x80\xdd\x25\xe6\x1c\x7c\x30\xea\x66\x21\x5c\x96\x4c\x24\x6d\x77\x85\xeb\x9a\x89\xf2\x2a\xaa\x41\x38\x66\x95\xdf\xe8\x67\x8d\x03\x83\x8e\x50\xaf\x5c\xd7\x20\x2e\xce\x2e\xb6\x54\x6f\x9a\xb8\x10\xcb\xcf\xbc\x45\x73\xaf\x60\xb8\x7f\x3e\x99\x9c\xc5\x40\x7f\xd6\x37\x52\xc7\x76\x03\x44\xb9\xb8\x79\x90\x35\x10\xec\x63\xc7\xac\x4a\x06\x1a\x8c\xa6\x33\x18\x6d\xe7\xed\xb7\x5a\xc1\x02\x94\x02\xfa\x2e\xf6\xc0\x29\xa1\x15\xec\xa3\x85\xf7\x6e\xb9\x5d\xdd\xa6\xe9\x6d\x42\x85\x19\x4f\x77\xfd\x42\xfc\xde\x94\xd7\xd1\xa0\xd6\x2c\xa5\x62\x9f\x61\x1f\xd6\xbc\x9b\xf2\x8a\x11\x25\xb5\x5c\x18\x29\x38\x13\x2e\x0f\x57\x0e\x85\xa9\x25\x6e\x41\x60\x6f\xc1\xe1\xc8\x03\xfa\x78\xd4\xca\x1d\xee\x9a\x05\x21\x23\x57\x20\x7e\xf2\x89\x5e\x66\xef\x34\x87\x59\x10\xb4\x87\xcd\x4b\xd7\x2b\xa1\x1a\x6b\xfd\x49\x2a\xba\x8d\xd0\x16\x90\x3f\x17\xa0\x8b\x43\x69\x7c\x69\xbc\x26\xb4\x07\xe4\x37\xb7\x53\xbf\x38\x8d\x4a\xee\x81\x74\xcc\xce\x93\xdd\xfa\xfb\x0f\x8b\xd8\x8d\xe8\x9f\x2c\x54\xc3\xd6\x74\xba\x5d\xba\xc2\xf7\x93\x12\x6e\x5c\x2a\xa2\x2e\x93\x35\xc9\x30\x6e\x87\xf0\xab\xb5\x48\x17\xc3\x43\xd4\x87\xcb\xa6\x40\x96\xe9\x40\x97\x6f\x70\xe5\x9e\x85\x87\x4e\xaa\x82\x4b\xe6\x5a\xdf\xba\xe5\x2d\x35\x5e\x3e\x6f\x6a\x90\x16\xe1\xfb\xc8\x9e\x8d\xc7\x83\x1a\x5b\xed\xe0\xda\x8d\x7f\x42\x00\xac\xb7\x3a\xb5\xb9\x94\x46\x1b\x85\xeb\xd0\xc2\x1d\x54\x3e\xf0\x35\x05\x5f\x9b\x71\x2e\xc4\x42\x61\x6d\x94\x25\xc6\xaa\x50\xc1\xd5\x98\xf4\xa6\x5f\xcc\x91\xa4\x3c\x37\x4b\xac\x80\xb6\x23\xd7\x7d\x4c\x83\x5a\xc9\x0f\x40\x92\x34\x11\xfb\x44\x57\x27\xde\xf8\x89\x9b\x54\x05\x12\x92\x42\xa6\x24\x87\xbc\xd7\x46\x8f\x5c\xe7\x6a\x0d\x34\x2d\x55\x14\x36\x0b\xf3\xc9\x2b\xd0\x1a\xb7\xe5\x69\x7f\xef\x16\xaa\xda\xb5\xb7\x6d\xed\x4a\xac\x62\x66\x33\xe1\x5c\x12\xec\x8e\x0c\xef\x91\xe8\x76\x25\x96\xba\x7a\x5c\x8c\x8e\x9b\xcd\x4b\x3c\x07\xae\xa7\xa0\xa6\x41\x78\x81\x9e\x85\x11\x23\xa3\xdb\x7c\x47\xe3\xe6\x27\x3b\x7a\xd5\xfc\x8c\xfc\xea\x40\x49\xeb\x3a\xc5\xce\x06\xda\xce\xa9\xac\xb0\x8b\x0d\xb7\xe7\x57\xd3\xd9\xf5\xbb\xdb\xf3\xd9\xc5\x34\x17\xac\x76\x6d\x7f\xcc\xf7\x13\x42\x5c\x77\xd2\xb1\xf9\x5f\x6b\x04\x70\xce\x5c\xa0\x07\x41\x40\x77\x09\xb1\xc2\x02\x97\x40\xdb\xe9\x6b\xd6\xd8\xda\x7f\xf6\xd3\x6d\xff\xec\xdd\x7a\xcd\xe5\xe6\x1b\x31\xa0\x56\x6c\x8d\x0d\xfc\xb6\x35\x95\xc4\x41\x2b\x57\x26\xfa\xfd\xa6\xcd\xf6\xb1\x22\x12\xc7\xe3\x77\x38\x3c\x8d\x67\xd0\x61\x5a\xda\xb4\x45\xbd\x51\x52\x17\x16\x9a\xa1\xd2\xd7\x9e\xfe\xee\xa4\x69\x4f\x8f\xa5\x7d\x6f\xdf\x0c\x17\xda\x59\x76\x3b\x71\xda\x6e\xb7\x22\x7d\xb8\x5a\x85\xef\x23\xaa\xf4\x85\x78\xcd\x59\xb9\x34\xe1\x69\xb6\x93\xf2\xd8\xf8\xf5\xa3\xcc\x5a\x72\x5b\x25\xf3\x19\xba\x11\xb8\x62\xc4\xc7\x5f\x17\x3e\x98\x28\x43\x19\x44\x63\x86\xf8\x5f\x00\x00\x00\xff\xff\x3e\x98\x14\x40\x65\x1b\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x96\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x52\x85\x1a\x85\xc2\xd2\xfc\x92\x54\x85\xda\x5a\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x84\x3a\xd7\xbc\x64\x4c\x65\x80\x00\x00\x00\xff\xff\xc1\xc1\xc9\xa5\x80\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x5d\x6f\xdb\x3a\xd2\xbe\xcf\xaf\x18\x38\x05\xfc\xbe\xd8\xda\xde\xb6\x07\xd8\x3d\x02\x7a\xe1\x93\xa3\x36\xc1\x69\xe2\xc0\x76\x16\xed\x2e\x16\x02\x25\x8e\x2c\x6e\x68\x8e\x4a\x52\x76\x7c\xb2\xf9\xef\x8b\x11\xe9\x2f\xe5\xa3\x41\x7d\x65\x59\x33\xcf\x3c\x9c\x6f\x7a\x30\x18\x9c\x9c\xc2\xa7\x8b\xaf\x97\x69\x02\x63\xb3\xf1\x95\x32\x0b\xc8\x51\xd3\x1a\x94\x01\xa1\xf5\xa0\x10\xb5\x83\x4a\x38\x50\xbe\xef\x60\x25\x74\x83\x60\xb1\xd6\xa2\x40\x09\xf9\x06\x1c\x4a\x16\xf5\x15\x9e\x9c\x42\xfc\x50\x8d\xc6\x55\xaa\xf4\x4b\xe1\x3c\x5a\x57\x58\x55\xfb\xa1\xab\x60\x5d\xa9\xa2\x02\xe5\xc0\x90\x07\x25\x51\xe8\xb7\xb0\x46\x70\x15\x35\x5a\x42\xa9\xee\xc0\x57\xc2\x0f\x4f\x34\x15\x42\x07\xe5\xe4\x04\xa0\x22\xe7\x1d\x7f\x01\x68\xdf\xf0\xf3\x09\xc0\x4a\xd8\xf8\xab\x30\x4e\xe5\x1a\xb3\x82\x8c\xc1\xc2\x2b\x32\x49\x90\x3c\x7a\x5b\x6f\x7c\x45\x26\x53\xc6\xa3\xad\x2d\x32\x38\x8c\x1a\x67\x47\xb9\x32\xa3\xf0\xf2\xfd\xc9\xc9\xd1\x01\x32\xe5\x18\xd4\x0b\x65\xd0\xaa\x3f\x51\x26\xf0\x49\x68\x87\x1d\xa9\x42\x2b\x34\x3e\xcb\x95\x11\x76\x73\x00\x4a\xc5\x23\xbc\xa5\x58\x60\xe6\xc5\x22\x81\xde\xea\x1f\xe9\x74\x76\x31\xb9\xea\x05\xa1\x53\xb8\x9a\xcc\xd3\x04\xe6\x95\x72\x50\x54\xc2\x2c\xd0\xb1\x6b\x3f\x0c\xdf\xfd\xf5\x2f\x20\x8c\x0c\x21\x10\x5a\x43\x41\xcb\x5c\x99\xd6\xf3\x9e\x40\x80\x53\x66\xa1\x91\x1d\xa2\x44\xae\x31\xc2\x85\x4f\x63\x24\x5a\x8e\x0f\x18\xb1\xc4\x03\x2a\x6b\xcc\xf9\x6c\x8e\x34\x46\x5a\x2c\xd0\xe1\x7b\x28\x54\x5b\x2c\xd5\x5d\x02\xbd\x8b\xcb\xf1\xe7\x34\xbb\x9e\xa6\x9f\x2e\xbe\x8e\x7a\x2f\x68\xec\x61\x77\x5a\xf3\x6f\xd7\xe9\x60\x8d\xf9\x20\xca\xbc\xa4\xbe\x42\xeb\xda\x58\x76\x5d\x45\x16\x17\x59\x63\x75\x16\x73\x04\xfa\x97\xe3\xd9\x3c\x9d\x66\x93\x69\xfa\x39\xbb\x99\x7e\x19\xbc\xb9\x2f\x68\x59\x93\x41\xe3\x1f\x92\x37\xf7\x11\xe9\xa1\xdf\xb1\x16\xf4\x33\x89\xa5\x68\xb4\xcf\x5c\x93\x4b\x5a\x0a\x65\x12\xe8\xcf\xd3\xcb\xeb\xe9\xe4\x66\x9e\x4e\x2f\xae\x87\x46\xd5\x43\x45\xfd\x6d\xa0\xda\x8a\x89\xdf\xdb\x70\xc5\x0c\xce\x11\xfc\xa6\xc6\x8f\xca\x94\x56\xbc\x85\xbc\xf1\x9c\xde\x95\x58\x21\x78\x02\xad\x56\x08\x6b\xe5\x2b\xb0\xb8\x50\x64\x82\x18\x94\x64\xc1\xd0\x3a\xc2\xe5\x58\x88\xc6\x21\x50\x09\x1a\x17\xa2\xd8\x80\x45\xe1\xc8\xb8\x0e\x73\x4b\x0d\x33\x77\xa8\xb1\xf0\xc4\x2e\x38\x04\xed\x9e\x93\xdf\x39\x6f\x37\x2f\xcb\x9f\xc2\x15\xb5\x65\x09\xeb\x6a\x03\x9e\x0f\xa6\x1c\x08\x90\xaa\x2c\xd1\xa2\xf1\x20\x85\x17\xed\x11\xc3\xe1\x94\x07\xd5\x25\x56\x5b\x5a\xa2\xaf\xb0\x71\x99\x21\x89\x07\x16\xef\xa3\xc9\x7e\x02\xfd\x60\xf5\x61\xeb\xd0\x19\x7a\x18\xff\xd9\x58\x04\x57\x63\xa1\x4a\x55\x04\x53\xec\x1b\xae\x76\x94\xb0\x3d\x42\xc7\x5c\x78\x7b\x70\x40\x4f\x96\x93\xae\xb6\xb4\x52\x92\x73\xa3\x27\x18\x38\xcb\x35\xe5\xdd\x64\x7b\x4e\xf9\x56\x19\x99\x40\x8f\xf2\xff\x60\xe1\x5f\xab\xb4\x37\x93\x89\xa2\xa0\xc6\xf8\x90\xf8\xfd\x69\xfa\xf9\x62\x36\x9f\x7e\xcb\x66\xf3\xc9\x94\x6b\x60\xfc\xcf\x9b\x69\x9a\x8d\xcf\xce\x26\x37\x57\xf3\xab\xf1\x65\xda\x0d\xd7\xeb\x4d\xdc\xe2\xe6\x87\x16\xfe\x48\xbf\xfd\x84\x81\x5d\xdb\x4b\xa0\xb7\x95\xfb\x09\x57\x58\x14\x7a\x99\x40\xaf\x20\x8b\xc3\xb5\x32\x92\xd6\x6e\x68\xd0\xf7\x9e\xa8\xa5\xf8\xcb\xb9\xb0\x12\x0a\x92\x18\x52\x30\xd6\xc7\xf0\x48\xe6\xac\xb1\x9c\x90\x7a\xd3\x76\xb6\x42\x37\x5c\xc7\xe0\xbc\xf0\x08\xc2\x83\xc4\x5a\xd3\x66\xc9\x29\xeb\xd5\x12\x41\x12\x86\xa1\x13\x6a\x91\x9b\x21\x49\x74\x11\x2c\xf0\x47\x8b\x92\xcb\x94\xdf\x86\xbe\x10\x8a\x55\x8b\x1c\xb5\x03\x51\xd7\x5a\xa1\x6c\x1b\xb1\x45\x21\x37\x2c\x9b\x23\x7c\x6f\xd0\x2a\x94\x11\x4a\x2c\x84\x32\xce\x33\x07\xc6\xa9\x49\x19\xdf\xce\x47\x66\x11\xe6\x64\x24\xd7\x8e\xba\x20\xa4\xc5\x26\x27\xba\x75\x60\x1b\x33\x84\xb1\x76\xf4\x36\xc2\xf1\xeb\x50\xe9\xed\xd0\x55\x85\x80\x36\xec\x10\x3b\x16\xf4\x4a\xa1\xb5\x83\x5c\x14\xb7\x3d\x26\xf4\x8e\x79\x5a\xaa\xad\x12\x1e\xf5\x06\xd6\x15\x5a\x04\xe1\x0e\xf1\x62\xb4\x76\x88\x9a\x16\x5c\x6f\xd1\x45\x43\x98\xb7\x3a\x6b\xc1\xb3\xc6\x11\x48\xe5\x8a\xc6\x71\xfb\x04\x91\x13\x57\x7d\x19\xd1\xc2\x3c\xda\xdb\x63\x02\x92\x42\xd4\x62\x9f\x6b\x2d\x38\xf8\xf8\x11\x42\xb3\x6b\xdd\xbe\x6b\x72\x0c\x10\xb1\x6a\xb4\x25\x16\x1c\xd0\x12\x45\x3b\xaf\x19\xad\x0d\x97\x30\x07\xca\xf1\xfc\x95\x5a\x54\xed\x58\x13\x5b\x9f\x3a\x65\x77\x51\xd8\xda\x3d\xce\x99\x29\xae\x94\x53\x1e\xb4\x60\x7f\xfe\x5f\x4d\x8e\xed\x6c\xb8\xc1\x09\x5c\x92\x71\xe8\x81\x2c\xbc\x21\x5f\xa1\xfd\xff\x67\x52\x3d\xb4\xdd\xad\x81\x04\xde\xfd\xa0\x24\x0e\x25\x9f\xef\x94\x6d\xe2\x26\xd0\xab\x2d\x3a\x34\x8f\x5a\x4e\xb7\xa7\xe2\x5d\x4d\x96\x79\x84\x01\xbb\x9b\x93\xfd\xeb\xe9\xe4\x32\x9d\x9f\xa7\x37\xb3\x2c\xfd\x7a\x3d\x99\xf2\x4c\x8c\xa3\xb3\xdf\x35\x7f\x34\xa8\x8d\xf3\x42\xeb\x04\xe6\xb6\xc1\x17\x78\x06\x7b\xaf\x5b\x04\xf6\x35\x98\xf1\xc4\x48\xa0\x3f\xbe\x9a\x5d\xfc\xf6\x25\xcd\x7e\x4f\xaf\xbf\x4c\xbe\xb5\xab\x40\x64\xb5\x5d\xd1\x1c\xda\x95\x2a\x30\xcb\x2d\xdd\xf2\xf1\x8e\x68\x1d\xc3\x6f\x45\x0b\xe1\x85\xa6\xc5\x8b\xd4\x0e\x56\x8f\x2e\xcb\xa7\x61\xf6\x1e\x5d\xed\xdc\xf7\xe4\xe6\x80\xbe\x90\xbc\x89\xb8\x04\xfe\xd5\xab\xbc\xaf\x5d\x32\x1a\x9d\x4f\x66\x6d\x5b\x4f\xde\x7f\xf8\xdb\xaf\xbd\x7f\x87\x23\x7a\x5c\xd6\x9c\x79\xdd\x33\xbe\xe4\xcc\xe7\x74\x9e\xdb\xab\xb6\xf2\x83\x28\x3f\x08\xf2\x2f\x83\x3d\xbb\x65\x1d\x2d\xa4\xca\x81\x45\xd9\x18\x29\x8c\x0f\xc3\xdf\xe2\xf7\x46\xc5\x9e\x59\x09\x23\x79\x01\x0d\x50\xe0\x6e\x71\x0d\x39\xfa\x35\xa2\x39\x5a\x46\x77\xfe\x1b\xc4\x88\x73\x4f\x9c\x58\xb5\xe0\xdb\x86\x91\x30\x39\xbb\xee\xf8\x19\xef\xc4\xb2\xd6\x18\xd6\x70\xce\xa5\x03\xba\xb3\xf3\xc9\x74\xce\xf9\xdd\xeb\xa6\x6c\x41\xc5\x6d\xad\xb6\x39\x78\xe8\xe5\xb3\xc9\xd9\x1f\xd7\x17\xf3\xe7\x92\xf6\x91\x62\x2e\x1c\x46\x47\x6f\x55\x7f\x1b\xcf\x52\x0e\xef\x0f\x75\xf7\x54\xb7\xaa\x4f\x3b\xf8\x77\x6a\x67\x93\xc4\x52\x19\xfc\x61\xcf\x01\x47\xfb\xd9\xe1\x85\xbb\x85\x52\xed\x76\xfe\x20\x3b\xdc\x2c\x35\x28\xe3\x94\x0c\xc3\xae\x0b\x09\x96\x34\x42\x69\x69\xf9\x44\x44\xd6\x4a\xeb\xed\x34\x6b\x3c\xd5\x54\x37\x9c\x36\xbc\xec\x35\x7c\xd1\x78\x12\xb1\xbb\x8f\xb6\xd1\xe4\xd1\xb8\x51\x66\x71\x30\x7c\x4c\xb3\xcc\xd1\xf2\x76\x7b\x30\x0f\xba\xe9\xb6\xbf\xc9\xb8\x78\x19\x15\x96\x33\xc5\xa3\x35\x42\x73\xbe\x3d\x66\xcd\xf6\xd6\xd8\xb7\xc7\x97\x9f\xb0\x05\x46\xd2\x4b\x68\x07\x1b\xdf\x98\x56\xa4\x64\xcb\x47\x99\x82\x37\x09\xde\x37\x9c\x67\x5a\xa5\x28\x3c\x94\xca\xc8\x2d\xef\x9d\xa9\x70\xd5\x04\xbe\x7c\x2d\xc9\x6c\x9f\xf8\xd9\x94\x6a\xd1\x26\x4a\x02\x23\xf4\xc5\x88\xda\x84\x1e\xed\x24\x5e\x99\xc3\x41\x78\x7f\xed\x8d\x47\x68\x72\xad\x8a\x5d\xa7\x6e\xac\x4e\xe0\xfe\x1e\x6a\xcb\x9b\xc5\xae\xe5\xf4\x60\x98\xde\x05\xff\x5c\xb6\x00\xe7\xe4\xda\xfd\x13\x7a\xc9\xdf\x7f\xf9\xe5\xc3\x68\x7b\xdd\x82\xff\xc2\xf7\x86\x3c\xc2\xc3\x43\xd7\x84\xa8\xd5\xcf\xc2\x3f\x09\xfb\x9a\xde\x08\xa7\xf1\xdf\x87\x2b\x02\x4d\x66\x81\x16\x0c\xa2\xe4\x3d\xcb\x71\x38\x1e\x05\x7a\xf0\x61\xf8\xeb\xf0\xfd\xfb\xc1\xbb\x78\xbb\xea\x5b\x6c\x8b\x87\x4c\x28\x8a\x6d\x0b\xda\xa0\x8f\x44\x38\xc5\xf6\xee\xe4\xa7\xb8\x97\x6f\xa9\xf4\x4f\x4e\x88\x62\x43\x77\x99\xa7\x2c\x44\xf4\xd9\x7f\x1e\xfe\x17\x00\x00\xff\xff\x14\x17\x6b\xa6\x36\x11\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x95\x31\x8f\xdb\x38\x10\x85\x7b\xfd\x8a\x87\xbd\xc2\xcd\x79\xbd\x8b\xeb\x04\xdc\x55\x97\x00\x5b\x04\x29\x92\x22\x40\x10\x08\x14\x35\xb6\x08\x53\xa4\xc0\x19\xae\x63\x60\x7f\x7c\x40\x89\x92\x17\x0b\x7b\x6d\x21\x45\x3a\x9b\xd2\xbc\xf7\x71\xe6\x89\x5c\xc3\xa9\x8e\x4a\xfc\x4f\xbd\xf5\x47\x7c\xee\xc9\x7d\x69\xcd\x56\x60\xdc\x36\x28\x96\x10\xb5\xc4\x40\x38\xf8\xb0\xb7\x5e\x35\x05\xd0\x7a\x16\x2e\x61\xbd\x56\xb6\x53\x2c\x14\x0a\x60\xa7\xa4\xa5\x50\x6d\x95\x4e\xcf\xb6\xca\x32\x15\x05\x20\x8a\xf7\x5c\x16\x00\x30\x39\x3d\x75\xbd\x0f\x02\xdf\x93\xe3\xe4\x54\xd5\xde\x0b\x4b\x50\x7d\xa5\xa2\x78\xd5\xf7\xc1\x3f\x53\x40\xf0\x96\xb0\x0d\xbe\x3b\xbd\xba\x56\x8e\x4d\x6d\x09\xe2\xd1\x8c\xc0\xce\x37\x84\x59\x01\x49\x01\x93\xc4\x60\x0b\x98\xc1\xb0\x4a\x7a\x65\x5e\x42\x66\xb9\x06\x51\x9c\x23\x57\xae\x41\x64\x42\xf0\x51\x28\x0c\x5b\xc4\xd6\x5c\x86\x3d\x99\xa4\xce\x51\x33\xec\x6c\x09\xdb\x58\x36\x3f\x1e\x7a\x5a\x25\xb3\x32\x33\xdc\x1f\x3b\xfb\x3e\x2a\xed\x0c\x4b\x38\xfe\x61\xd8\x4c\x71\x11\xf7\xa4\x72\xa0\xba\xd2\xde\x71\xca\xc0\x6d\x41\x38\x50\x8d\x5c\xb1\x04\xf7\x95\xd1\x88\xf4\x17\x3e\x3e\x7d\xfb\xf4\x01\x6b\x7c\x6d\x29\xd0\x8a\xa1\x10\x94\xa6\x24\xde\x18\x31\xde\xe1\x90\x1e\x40\x5a\x1a\x3f\x12\x58\x55\x93\x85\x61\xb7\x92\x94\x3d\x6b\xa8\x81\xf8\xac\x36\x37\x62\x7e\x7d\x88\x6c\x13\x83\x71\x3b\x68\x1b\xd3\x07\x84\x7a\xf8\x17\x7b\x18\xf7\xa6\xee\x5a\x44\xff\x86\xb4\x86\x61\x18\x7d\xf0\xb5\xa5\x4e\x89\xd1\xa8\x49\xab\x34\x78\x69\xe9\xa2\x5e\x1f\x7c\x47\xd2\x52\xe4\xb1\xc5\xba\x25\xbd\xe7\xd4\x52\x72\x1c\xc7\x1d\x06\x4a\xca\x99\xf9\x60\xa4\xbd\xb8\x2b\x26\x4b\x5a\x7c\x40\xec\x37\xea\x59\x19\xab\x6a\x4b\x1b\xd6\x2d\x35\x71\xf8\x7d\x9f\x27\xce\x2d\x59\x5b\x62\xb5\x89\x1c\x36\xb5\x71\x1b\xaf\xb1\x23\x19\x2c\x18\x6b\x8b\xbb\x94\x13\xef\xfe\x1d\x74\xef\xf0\x82\x83\xc6\xda\xae\xf2\x08\xc7\x10\x51\x48\x71\xe2\x68\x25\x2f\x47\x27\xc6\x4e\x6b\xf7\x2c\x8d\x8f\x52\x59\xe3\x88\xbf\x3f\xfc\x78\x31\x4e\xf0\x1f\x1e\x67\x09\x09\x86\xb8\xc4\x3f\x0f\x79\xa5\x21\xab\x8e\x25\x1e\x1f\x8a\x2b\xb9\x7c\xdb\xb3\xab\xb1\x3c\x15\x2c\x49\xe5\xab\xaa\xf7\x79\x98\xc2\xb3\xd1\x54\x69\x25\xca\xfa\xdd\x8d\x50\x69\x6a\xb9\x12\xb9\x72\x09\xdd\x1b\xd3\x0b\x27\xcf\x60\x3a\xbf\x5b\x07\xbf\xbf\xf9\x50\x4f\x7c\xd3\xea\xc4\x39\x0a\x5c\xc7\x3c\x6f\x7c\x96\x51\xa8\xeb\xad\x92\xdf\x80\x9c\x14\x16\x53\x5e\xb0\xbe\x32\x6d\xfa\xa9\xba\xde\xd2\xad\xd9\x4b\x84\x53\xc9\x92\xf9\xce\x35\xef\xd3\x8c\x27\x7d\x35\x6d\x65\x09\x55\xbe\x5b\xe6\xd2\xe5\x17\xcc\xc9\xf6\x2c\xa5\xf6\x7a\xdf\x1b\xa9\xa2\x59\x40\x35\xdf\x92\x37\xdf\x23\xd9\x66\x1d\x4d\xf1\x2b\x00\x00\xff\xff\x57\x93\xda\x47\x49\x09\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4b\x6f\x1b\x37\x10\xbe\xf3\x57\x0c\x94\x1c\xab\x7d\xc8\x4d\x03\x10\xc8\xc1\xf5\x23\x35\x8a\x24\xaa\x6d\x14\xed\xa9\xe0\x92\x23\x89\x15\x97\xc3\x0e\xc9\x75\xd4\xc0\xff\xbd\x20\x57\xf2\x03\xbd\xb4\x97\x05\x38\x8f\x6f\xbe\xf9\xf6\x1b\xe5\x1c\x3d\x5c\xda\xa8\x06\x87\xe6\x92\xf4\x1e\x59\xc2\x46\xb9\x88\x42\x05\xfb\x2b\x72\xb4\xe4\x25\x4c\xbd\x30\x3e\xfe\x68\xbd\x39\x37\x86\x31\x46\x09\xfd\xea\x7d\xd3\x35\x5d\xd3\xcb\x77\x67\x25\x79\x8b\x3a\x73\xb4\x13\xde\x62\x24\x37\x5d\x90\xdf\x48\x68\x31\xe9\x96\xd8\x6e\xad\x6f\x3d\x19\x6c\xb9\x26\x1b\x4d\x7e\x53\x9a\x2e\x69\x54\xd6\x4b\xd0\x2e\xc7\x84\xdc\x38\xd2\xca\x95\xc4\xcd\x5a\x42\xff\x7e\xd5\xf4\x65\x48\x2f\x4c\x65\x56\x30\xed\x56\x0a\x00\xfc\x8a\xfa\x27\xe5\x8d\x43\xfe\xac\x46\x94\xb0\x58\x08\x1b\x52\xd9\x22\xde\x1d\xbc\x5e\x23\x5b\x32\x12\x16\x67\x5d\x5c\x08\x3b\xaa\x2d\x3e\x37\x6f\x88\x47\x95\x24\xdc\x7c\x3a\xff\x78\xf5\xc7\xfa\xf6\xea\xfa\xe6\xb7\x76\x7e\xdc\xff\xbe\xbe\x5a\xbe\xfd\xa6\x69\x0c\xe4\xd1\xa7\x47\xf9\xf6\xdb\x34\x8b\xf0\x28\x00\x9c\x4a\x18\x93\x84\xeb\x2a\xd0\xde\x7a\x23\xe1\x33\x99\x23\xb6\xd8\xe7\x01\x1d\xa6\x73\xde\xe6\x11\x7d\x8a\x65\x58\xd9\x7a\xe9\xd4\x80\xae\x3e\x97\x73\x80\xc9\x61\x53\xca\xd9\x63\xc2\xd8\x58\x6a\xcb\xcc\x9c\xf0\x43\xe2\x8c\xb5\x90\x71\x6b\xc9\x7f\x08\x6c\x47\xc5\x07\x01\xa0\x1d\x65\xb3\x0c\x4c\x93\x35\xc8\x33\xda\x42\xfd\x9d\x19\x17\x4f\x59\xfd\xb4\xe5\x12\x16\x55\xfd\x5a\x30\x7f\xab\xec\x0b\x31\xaa\xa2\xf5\x85\xb3\xe8\xd3\x05\x79\x8f\x3a\x59\xf2\x5f\x26\x64\xb6\x06\x2b\x4d\xa5\x35\x86\x92\x4c\xe8\xd3\xfd\x21\x60\x94\xa0\x42\x70\x56\xab\x52\xdb\x4e\xde\xbc\xa4\x1f\x98\x12\x0d\x79\xf3\xdd\xcb\x9a\x3f\x23\xf9\xc2\xeb\x19\xe4\x3f\x61\x08\x80\x21\x73\x51\x79\xd5\x75\x02\xe0\xaf\x50\xcc\xd6\x75\x47\xda\x3f\xe7\xe1\xf4\x2b\xab\x94\x15\x62\xde\x5a\x78\x4c\x0f\xc4\xfb\xb5\xcb\x5b\xeb\x67\x5f\x30\x9a\x9d\x4a\x2d\x05\xf4\x71\x67\x37\x69\x49\x53\x5c\xc6\x3c\x78\x4c\xe2\x0d\x1c\x1b\x66\x3c\x88\x89\xb3\x4e\x60\x7d\x62\x32\x59\xa3\x01\xeb\x61\x36\x2f\xf4\x4d\xd7\xfc\x00\xca\x1b\xf8\x72\x77\x05\x67\x4d\xd7\xac\xe0\x61\x67\xf5\x4e\xbc\x01\x83\x81\x51\x17\x6b\xc0\xbf\x18\x80\x1a\x68\xc2\x06\xee\x77\x08\xe9\x81\x20\xee\x28\x3b\x03\xa3\x4a\x7a\xd7\x88\x57\xf3\x8b\xee\x63\xca\x12\xfa\xef\xdf\x95\xc5\xff\xe7\x36\x81\xcc\x27\xe5\xed\x06\x63\x3a\xe1\x45\xe4\xc9\xfa\xed\x8d\xdf\x50\x01\x1f\x5e\x9e\x6f\x57\x8f\xb7\x93\x7d\xb7\xaa\xd3\x34\x72\xba\xb6\x0e\x25\x94\x2e\xe4\x46\x73\xaa\xae\xaa\x2e\x39\x97\xa0\xd5\x31\xb4\xc7\xc3\xab\xc2\x3d\x1e\xc4\x44\x2e\x8f\x78\x69\x19\x75\x22\x3e\x48\x68\x27\xc5\xad\xb3\xc3\xe9\xf8\x9f\x28\xcf\x27\xde\xcc\x0d\x51\x04\xa6\xaf\x87\x57\x07\x53\x23\xcb\x91\x0c\x96\x17\x14\x23\x9f\x2e\xfb\x38\xe6\x59\xae\x8a\xf5\x4b\xa6\xa4\xe6\xda\x80\x7c\x7d\xf7\x91\x29\x07\x29\xfe\x09\x00\x00\xff\xff\x9e\xdd\x05\x83\xda\x04\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\x1c\x37\x0c\xbd\xeb\x57\x10\x9b\x1c\xbb\xf3\xb1\x6e\x1a\x40\x40\x0f\xae\x3f\x52\xa3\x48\xb2\xb5\x8d\xa2\x3d\x15\x1a\x89\xb3\xab\xae\x86\x9c\x52\xd2\x38\xdb\x20\xff\xbd\xd0\xcc\xda\x8e\xd1\x4b\x73\x19\x40\x43\xf2\x91\xef\x91\xcf\x84\xc0\x0f\x97\x3e\x9a\x2e\xa0\xbb\x64\x7b\x40\xd1\xd0\x9b\x10\x51\x99\xd1\xff\x86\x12\x3d\x93\x86\xa9\x55\x8e\xe2\x4f\x9e\xdc\xb9\x73\x82\x31\x6a\x68\x37\x6f\xab\xa6\x6a\xaa\x56\xbf\x39\x2b\xc1\x5b\xb4\x59\xa2\x9f\xf0\x16\x23\x87\xe9\x82\xa9\xd7\x50\x63\xb2\x35\x8b\xdf\x79\xaa\x89\x1d\xd6\x32\x07\x2b\xcb\xd4\x97\xa2\x4b\x1e\x8c\x27\x0d\x36\xe4\x98\x50\xaa\xc0\xd6\x84\x12\xb8\xd9\x6a\x68\xdf\x6e\xaa\xb6\x34\x69\x95\x9b\x27\x2b\x98\x7e\xa7\x15\x00\x7e\x42\xfb\xb3\x21\x17\x50\x3e\x98\x01\x35\xac\x56\xca\x8f\xa9\xb0\x88\x77\x47\xb2\x5b\x14\xcf\x4e\xc3\xea\xac\x89\x2b\xe5\x07\xb3\xc3\xe7\xe2\x9e\x65\x30\x49\xc3\xcd\xfb\xf3\x77\x57\x7f\x6e\x6f\xaf\xae\x6f\x7e\xaf\x97\xc7\xfd\x1f\xdb\xab\xf5\xeb\xcf\x96\x87\x91\x09\x29\x7d\xd1\xaf\x3f\x4f\x8b\x08\x5f\x14\x40\x30\x09\x63\xd2\x70\x3d\x0b\x74\xf0\xe4\x34\x7c\x60\x77\xc2\x56\x87\xdc\x61\xc0\x74\x2e\xbb\x3c\x20\xa5\x58\x9a\x15\xd6\xeb\x60\x3a\x0c\xf3\x73\x0d\x82\x3b\xcf\xf4\xa3\xa7\x5e\x8c\x02\xb0\x81\xb3\x5b\x8f\xc2\x93\x77\x28\x4b\xca\xca\xfc\x93\x05\x57\x4f\x51\xfb\x34\xfa\x1a\x56\xb3\xa4\x73\xc2\xf2\x9d\xb5\x5c\xa9\xc1\x14\x01\x2f\x82\x47\x4a\x17\x4c\x84\x36\x79\xa6\x8f\x13\x8a\x78\x87\x73\x6f\x63\x2d\x8e\x25\x98\x90\xd2\xfd\x71\xc4\xa8\xc1\x8c\x63\xf0\xd6\x94\xdc\x7a\x22\x57\x15\x0a\x42\x98\x30\x56\xa3\x70\xe2\x2e\xf7\xdf\x7d\x9d\xf3\x57\x64\x2a\x73\x3d\x83\xfc\x2f\x0c\x05\xd0\x65\x29\xd2\x6d\x9a\x46\x01\xfc\x3d\x96\x0b\x6a\x9a\xd3\xd8\xbf\xe4\xee\x71\x3f\xb3\x60\x33\xc4\xc2\x5a\x11\xa6\x07\x96\xc3\x36\xe4\x9d\xa7\x65\xd9\x82\x6e\x6f\x52\xcd\x23\x52\xdc\xfb\x3e\xad\x79\x8a\xeb\x98\x3b\xc2\xa4\x5e\xc1\xa9\x60\xc1\x83\x98\x24\xdb\x04\x9e\x92\xb0\xcb\x16\x1d\x78\x82\xe5\x22\xa1\xad\x9a\xea\x07\x30\xe4\xe0\xe3\xdd\x15\x9c\x55\x4d\xb5\x81\x87\xbd\xb7\x7b\xf5\x0a\x1c\x8e\x82\xb6\xec\x1b\xfe\x33\x01\x98\x8e\x27\xac\xe0\x7e\x8f\x90\x1e\x18\xe2\x9e\x73\x70\x30\x98\x64\xf7\x95\x7a\xd1\xbf\xe8\x3e\xa4\xac\xa1\xfd\xfe\x4d\x21\xfe\x8d\x6c\x46\x76\xef\x0d\xf9\x1e\x63\x7a\xc4\x8b\x28\x93\xa7\xdd\x0d\xf5\x5c\xc0\xbb\xaf\x3d\xd9\xcc\x8e\x6c\x74\xdb\x6c\xe6\x6e\x16\x25\x5d\xfb\x80\x1a\x4a\x15\x4a\x65\x25\xcd\x57\x35\x5f\xc9\xb9\x06\x6b\x4e\xbf\x0e\x78\x7c\x91\x78\xc0\xa3\x9a\x38\xe4\x01\x2f\xbd\xa0\x4d\x2c\x47\x0d\xf5\x64\xa4\x0e\xbe\x7b\x74\xf4\xd3\xc8\x8b\x6f\xab\xa5\x20\xaa\x51\xf8\xd3\xf1\x85\x0b\xe6\x3f\xeb\x81\x1d\x96\x17\x94\x43\x7e\xb4\xeb\xa9\xcd\xb3\x5c\x33\xd6\xaf\x99\x93\x59\x72\x47\x94\xeb\xbb\x77\xc2\x79\xd4\xea\xdf\x00\x00\x00\xff\xff\xb9\x56\xc5\xa3\xaf\x04\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x8f\x1b\x37\x0c\xbd\xeb\x57\x10\x4e\x8e\xf5\x7c\x38\x4d\x03\x08\xc8\x61\xbb\x1f\xe9\xa2\x48\xe2\xee\x2e\x8a\xf6\x54\x68\x24\x8e\xad\x5a\x23\xaa\x94\x34\x1b\x37\xc8\x7f\x2f\xa4\xf1\x7e\xa1\x97\xf6\x32\x80\x44\xf2\x91\xef\xe9\x71\x94\x73\x74\x7f\x61\xa3\x1a\x1c\x9a\x0b\xd2\x07\x64\x09\xa3\x72\x11\x85\x0a\xf6\x57\xe4\x68\xc9\x4b\x98\x7b\x61\x7c\xfc\xd1\x7a\x73\x66\x0c\x63\x8c\x12\xfa\xcd\xbb\xa6\x6b\xba\xa6\x97\x6f\xdf\x94\xe0\x0d\xea\xcc\xd1\xce\x78\x83\x91\xdc\x7c\x4e\x7e\x94\xd0\x62\xd2\x2d\xb1\xdd\x59\xdf\x7a\x32\xd8\x72\x0d\x36\x9a\xfc\x58\x8a\x2e\x68\x52\xd6\x4b\xd0\x2e\xc7\x84\xdc\x38\xd2\xca\x95\xc0\xf5\x56\x42\xff\x6e\xd3\xf4\xa5\x49\x2f\x4c\x9d\xac\x60\xda\x9d\x14\x00\xf8\x05\xf5\x4f\xca\x1b\x87\xfc\x49\x4d\x28\x61\xb5\x12\x36\xa4\xc2\x22\xde\x1e\xbd\xde\x22\x5b\x32\x12\x56\x6f\xba\xb8\x12\x76\x52\x3b\x7c\x2a\x1e\x89\x27\x95\x24\x5c\x7f\x3c\xfb\x70\xf9\xc7\xf6\xe6\xf2\xea\xfa\xb7\x76\x39\xdc\xfd\xbe\xbd\x5c\xbf\xfe\xaa\x69\x0a\xe4\xd1\xa7\x6f\xf2\xf5\xd7\x79\x11\xe1\x9b\x00\x70\x2a\x61\x4c\x12\xae\xaa\x40\x07\xeb\x8d\x84\x4f\x64\x4e\xd8\xe2\x90\x07\x74\x98\xce\x78\x97\x27\xf4\x29\x96\x66\x85\xf5\xda\xa9\x01\x5d\x3d\xae\x97\x0b\x26\x87\x4d\x49\x67\x8f\x09\x63\x63\xa9\x9d\x54\x51\xe0\x7d\xe2\x8c\x35\x8f\x02\xfa\xb8\xb7\x63\x5a\x5b\x3f\xb2\x7a\xaf\x82\x8d\xc8\x33\xb2\x00\xd0\x8e\xb2\x59\x07\xa6\xd9\x1a\xe4\x05\x77\xa5\xfe\xce\x8c\xab\xc7\xa8\x7e\xe4\xbb\x86\x55\x7d\x87\x9a\xb0\x7c\xeb\x03\xac\xc4\xd2\xf3\xdc\x59\xf4\xe9\x9c\xbc\x47\x9d\x2c\xf9\xcf\x33\x32\x5b\x83\x75\x60\xa5\x35\x86\x12\x4c\xe8\xd3\xdd\x31\x60\x94\xa0\x42\x70\x56\xab\x92\xdb\xce\xde\x3c\x27\x12\x98\x12\x0d\x79\xfc\xee\x79\xce\x9f\x91\x7c\x99\xeb\x09\xe4\x3f\x61\x08\x80\x21\x73\xd1\x7b\xd3\x75\x02\xe0\xaf\x50\x6c\xd7\x75\xa7\xb1\x7f\xce\xc3\xc3\xa3\x56\x51\x2b\xc4\xc2\x5a\x78\x4c\xf7\xc4\x87\xad\xcb\x3b\xeb\x17\x87\x30\x9a\xbd\x4a\xed\x93\xac\x34\xc7\x75\xcc\x83\xc7\x24\x5e\xc1\xa9\x60\xc1\x83\x98\x38\xeb\x04\xd6\x27\x26\x93\x35\x1a\xb0\x1e\x16\x1b\x43\xdf\x74\xcd\x0f\xa0\xbc\x81\xcf\xb7\x97\xf0\xa6\xe9\x9a\x0d\xdc\xef\xad\xde\x8b\x57\x60\x30\x30\xea\x62\x12\xf8\xd7\x04\xa0\x06\x9a\xb1\x81\xbb\x3d\x42\xba\x27\x88\x7b\xca\xce\xc0\xa4\x92\xde\x37\xe2\x45\xff\xa2\xfb\x94\xb2\x84\xfe\xfb\xb7\x85\xf8\xff\x64\x13\xc8\x7c\x54\xde\x8e\x18\xd3\x03\x5e\x71\x8e\xf5\xbb\x6b\x3f\x52\x01\x1f\x9e\x2f\x72\x57\xd7\xb8\x93\x7d\xb7\xa9\xdd\x34\x72\xba\xb2\x0e\x25\x2c\x7e\x6b\x34\xa7\xea\xaa\xea\x92\x33\x09\x5a\x9d\xae\x0e\x78\x7c\x91\x78\xc0\xa3\x98\xc9\xe5\x09\x2f\x2c\xa3\x4e\xc4\x47\x09\xed\xac\xb8\x75\x76\x78\xf8\x0d\x3c\x8e\xbc\x2c\x7b\xb3\x14\x44\x11\x98\xbe\x1c\x5f\xac\x4e\xbd\x59\x4f\x64\xb0\x9c\xa0\x18\xf9\x61\xc7\x4f\x6d\x9e\xe4\xaa\x58\xbf\x64\x4a\x6a\xc9\x0d\xc8\x57\xb7\x1f\x98\x72\x90\xe2\x9f\x00\x00\x00\xff\xff\xe9\x63\x55\x7a\xe4\x04\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcAzureAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x8a\x83\x30\x10\x86\xdf\xf7\x14\x39\x81\x07\xd8\xb7\xa0\xb0\x2c\x2c\xcb\xb2\x7a\x81\x31\x4e\xcb\x40\x4c\xec\x38\x29\x58\xeb\xdd\x4b\xab\x0f\x51\xd3\x42\x9f\xbf\xff\xfb\x87\xf9\x05\x1d\x38\xf9\x6e\x3e\xd5\x38\xaa\x4c\x5f\x02\x63\xee\xdd\x81\x8e\x59\x35\x93\x42\x5d\xd5\x29\x78\x41\x35\x4d\x1f\x7d\xa8\x7b\xc3\xd4\x09\x79\x97\x72\xca\x98\xaf\x4c\x80\x26\xb7\x84\xe9\x53\x5a\x17\x0b\x4c\x3b\x25\x1a\x46\x79\xe1\xcd\x81\x8d\x5b\xbd\xf5\x1a\x63\xef\x03\x1b\xfc\x62\x1f\xba\xbd\xf2\x1f\xe3\xd8\xb3\xde\xc0\xfd\xdd\xbd\xf2\xb3\x90\xd5\x80\x68\x02\x93\x0c\x8f\x9a\x5f\x68\x31\xb1\xe1\x36\x12\xfb\x1d\x53\x0b\x3c\xe8\x33\x90\x85\x9a\x2c\xc9\x50\xa2\xa4\x8b\xfe\x9e\x66\xe3\xc6\x5b\x00\x00\x00\xff\xff\x34\x7d\xff\xaa\x01\x02\x00\x00")

func nodeEtcAzureAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcAzureAzureConf,
		"node/etc/azure/azure.conf",
	)
}

func nodeEtcAzureAzureConf() (*asset, error) {
	bytes, err := nodeEtcAzureAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/azure/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeNodeDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\x4b\x2d\xb2\xd5\xcf\xcc\xd3\x4d\x4c\x49\x29\xd2\x4b\x2c\x2a\x48\xd4\x37\x34\x32\xd7\x33\xd0\x33\xd0\x33\xe4\x82\x49\x27\xe7\x94\x16\x97\xa4\x16\xe9\xe5\xe4\x27\x27\xe6\x20\xc9\x03\x02\x00\x00\xff\xff\x87\xc4\xbf\xc2\x3f\x00\x00\x00")

func nodeEtcOriginNodeNodeDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeNodeDnsmasqConf,
		"node/etc/origin/node/node-dnsmasq.conf",
	)
}

func nodeEtcOriginNodeNodeDnsmasqConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeNodeDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/node-dnsmasq.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/azure/azure.conf":                           nodeEtcAzureAzureConf,
	"node/etc/origin/node/node-dnsmasq.conf":              nodeEtcOriginNodeNodeDnsmasqConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"azure": {nil, map[string]*bintree{
				"azure.conf": {nodeEtcAzureAzureConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"node": {nil, map[string]*bintree{
					"node-dnsmasq.conf": {nodeEtcOriginNodeNodeDnsmasqConf, map[string]*bintree{}},
					"resolv.conf":       {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// master/etc/etcd/etcd.conf
// master/etc/origin/master/htpasswd
// master/etc/origin/master/master-config.yaml
// master/etc/origin/master/scheduler.json
// master/etc/origin/master/session-secrets.yaml
// master/tmp/ansible/ansible.sh
// master/tmp/ansible/azure-local-master-inventory.yml
// master/tmp/ansible/azure-ocp-deploy.yml
// master/tmp/bootstrapconfigs/compute-config.yaml
// master/tmp/bootstrapconfigs/infra-config.yaml
// master/tmp/bootstrapconfigs/master-config.yaml
// node/etc/azure/azure.conf
// node/etc/origin/node/node-dnsmasq.conf
// node/etc/origin/node/resolv.conf
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _masterEtcEtcdEtcdConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6f\xea\x38\x10\x7d\xcf\xaf\x88\xcc\xcb\xee\xc3\x85\x94\xdb\x8f\xa5\x92\x1f\x8c\x33\x80\x85\x49\x52\xdb\x81\xa2\xaa\xb2\x28\x0d\x34\xda\x14\x50\x12\xba\xad\xba\xfd\xef\x2b\x27\x81\xd0\xc2\xae\x56\xba\xea\x1b\xcc\x1c\xcf\x9c\x39\x73\x26\xa0\xa8\xab\x3d\x32\x02\xfc\xfe\x6e\x37\x47\xb3\x2c\x8f\xd2\xe6\x60\x9d\xe5\xab\xd9\x73\x64\xff\x6d\x67\x4f\x51\x92\xdc\x6c\xd7\x79\x64\x7f\x7c\x58\x05\x9a\x33\xa9\xc0\xd3\x01\x80\xd0\xa1\xe0\xd2\xbc\xdc\xa4\xf1\x2a\xb7\xd1\x53\x9e\x6f\xb2\xeb\x56\x0b\xd9\xbf\xc5\xab\xc7\xe8\x75\x5f\x91\x05\x99\xed\xfc\xde\x94\x79\x1a\xaf\x96\x36\xba\x6e\xff\xfc\xc3\x41\xa7\xcb\xbb\x44\x11\xed\x32\x81\x5b\x2f\xb3\xb4\x95\xc4\x0f\xad\x28\x9f\x3f\xb6\xac\x46\x91\x9d\x10\x5e\x24\x11\xaa\x02\xd2\x23\x81\x1c\xf8\x4a\x53\x3f\xf4\x14\x3e\x73\x1c\xc7\x29\x0b\x0d\x80\x08\xd5\x05\xa2\x34\xf3\x14\x88\x31\xe1\xf8\x62\x97\x03\x0e\x54\x31\xdf\xd3\x8a\x8d\xc0\x0f\x15\x6e\xef\x53\xd5\x78\x94\x33\xf0\xd4\x2f\x0c\x78\xd5\x39\x1e\xb0\xa4\x3c\x22\xb7\x7b\xda\x12\x5f\x1c\x44\x27\x84\xd7\x01\xea\x0b\x89\x2d\xcb\x6a\xdc\xcd\x93\xad\x69\x72\x5f\x12\x64\x1e\x53\x8c\x70\x4d\xdc\x31\x08\xc5\x24\x7c\xdb\x2a\x76\x9d\x28\x0f\xa5\x02\x51\x57\x3f\x32\x0a\xc2\xdf\xd0\x4f\x4b\x45\x14\xe0\x55\xf4\xd7\xe9\xb4\xf2\x87\xe0\x61\xe3\x8e\x1f\x95\x42\x3f\xce\x2a\xed\x5c\x26\xa9\x3f\x06\x31\xc5\x5f\x03\x5a\x8a\xf1\x71\xb0\x47\x38\xef\x12\x3a\xc4\x9b\x74\xfd\xfa\x76\x94\x0e\x84\x7f\x3b\xc5\x25\x8b\x5a\xf6\x6f\xb4\x88\x54\x82\x51\xa5\x05\x50\xdf\xeb\xb1\xbe\xa6\x03\xa0\x43\x8c\x16\xb3\x24\x8b\x76\xce\x27\xa1\xf2\x35\xf5\x47\x01\x29\xad\x2c\x40\x81\x67\x7e\x61\xe4\xec\x30\xe0\x91\x2e\x07\x3d\x6e\x63\x94\xa7\xdb\x08\x95\x23\xdc\x84\xbe\x22\xda\xcc\x0b\x9e\xab\xbb\x53\x05\x12\x9f\xb7\x3b\xe7\x9d\xcb\xab\x76\xe7\xd2\x38\xae\x90\xe1\xbe\x2a\x52\x4e\xbf\x5e\x2c\x0e\xff\xeb\x1e\x61\x3c\x14\xa0\x27\x84\x29\x8c\x2e\x1c\x67\xdf\xb4\xcc\x0b\xe8\x09\x90\x83\xfa\xf8\xd0\x4f\xe7\x08\xe4\x9a\x7d\xee\x6e\x10\x9d\x1d\xe5\x27\x82\x29\xa8\x01\xa7\xba\x10\xb7\xce\x3b\xc8\x90\xcf\xa2\xf9\x36\x8d\xf3\xb7\xea\x5e\x94\x30\x76\x71\x35\x25\xba\xc7\x38\x60\xf3\x3d\x29\xbf\x29\xf3\x59\x73\x9e\xe6\x25\xaa\x5a\x26\x05\xa1\x8c\xb2\x83\x4f\x82\x15\xd1\x2f\x8f\xb3\x28\x7d\x89\xd2\xba\xc0\x10\xa6\xff\x02\xf9\x33\x7a\x3b\x5c\x99\xe2\x72\xbf\xc9\x72\x12\x73\xbe\xff\x8f\x65\x01\xfd\x4f\xaa\x25\xe2\x04\xdf\x4d\x74\xc8\xb6\x80\x9d\xa0\x5c\xa0\x6a\xc2\x05\xec\x88\xb5\xd5\xb8\x4b\xd6\xcb\x65\xbc\x5a\x56\x12\xbb\xd0\x0d\xfb\x18\xf5\x0e\x86\xe2\x7e\x5f\x07\x84\x0e\x49\x1f\x34\x87\x31\x98\xe7\xa6\x43\xa9\x09\x2e\x5e\xa0\xca\x6a\x8b\x38\x29\x6a\x7d\xf2\x6c\x10\x08\xbf\xf7\xc5\xf2\x23\x30\x77\x21\x31\x7a\x98\x65\xf1\x1c\x59\x0d\xab\x71\x37\xdb\xe6\x4f\xf7\xb5\xbe\x83\xea\xb3\x80\xb2\xf8\x79\x93\x44\xc8\xfa\x27\x00\x00\xff\xff\x6b\x4e\x0b\x40\xe2\x06\x00\x00")

func masterEtcEtcdEtcdConfBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcEtcdEtcdConf,
		"master/etc/etcd/etcd.conf",
	)
}

func masterEtcEtcdEtcdConf() (*asset, error) {
	bytes, err := masterEtcEtcdEtcdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/etcd/etcd.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterHtpasswd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\xd0\x73\xce\x29\x2d\x2e\x49\x2d\x0a\x2d\x4e\x2d\xca\x4b\xcc\x4d\x55\xa8\xad\xb5\xaa\xae\x56\x70\x4a\x2e\xaa\x2c\x28\x81\xcb\x06\x24\x16\x17\x97\xe7\x17\xa5\x28\xd4\xd6\x72\x01\x02\x00\x00\xff\xff\x48\x7d\x31\x4a\x35\x00\x00\x00")

func masterEtcOriginMasterHtpasswdBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterHtpasswd,
		"master/etc/origin/master/htpasswd",
	)
}

func masterEtcOriginMasterHtpasswd() (*asset, error) {
	bytes, err := masterEtcOriginMasterHtpasswdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/htpasswd", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x6b\x6f\x1b\xbb\xd1\xfe\xae\x5f\x41\xe8\x4b\x92\x17\xef\xae\x64\x3b\xd7\x05\x8a\x42\xb5\x9d\x13\xe3\xd8\xb1\x2a\x3b\x45\x81\xba\x08\x28\x72\xb4\x62\xc4\x25\x37\xbc\x28\x56\x72\xf2\xdf\x0b\x5e\x76\x97\xbb\x92\x93\x20\xcd\x41\x9d\x20\x91\xc8\x99\xe1\x70\xe6\xe1\xdc\x8c\x69\xc5\xb4\x66\x52\x9c\x4a\xb1\x62\x65\x31\x42\xa8\xe6\xb6\x64\xc9\x77\x84\xfe\x66\x19\xa7\x67\xb0\xc2\x96\x1b\x1d\x96\x10\x22\x9e\xc0\x2a\x6c\x98\x14\xcd\x22\x42\xb8\x66\xff\x00\xe5\x24\x16\x68\x7b\xd4\x2e\x83\xd8\x16\xe8\x5f\xff\x6e\xbf\x6f\x98\xa0\x45\x5f\x70\x38\xb1\xa5\x50\xa0\xa5\x55\x04\x74\x27\x1b\x21\xce\x2a\x66\x74\x81\xbe\x7c\x4d\x16\x15\x7c\xb4\xa0\x93\x65\x2f\xf6\x7a\x0b\x4a\x31\x0a\x3f\xa9\x70\xa2\x60\x2b\x29\xd1\x70\x2e\xe9\x5c\x81\x06\xf3\x73\xd2\x29\xd3\x78\xc9\xa1\x40\x2b\xcc\x35\x0c\x0e\x8d\x06\x99\xf5\x5d\xe3\x89\x64\x0d\x42\xaf\xd9\xca\xe4\x4c\x4e\x2e\x2a\x5c\xc2\x5c\x72\x46\x76\x3f\xe9\x94\x7b\x20\xd6\x51\x2e\x2c\x4f\xed\x9c\xa1\x0a\x1b\xb2\xf6\xf2\x67\x42\x48\xe3\xc5\xf5\x1c\x91\xa1\x0d\xec\x0a\xc4\x1c\x89\xce\x7b\x6a\x51\x10\xbb\xac\x15\x9d\xf0\x20\xb4\xc5\xdc\x42\x81\x1e\x19\x65\xe1\x51\xb2\x23\x70\x05\x45\xa7\x4e\x46\x41\x30\xa0\x09\x81\x14\x8b\x43\x70\xc8\x5a\x94\x14\xa8\x96\x54\x3f\xb0\xb5\x74\x5e\xd4\x3d\xc4\x7c\x00\x62\x0a\xe4\xf4\x48\x96\xf5\x86\xd5\xd7\xfe\x24\xee\xf5\x78\x8d\x19\xb7\x0a\x06\x74\xc1\x49\x89\xf1\xa3\x7f\x70\x59\x2a\x28\xb1\x91\x2a\x79\x4b\x4a\xde\xef\x4e\x39\x03\x61\x2e\xc4\x4a\x06\xdd\x09\x28\xf3\x9a\x39\xef\x77\x2c\xd9\x4a\x49\x61\x32\x4f\x9f\x13\x65\x3c\xe1\x06\x76\xdf\xa4\xdb\xc0\x6e\x84\x6b\x76\x09\x5b\xe0\xba\x18\x65\xce\xb7\x03\x57\x63\x6b\xd6\x9d\x3a\xf1\xa5\xbc\x01\x4c\x41\x45\x65\xbc\x72\xa7\xb3\x02\x25\x92\x33\x82\x5b\x25\x22\x81\xac\x2a\x29\xde\xe2\xaa\x71\x40\xf6\x80\x52\xa3\x00\x2c\xa3\x70\x38\x65\xae\x60\xc5\xee\x3b\xae\x7f\x66\x0b\xa8\xa4\x81\xec\xdc\xd1\x64\x7e\xb5\x54\xd2\xd6\x81\x7c\x9f\xee\x37\xb7\xe9\x17\xad\x06\xe5\x90\xf2\x10\xe5\x3b\x0d\x6a\x44\xa4\x30\x4a\x72\x0e\x89\x17\x80\x03\xe9\x1e\x04\x97\x64\xf3\xd6\x03\xae\x85\x6d\x56\x61\x6d\x40\x65\x1d\xb3\x43\x8b\x06\xb5\x65\x04\x6e\xdc\x7f\xa2\x3c\x05\x15\x1f\xbb\x66\xa5\x68\xcc\x97\x7a\x33\xd2\x67\x61\xbf\x35\x60\xe2\xc7\x01\x85\xf3\x5f\x72\x64\x81\x1e\xfd\xdf\xa3\x11\x91\x4a\xcf\x38\x97\x9f\x80\x5e\x2b\x56\x32\xe1\x3d\xfb\xf8\xaf\xec\xc9\x64\x72\x74\xfc\xe2\x2e\x9f\xfa\xbf\x47\x8f\x8b\x3f\xee\x3e\x3f\x69\xb7\xb8\x24\x98\xaf\xa5\x36\xed\xfa\x97\x2f\xa8\x56\x4c\x18\x34\x0e\x14\x63\xf4\xf8\xef\x56\x1a\xb8\x02\x83\xd1\x63\x26\x28\xdc\xa3\xfc\xca\x5f\x3c\xbf\x98\x6b\x34\x7d\x92\xdf\x18\xc5\x44\xf9\x04\x8d\x9d\x90\xbb\xcf\x4f\xc6\xe8\x0f\xf4\xd1\xf1\xa0\xaf\x5f\xdb\x93\x36\x76\x09\x4a\x80\x01\x7d\x97\xd3\x10\xaa\x06\xba\x1c\xa0\xb8\xcb\xf5\x96\xdc\xe5\x84\x5b\x77\xde\x5d\xee\xd5\x7d\x90\xed\xc7\xee\x90\x9f\xdf\x1b\x87\x08\x1e\x2e\xf1\x46\x6a\xe3\xe0\xf1\x1d\xf5\x5b\xa7\xef\x6b\xff\xed\xd3\xa2\xa9\x7e\xfa\x18\x6f\x82\x1f\xb4\xd4\x80\xec\xe8\xc5\xf1\x5d\x7e\x72\xd8\xf1\x0f\x1c\xf4\x1d\x5b\xb7\x5c\x71\x9d\x0a\xdd\xbd\x97\x25\x13\x74\x46\xa9\x02\xad\x0b\x34\xcd\xfd\x9f\xe2\xe5\xf4\xd9\x49\xdc\x7b\x0b\xe6\x93\x54\x9b\x02\x19\x52\x3f\x1d\x81\x21\xb4\x1f\xe2\x08\x2e\x50\x78\x51\xb9\xdb\xec\xa2\x49\xf7\x56\x7a\xdb\x9e\x39\x92\xb4\x6f\xe5\x00\x85\x7b\x2f\x08\x59\xc5\xfd\xdb\x4f\xfd\xb5\x36\xa6\xd6\x85\xf3\xd8\xd0\x4d\x68\x5c\x1c\x9f\xbc\x78\xd5\xf3\x91\x93\x79\x63\xa4\xc2\x25\x74\x97\xee\x5c\x11\xb7\x42\xe4\x2a\x92\x8d\x9c\xc9\x43\x84\xfd\xd4\xea\x2c\x7b\xe3\x2c\x3b\x10\x93\xe6\xc8\x03\x64\xa9\x10\x9f\x55\x3b\xcd\x56\x52\x55\xd8\x14\xe8\x6a\x76\x73\x7b\xbe\x78\x7f\xbd\x38\xff\xed\xfd\xbb\xc5\xe5\x08\x21\x8e\x0d\x68\xd3\x54\x11\x6c\x98\x92\x1c\x33\x13\xe1\x8d\x2c\xa0\x64\xda\xa8\x5d\x63\x97\x02\x51\x49\x36\xa0\x32\x15\x37\x1a\xf4\x38\xf0\x14\xcf\xa6\xd3\xe9\x28\x24\xba\x60\xcf\x98\xe3\xdc\xdd\x39\x98\x7d\x77\x13\x9c\x2d\xad\xa0\x1c\x1e\xf2\x74\xe4\xfc\xb6\xb3\x07\x44\xc1\xdf\xb5\x54\xa6\x40\x47\xd3\xe3\x67\xd3\x51\x67\xfb\x54\x2d\xa7\x04\xae\x99\x0b\xd4\xa0\x66\xaa\xb4\x15\x88\xa6\x50\x55\x56\x18\x56\x41\x46\x92\x7a\x36\x73\xd4\x7a\xa2\xc1\x18\x26\x4a\x9d\x6f\x5e\x3a\xd7\x4e\xb6\x47\x98\xd7\x6b\x7c\xf4\x97\x36\xdd\xeb\xe0\x9b\x6c\x89\xc9\x06\x04\x6d\xb8\x1d\x7e\x4e\x7a\x04\x15\x50\x86\x33\xb3\xab\xa1\x3b\xa1\xe6\x8c\xf8\xc2\x69\xb2\x15\x34\x4f\x50\x54\x2b\x69\xe4\xd2\xae\x62\x7a\x95\x96\xba\xd4\xb9\x65\x6d\x4e\xce\xd0\x18\x7f\xb6\x0a\xc6\x09\x45\x5f\xff\xf1\x04\x0c\x99\x78\xa2\xf0\x6f\xee\xf6\x1d\x7d\x97\x4f\x06\x86\x88\xe1\xc0\xe7\x1e\x26\xca\xcc\x79\x28\x5b\x39\xeb\xf7\x64\x4a\x9f\x73\x26\xc1\x21\x93\xf0\x72\xc7\x07\x05\x6c\x60\xf7\x23\xfc\x1b\xd8\x8d\xff\x94\x9b\x56\x11\x01\x56\x38\x78\xb4\x0b\x17\xf3\xc2\x05\x86\x6f\x25\xb8\x34\x16\x38\x7c\xd1\xf3\x2d\xf3\x05\xc2\x2d\xab\x40\x5a\x53\x20\x61\x39\xff\x7e\xf9\x16\x51\x1b\x4b\xa6\x14\xd8\xfb\xd0\xee\x11\x05\x60\x6b\xb2\x06\x6a\x7b\x9e\x6a\x0e\x6e\xb7\x02\xc0\x83\xa4\x03\xf6\x6d\xe9\xf2\x0f\xda\xd7\xda\xb1\xc2\xd0\x6f\x25\x85\xb9\x54\x66\x81\x45\xe9\x2a\xee\x47\xc9\xde\x8d\x5d\x0a\x70\x36\x7b\x71\x9c\x9f\xf8\xe0\x3e\x39\x7a\xee\xf6\x5d\x9d\x4f\x1c\x67\xa8\xf3\x5c\xbf\x16\x8d\xec\xd5\xf6\x40\x82\x98\x73\x7f\x6f\xf1\x7c\x1a\x0b\x44\x21\x42\x95\x35\x68\xbc\x30\x21\x50\xbb\x6d\x03\xc2\xdc\xee\x6a\x27\xf8\x07\x1e\xc7\xff\xa7\x34\xf1\x72\x08\x2d\xad\x72\xf1\xee\xe9\x74\x3a\x8a\xed\x4e\x23\xf5\x87\x84\x7a\xa6\x8f\xb5\x2e\xd0\xb1\x97\xb0\x7f\x19\xf7\x29\x06\x95\x60\xb4\x36\x6c\x5f\x4a\x59\xbb\x38\xf0\x3f\xb8\xee\xf3\xff\xfa\xba\x27\x5e\xc2\xde\x5d\xd2\xdb\x0e\x8b\x61\x2f\x30\xbc\xc5\x88\x82\xb9\x5d\x72\x46\xde\x2d\x2e\x8b\xc3\x99\xf7\x70\x39\x86\xc6\x45\x97\x95\x1d\x24\xd3\xd7\x27\x42\x25\xd1\x85\xf1\x18\x64\x62\x85\x71\x7a\x71\xb6\x70\xa1\x3f\x3f\x3a\x7e\x19\x70\xfa\x74\x8f\x26\xd6\x02\x84\x51\xb5\x4f\x8a\x90\x2b\x89\x03\xe0\x2f\x41\x94\x66\x5d\xa0\x57\x89\xe3\x2f\xe6\xc9\x49\x51\x52\x2c\x78\x26\xce\x62\x87\xb9\xa3\xd6\x73\x3f\x28\x09\xad\x84\x02\xba\xc6\xa6\x2b\xab\x32\xb9\xd5\x99\xf6\x9c\xdd\xcb\xeb\xdf\xaa\xf7\xfa\x64\xbf\x51\xc3\x5a\x83\xf9\x55\xf6\x1e\x4f\x88\x14\x5a\x72\x98\x8c\xfb\x91\xaf\x54\xd8\x23\xb9\x0d\xb7\x15\x98\xb5\xa4\x05\xc2\xd6\xb8\x1a\x85\x51\x10\x86\x99\xdd\x3c\xc6\x6c\x5d\x8c\xbe\x7c\xc9\x10\x5b\xa1\xfc\x5c\xe0\x25\x87\xd9\xec\x6c\x66\xcd\xda\x51\x05\x24\x7a\xb1\x59\xec\xe7\x67\x2e\x5c\xa3\xd9\x59\xc0\xee\x1a\x73\x0e\x3e\x18\x75\x33\x0f\x2e\x4b\x26\x92\xf6\xba\xc2\x75\xcd\x44\x79\x15\xd5\x20\x1c\xb3\xca\x6f\xf4\xb3\xc6\x03\x03\x8d\x50\xaf\x5c\xd7\x20\x2e\xce\x2e\x06\xaa\x37\xcd\x5a\x88\xe5\x67\xde\xa2\xb9\x57\x30\xdc\x3f\x9f\xcd\xce\x62\xa0\x3f\xeb\x1b\xa9\x63\xbb\x01\xa2\x5c\xdc\x7c\x90\x35\x10\x1c\x62\xc7\xac\x4a\x06\x17\x8c\xa6\xb3\x16\x6d\x97\xed\xb7\x5a\xc1\x0a\x94\x02\xfa\x2e\xf6\xba\x29\xa1\x15\xec\xa3\x85\xf7\x6e\xb9\x5d\x1d\xd2\xf4\x36\xa1\xc2\x8c\xa7\xbb\x7e\x21\x7e\x6f\xca\xe8\x68\x50\x6b\xd6\x52\xb1\xcf\x70\x08\x6b\xde\x4d\x79\xc5\x88\x92\x5a\xae\x8c\x14\x9c\x09\x97\x87\x2b\x87\xc2\xd4\x12\xb7\x20\xb0\xb7\xe0\x78\xe2\x01\x7d\x3c\x69\xe5\x8e\xf7\xcd\x82\x90\x91\x1b\x10\xbf\xf8\x44\x2f\xb3\x77\x9a\xc3\x2c\x08\xda\xc3\xe6\xa5\xeb\x89\x50\x8d\xb5\xfe\x24\x15\x1d\x22\xb4\x05\xe4\xaf\x05\xe8\xea\xa1\x34\xbe\x36\x5e\x13\xda\x03\xf2\x9b\xdb\xb9\x5f\x9c\x47\x25\x0f\x40\x3a\x66\xe7\xd9\x7e\xfd\xfd\xa7\x45\xec\x46\xf4\x2f\x16\xaa\x61\x30\x85\x6e\x97\xae\xf0\xfd\xac\x84\x1b\x97\x8a\xa8\xcb\x64\x4d\x32\x8c\xdb\x21\xfc\x6a\x2d\xd2\xc5\xf0\x10\xf5\xc3\x65\x53\x20\xcb\x74\xa0\xcb\x77\xb8\x72\xcf\xc2\x43\x27\x55\xc1\x25\x73\xad\x6f\xdd\xf2\x40\x8d\x97\xcf\x9b\x1a\xa4\x45\xf8\x21\xb2\x67\xd3\xe9\xa8\xc6\x56\x3b\xb8\x76\x63\x9e\x10\x00\xeb\x41\xa7\xb6\x94\xd2\x68\xa3\x70\x1d\x5a\xb8\x07\x95\x0f\x7c\x4d\xc1\xd7\x66\x9c\x0b\xb1\x52\x58\x1b\x65\x89\xb1\x2a\x54\x70\x35\x26\xbd\x29\x17\x73\x24\x29\xcf\xcd\x1a\x2b\xa0\xed\x68\xf5\x10\xd3\xa8\x56\xf2\x03\x90\x24\x4d\xc4\x3e\xd1\xd5\x89\x37\x7e\xb2\x26\x55\x81\x84\xa4\x90\x29\xc9\x21\xef\xb5\xcb\x13\x22\xab\xda\x1a\x68\x5a\xaa\x28\x6c\x11\xe6\x90\x57\xa0\x35\x6e\xcb\xd3\xfe\xde\x2d\x54\xb5\x6b\x6f\xdb\xda\x95\x58\xc5\xcc\x6e\xc6\xb9\x24\xd8\x1d\x19\xde\x23\xd1\xed\x4a\x2c\x75\xf5\xb4\x98\x1c\x37\x9b\x97\x78\x09\x5c\xcf\x41\xcd\x83\xf0\x02\x3d\x0b\xa3\x44\x46\x87\x7c\x47\xd3\xe6\x27\x3b\x7a\xd5\xfc\x4c\xfc\xea\x48\x49\xeb\x3a\xc5\xce\x06\xda\x2e\xa9\xac\xb0\x8b\x0d\xb7\xe7\x57\xf3\xc5\xf5\xbb\xdb\xf3\xc5\xc5\x3c\x17\xac\x76\xed\x7d\xcc\xf7\x33\x42\x5c\x77\xd2\xb1\xf9\x5f\x5f\x04\x70\x2e\x5c\xa0\x07\x41\x40\x77\x09\xb1\xc2\x02\x97\x40\xdb\x29\x6b\xd6\xd8\xda\x7f\xf6\x53\x6c\xff\xec\xdd\x7a\xcd\xe5\xee\x3b\x31\xa0\x56\x6c\x8b\x0d\xfc\x3e\x98\x3e\xe2\xa0\x95\x2b\x13\xfd\x7e\xd3\x66\xfb\x58\x11\x89\xe3\xf1\x7b\x1c\x9e\xc6\x33\xe8\x30\x15\x6d\xda\xa2\xde\xc8\xa8\x0b\x0b\xcd\xf0\xe8\x5b\x4f\x7f\x7f\xa2\x74\xa0\xc7\xd2\xbe\xb7\x6f\x86\x0b\xed\xcc\xba\x9d\x2c\x0d\xdb\xad\x48\x1f\xae\x56\xe1\xfb\x88\x2a\x7d\x21\x5e\x73\x56\xae\x4d\x78\x9a\xed\x44\x3c\x36\x7e\xfd\x28\xb3\x95\xdc\x56\xc9\x1c\x86\xee\x04\xae\x18\xf1\xf1\xd7\x85\x0f\x26\xca\x50\x06\xd1\x98\x21\xfe\x13\x00\x00\xff\xff\x1a\x08\x1e\xd4\x4d\x1b\x00\x00")

func masterEtcOriginMasterMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterMasterConfigYaml,
		"master/etc/origin/master/master-config.yaml",
	)
}

func masterEtcOriginMasterMasterConfigYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSchedulerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xda\x40\x10\xbd\xf3\x15\x96\xcf\x39\x90\x1e\xb9\x01\x89\xa2\x4a\x0d\x5a\x41\x94\x43\xab\x1c\xb6\xbb\x0f\x18\xb1\xec\xd0\xd9\x35\x2d\x89\xf8\xf7\x6a\xed\xc6\x2d\x90\x2a\xb6\xe5\xf8\x64\xbd\x7d\xef\xed\xee\x8c\xdf\xf8\x65\x90\x65\x59\x96\xeb\x1d\x3d\x42\x02\xb1\xcf\x47\x59\xbe\xbf\xce\xaf\x2a\x7c\x43\xde\x26\x44\xb1\x23\x73\x78\x45\x77\x02\x4b\x46\x47\x84\x7c\x94\x7d\x2b\xb1\xf4\xbc\xd4\x6f\x25\xcb\xeb\x2d\x92\x76\xc6\x8f\xec\x8a\x2d\xbe\xb2\xc7\x94\xfd\xd2\x91\x89\x79\x4d\x3d\x5e\xbd\xa7\xbf\xd7\xbf\x6e\x27\x8b\xca\x63\xca\x85\x6f\x2b\xbe\x9b\xde\xaa\x9b\xee\xf2\xf1\x73\x21\xb8\xa1\xb0\xe9\x6c\x11\xcd\xfa\xb3\x8f\x10\xc5\x76\xbc\x5c\x92\xa7\x78\x68\x63\x30\xe3\xb4\x7b\x97\xca\xdd\xc1\x43\xb4\x53\x7f\xdb\xd5\x42\xac\xd8\x3e\xb0\x83\x24\xdd\x8c\x2d\x1e\x34\xf9\xd8\xca\x61\xba\x86\xd9\x24\xe9\x3d\xb6\x2c\x07\x25\x08\xa1\x10\x74\xb2\x48\x25\xe8\x6c\x50\x75\x6e\x42\xde\x92\x5f\x35\x51\x6b\x59\x15\x5b\xf8\x98\x8f\xce\x56\xca\xd5\x00\xd9\x93\x41\xdd\xcb\xb7\x48\x25\xd1\xe9\xef\x70\xa7\x19\xb9\xe0\x08\x56\x29\x75\x6f\x12\x9e\x2e\xd0\xe3\x09\xf2\xcf\x05\x4e\x2e\x3d\x3f\xf3\xac\x54\x4f\x75\x7a\x89\x85\x22\x35\x4b\xef\x02\x0e\x26\xb2\x2c\x76\x02\x6d\x55\xa5\x7d\x9d\x04\x35\xfb\x27\x68\xb5\x4e\xe5\xba\x6e\xd1\x9b\xf3\x50\xf4\x6a\xfe\x05\x3a\xc4\x39\x7e\x14\x08\x11\xfd\x9e\x7b\xa2\x9d\xf6\x06\x76\x8e\xc0\x85\x18\x8c\x9d\x63\xa3\x63\x2a\x79\x1f\xf6\xe9\x73\x57\x82\x25\x64\xbc\x67\xb2\x8a\x6d\x78\xff\xf8\xc3\xe1\x70\xd8\x72\x8f\x0f\x29\x7b\x39\x25\xfe\xcc\x0d\x62\xdf\x8b\x77\xb3\x34\xfa\x48\x0d\x13\x99\xce\xf9\xcc\x1e\x97\xa1\x6b\x16\xaf\xf4\x23\xfb\xef\x85\x3e\x9d\xa7\x6e\x70\x1c\xfc\x0e\x00\x00\xff\xff\xaa\x29\xaf\x2a\x65\x07\x00\x00")

func masterEtcOriginMasterSchedulerJsonBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSchedulerJson,
		"master/etc/origin/master/scheduler.json",
	)
}

func masterEtcOriginMasterSchedulerJson() (*asset, error) {
	bytes, err := masterEtcOriginMasterSchedulerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/scheduler.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterEtcOriginMasterSessionSecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\x08\x4e\x2d\x06\x89\x04\xa7\x26\x17\xa5\x96\x14\x73\x15\x43\x68\x2b\x2e\x5d\x85\xc4\xd2\x92\x8c\xd4\xbc\x92\xcc\xe4\xc4\x12\xb0\x96\xea\x6a\x05\x3d\xc7\xd2\x92\x0c\x88\x52\x85\x1a\x85\xc2\xd2\xfc\x92\x54\x85\xda\x5a\x2e\x05\x85\xd4\xbc\xe4\xa2\xca\x02\x84\x3a\xd7\xbc\x64\x4c\x65\x80\x00\x00\x00\xff\xff\xc1\xc1\xc9\xa5\x80\x00\x00\x00")

func masterEtcOriginMasterSessionSecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterEtcOriginMasterSessionSecretsYaml,
		"master/etc/origin/master/session-secrets.yaml",
	)
}

func masterEtcOriginMasterSessionSecretsYaml() (*asset, error) {
	bytes, err := masterEtcOriginMasterSessionSecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/etc/origin/master/session-secrets.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAnsibleSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6e\xdc\x36\x10\x7c\xd7\x57\x4c\xee\x8a\xa6\x05\x2c\x29\xe7\x22\x0e\x70\x45\x53\xa4\x88\x8b\x06\x48\xea\xa2\xf1\x43\x1f\x0a\x18\x14\xb9\x77\x62\x4d\x71\x89\xdd\xd5\x5d\xd4\xc0\xff\x5e\x48\x3e\x3b\x45\xfd\x54\xe9\x85\xa2\x66\x67\x77\x86\xc3\xf5\xb3\xb6\x8b\xb9\xed\x9c\xf6\xa8\xe9\x53\x55\xad\x71\x7d\xf5\xf6\x6a\x8b\xc0\xb0\x3e\xea\x19\x5c\x0e\x18\x58\x08\xdf\x08\xed\xa3\x9a\x4c\xf0\x9c\x95\x13\x9d\xc1\x69\xf7\xed\x19\xac\x27\x14\xe1\x42\x82\xa3\x9b\x66\x8a\x23\x61\x4f\x86\x55\x88\x2e\xc1\x7c\xd9\x22\x31\xdf\x8e\x05\x3b\xe6\x86\x9c\xda\xa8\x8d\x4f\x3c\x06\x57\x4a\xe3\xfe\x1e\x85\x1a\xcf\x03\x38\x63\xf3\xa2\x99\xdf\xcd\x66\xfb\xf2\xbb\x2d\x84\x5c\xa8\xd6\x18\x43\xc1\xe6\xd5\x79\xb3\x79\xd5\xbc\x68\xce\xb7\x2f\x2f\x2e\x2e\xce\xeb\xd7\x4f\xa1\x5b\x64\x86\xf0\x68\x04\x63\xf4\xac\x06\x12\x61\xd1\x15\x9c\x55\x6b\xa8\x39\xb1\x7a\x2c\x5b\x1c\x5d\x34\x8c\xd9\x62\x9a\xa7\x57\x82\x8e\x9d\xc6\x40\x4d\x75\xec\x63\x22\x3c\x03\x7b\x1c\x48\x34\x72\xc6\xd7\xaf\xdb\x40\x87\x36\x8f\x29\x7d\x8f\xc0\x15\xa0\x89\xa8\x60\x53\x05\xce\x54\x55\x3b\x96\x59\xff\x5f\xe4\x0d\x31\x23\xd0\xce\x8d\xc9\xc0\x85\xb2\xf6\x71\x67\x75\xcc\x3b\x71\xa7\x52\xf6\x28\xce\x7c\xff\x58\xf1\xd5\xc3\xa2\x2e\x78\xfe\x79\x35\x90\xb9\xe0\xcc\xad\xb6\x9f\x57\x2e\x67\x36\x67\x91\xb3\xce\x9f\x8f\x84\x4d\xe4\x36\x73\xa0\x5a\x29\x91\x37\x96\xd5\x16\xab\xd5\xdd\xdd\xdd\xf3\xd3\x44\x6b\xfc\xfc\xee\x8f\x0f\x97\xa8\x71\xdd\x47\x85\xf6\x3c\xa6\x80\x8e\xd0\xbb\x1c\x12\x05\x74\xd3\x72\x6a\x5f\x46\x74\x59\x63\x97\x08\x25\xb9\xa9\x63\xbe\xd5\xd9\x41\xca\x3a\x0a\x55\x6b\x3c\x3c\x0e\x21\xca\xd2\x71\x42\x34\x64\xa2\xb0\x00\x8f\x12\xef\x3d\xa7\x4f\x51\x4d\xd1\xd1\x6e\x4e\x8c\x33\xa3\xa1\x58\xcc\xfb\x47\xd0\xbf\xc8\x8c\x11\xad\x1a\x6e\x43\x94\x59\x7b\x4b\xe6\x5b\x96\xb8\x8f\xb9\x1d\x9c\x1a\x49\x9b\xdd\x40\xe1\xc6\x93\x58\xdc\x45\xef\x8c\x74\x96\xf6\x96\x4a\xe2\x09\x2e\x25\x2c\xc6\xc2\xf3\x50\x38\x53\x36\x85\xd0\xa8\x73\x3b\xa1\x44\x07\x97\x0d\xc5\x89\x29\x76\x32\xa7\xeb\xbf\x62\xab\x37\xbf\x7e\x7c\xf7\xd3\xfb\xcb\x9b\xdf\xaf\xde\x5f\x7e\xbc\xf9\xed\xcd\xf5\x2f\x3f\xb4\xa3\x4a\xab\xbd\x13\x6a\x4f\xa8\xf6\x49\x5d\x2b\x9c\x48\x5b\xfc\x59\x01\xa7\xad\xfa\xc1\xb7\x79\xaf\xfe\x80\xff\x41\x93\x62\x77\x33\x5a\x4c\xcb\x4a\x9c\x4c\x0b\x6f\xed\x91\xd8\xbb\x84\xe5\x76\xd4\xec\x4b\x1d\x16\xdd\xcd\x34\xa4\x7b\x44\x3c\xfd\x5b\x70\xf5\xbd\x65\x75\xcc\x07\xca\xf3\xf9\xcc\xb8\x2f\xb7\xb9\xb0\xce\x3d\xa7\xfb\xe0\xf7\x24\x84\x39\xb5\x9e\xf3\x81\x64\x4f\xd9\xd3\x8f\xd5\x3f\x01\x00\x00\xff\xff\x19\x22\x4a\x18\x0b\x04\x00\x00")

func masterTmpAnsibleAnsibleShBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAnsibleSh,
		"master/tmp/ansible/ansible.sh",
	)
}

func masterTmpAnsibleAnsibleSh() (*asset, error) {
	bytes, err := masterTmpAnsibleAnsibleShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/ansible.sh", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureLocalMasterInventoryYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\xeb\x6f\xdb\xc8\x11\xff\xee\xbf\x62\xa0\x14\x50\x8b\x9e\xa4\x26\x39\xa0\x3d\x02\xf9\xa0\xf3\x31\xb1\x71\xb1\x65\x48\x72\x91\xb4\x28\x88\x25\x77\x28\x6e\xbd\xda\x61\x76\x97\x92\x75\x69\xfe\xf7\x62\xb8\x4b\x3d\xe8\x47\x8c\xe8\x93\x28\xce\xfe\xe6\xf5\x9b\xc7\x6a\x34\x1a\x9d\xbd\x82\xf7\x97\x9f\xae\xd2\x04\xa6\x66\xe7\x2b\x65\x56\x90\xa3\xa6\x2d\x28\x03\x42\xeb\x51\x21\x6a\x07\x95\x70\xa0\xfc\xd0\xc1\x46\xe8\x06\xc1\x62\xad\x45\x81\x12\xf2\x1d\x38\x94\x2c\xea\x2b\x3c\x7b\x05\xf1\x43\x35\x1a\x57\xa9\xd2\xaf\x85\xf3\x68\x5d\x61\x55\xed\xc7\xae\x82\x6d\xa5\x8a\x0a\x94\x03\x43\x1e\x94\x44\xa1\x7f\x82\x2d\x82\xab\xa8\xd1\x12\x4a\x75\x0f\xbe\x12\x7e\x7c\xa6\xa9\x10\x3a\x1c\x4e\xce\x00\x2a\x72\xde\xf1\x17\x80\xf6\x0d\x3f\x9f\x01\x6c\x84\x8d\xbf\x0a\xe3\x54\xae\x31\x2b\xc8\x18\x2c\xbc\x22\x93\x04\xc9\x93\xb7\xf5\xce\x57\x64\x32\x65\x3c\xda\xda\x22\x83\xc3\xa4\x71\x76\x92\x2b\x33\x09\x2f\xdf\x9c\x9d\x9d\x38\x90\x29\xc7\xa0\x5e\x28\x83\x56\xfd\x81\x32\x81\xf7\x42\x3b\xec\x49\x15\x5a\xa1\xf1\x59\xae\x8c\xb0\xbb\x23\x50\x2a\x1e\xe0\xad\xc5\x0a\x33\x2f\x56\x09\x0c\x36\xff\x4c\xe7\x8b\xcb\xd9\xf5\x20\x08\xbd\x82\xeb\xd9\x32\x4d\x60\x59\x29\x07\x45\x25\xcc\x0a\x1d\x87\xf6\xed\xf8\xf5\xdf\xfe\x0a\xc2\xc8\x90\x02\xa1\x35\x14\xb4\xce\x95\x69\x23\xef\x09\x04\x38\x65\x56\x1a\x39\x20\x4a\xe4\x1a\x23\x5c\xf8\x34\x46\xa2\xe5\xfc\x80\x11\x6b\x3c\x32\x65\x8b\x39\xfb\xe6\x48\x63\x34\x8b\x05\x7a\xf6\x1e\x0b\xd5\x16\x4b\x75\x9f\xc0\xe0\xf2\x6a\xfa\x21\xcd\x6e\xe6\xe9\xfb\xcb\x4f\x93\xc1\x33\x27\x0e\xb0\xfb\x53\xcb\xcf\x37\xe9\x68\x8b\xf9\x28\xca\x3c\x77\x7c\x83\xd6\xb5\xb9\xec\x87\x8a\x2c\xae\xb2\xc6\xea\x2c\x72\x04\x86\x57\xd3\xc5\x32\x9d\x67\xb3\x79\xfa\x21\xbb\x9d\x7f\x1c\xf6\x50\x83\x5c\x26\xb1\x14\x8d\xf6\x99\x6b\x72\x49\x6b\xa1\x4c\x02\xc3\x65\x7a\x75\x33\x9f\xdd\x2e\xd3\xf9\xe5\xcd\xd8\xa8\x7a\xac\x68\xd8\x25\xa4\xad\x8c\xf8\xbd\x4d\x4b\x64\x6a\x8e\xe0\x77\x35\xbe\x53\xa6\xb4\xe2\x27\xc8\x1b\xcf\x34\xae\xc4\x06\xc1\x13\x68\xb5\x41\xd8\x2a\x5f\x81\xc5\x95\x22\x13\xc4\xa0\x24\x0b\x86\xb6\x11\x2e\xc7\x42\x34\x0e\x81\x4a\xd0\xb8\x12\xc5\x0e\x2c\x0a\x47\xc6\xf5\x2c\xb7\xd4\xb0\xe5\x0e\x35\x16\x9e\xd8\xd5\x63\xd0\xbe\x9f\xfc\xce\x79\xbb\x7b\x5e\xfe\x15\x5c\x53\x5b\x7e\xb0\xad\x76\xe0\xd9\x31\xe5\x40\x80\x54\x65\x89\x16\x8d\x07\x29\xbc\x68\x5d\x0c\xce\x29\x0f\xaa\x6f\x58\x6d\x69\x8d\xbe\xc2\xc6\x65\x86\x24\x1e\x69\xfc\x1a\x55\x0e\x13\x18\x06\xad\xdf\xba\x80\x2e\xd0\xc3\xf4\x8f\xc6\x22\xb8\x1a\x0b\x55\xaa\x22\xa8\xe2\xd8\x70\x55\xa3\x84\xce\x85\x9e\xba\xf0\xf6\xc8\x41\x4f\x96\xc9\x55\x5b\xda\x28\xc9\x1c\x18\x08\x06\xce\x72\x4d\x79\x9f\x54\x4f\x1d\xbe\x53\x46\x26\x30\xa0\xfc\xbf\x58\xf8\x97\x1e\x3a\xa8\xc9\x44\x51\x50\x63\x7c\x20\xf8\x70\x9e\x7e\xb8\x5c\x2c\xe7\x9f\xb3\xc5\x72\x36\x67\xae\x4f\xff\x75\x3b\x4f\xb3\xe9\xf9\xf9\xec\xf6\x7a\x79\x3d\xbd\x4a\xfb\xe9\x7a\xb9\x8a\x3b\xdc\x7d\x57\xc3\xef\xe9\xe7\x1f\x50\xb0\x6f\x6f\x09\x0c\x3a\xb9\x1f\x08\x85\x45\xa1\xd7\x09\x0c\x0a\xb2\x38\xde\x2a\x23\x69\xeb\xc6\x06\xfd\xe0\x91\x5a\x8a\xbf\x5c\x08\x2b\xa1\x20\x89\x81\x82\xb1\x3e\xc6\x27\x32\xe7\x8d\x65\x42\xea\x5d\xdb\xc1\x0a\xdd\x70\x1d\x83\xf3\xc2\x23\x08\x0f\x12\x6b\x4d\xbb\x35\x53\xd6\xab\x35\x82\x24\x0c\xc3\x25\xd4\x22\x37\x3d\x92\xe8\x22\x58\xb0\x1f\x2d\x4a\x2e\x53\x7e\x1b\xfa\x42\x28\x56\x2d\x72\xd4\x0e\x44\x5d\x6b\x85\xb2\x6d\xb8\x16\x85\xdc\xb1\x6c\x8e\xf0\xa5\x41\xab\x50\x46\x28\xb1\x12\xca\x38\xcf\x36\x30\x4e\x4d\xca\xf8\x76\x0e\xb2\x15\x61\x1e\x46\xe3\xda\x91\x16\x84\xb4\xd8\xe5\x44\x77\x0e\x6c\x63\xc6\x30\xd5\x8e\x7e\x8a\x70\xfc\x3a\x54\x7a\x3b\x5c\x55\x21\xa0\x4d\x3b\xc4\x8e\x05\x83\x52\x68\xed\x20\x17\xc5\xdd\x80\x0d\x7a\xcd\x76\x5a\xaa\xad\x12\x1e\xf5\x0e\xb6\x15\x5a\x04\xe1\x8e\xf1\x62\xb6\xf6\x88\x9a\x56\x5c\x6f\x31\x44\x63\x58\xb6\x67\xb6\x82\x67\x8a\x23\x90\xca\x15\x8d\xe3\x86\x0b\x22\x27\xae\xfa\x32\xa2\x85\xb9\x73\xd0\xc7\x06\x48\x0a\x59\x8b\x7d\xae\xd5\xe0\xe0\xdd\x3b\x08\xcd\xae\x0d\xfb\xbe\xc9\x31\x40\xc4\xaa\xd1\x96\x58\x70\x42\x4b\x14\xed\x5c\x66\xb4\x36\x5d\xc2\x1c\x1d\x8e\xfe\x57\x6a\x55\xb5\xe3\x4b\x74\x31\x75\xca\xee\xb3\xd0\xe9\x3d\xe5\xcc\x1c\x37\xca\x29\x0f\x5a\x70\x3c\xff\x5c\x93\x63\x3d\x3b\x6e\x70\x02\xd7\x64\x1c\x7a\x20\x0b\x7f\x22\x5f\xa1\xfd\xcb\x13\x54\x0f\x6d\xb7\x53\x90\xc0\xeb\xef\x94\xc4\xb1\xe4\xd3\x9d\xb2\x25\x6e\x02\x83\xda\xa2\x43\xf3\xa0\xe5\xf4\x7b\x2a\xde\xd7\x64\xd9\x8e\x30\x48\xf7\xf3\x70\x78\x33\x9f\x5d\xa5\xcb\x8b\xf4\x76\x91\xa5\x9f\x6e\x66\x73\x9e\x7d\x71\x44\x0e\xfb\xea\x4f\x06\xb2\x71\x5e\x68\x9d\xc0\xd2\x36\xf8\x8c\x9d\x41\xdf\xcb\x06\xfe\xa1\x06\x33\x9e\x18\x09\x0c\xa7\xd7\x8b\xcb\x5f\x3f\xa6\xd9\x6f\xe9\xcd\xc7\xd9\xe7\x76\xe4\x47\xab\xba\x55\xcc\xa1\xdd\xa8\x02\xb3\xdc\xd2\x1d\xbb\x77\x62\xd6\x29\x7c\x27\x5a\x08\x2f\x34\xad\x9e\x35\xed\x68\xc5\xe8\x5b\xf9\x38\xcc\x21\xa2\x9b\x7d\xf8\x1e\xdd\x1c\xd0\x17\x92\x37\x0e\x97\xc0\xbf\x07\x95\xf7\xb5\x4b\x26\x93\x8b\xd9\xa2\x6d\xeb\xc9\x9b\xb7\x7f\xff\x65\xf0\x9f\xe0\xa2\xc7\x75\xcd\xcc\xeb\xfb\xf8\x5c\x30\x9f\x3a\xf3\xd4\xfe\xd4\xc9\x8f\xa2\xfc\x28\xc8\x3f\x0f\xf6\xe4\x36\x75\xb2\x78\x2a\x07\x16\x65\x63\xa4\x30\x3e\x0c\x7f\x8b\x5f\x1a\x15\x7b\x66\x25\x8c\xe4\x45\x33\x40\x81\xbb\xc3\x2d\xe4\xe8\xb7\x88\xe6\x64\xe9\xdc\xc7\x6f\x14\x33\xce\x3d\x71\x66\xd5\x8a\x6f\x15\x46\xc2\xec\xfc\xa6\x17\x67\xbc\x17\xeb\x5a\x63\x58\xb7\x99\x4b\x47\xe6\x2e\x2e\x66\xf3\x25\xf3\x7b\xd0\xa7\x6c\x41\xc5\x5d\xad\x3a\x0e\x1e\x47\xf9\x7c\x76\xfe\xfb\xcd\xe5\xf2\x29\xd2\x3e\x38\x98\x0b\x87\x31\xd0\xdd\xd1\x5f\xa7\x8b\x94\xd3\xfb\xdd\xb3\x07\x53\xbb\xa3\x8f\x07\xf8\x37\x6a\x67\x93\xc4\x52\x19\xfc\x6e\xcf\x01\x47\x87\xd9\xe1\x85\xbb\x83\x52\xed\x77\xfb\x20\x3b\xde\xad\x35\x28\xe3\x94\x0c\xc3\xae\x0f\x09\x96\x34\x42\x69\x69\xfd\x48\x46\xb6\x4a\xeb\x6e\x9a\x35\x9e\x6a\xaa\x1b\xa6\x0d\x2f\x7b\x0d\x5f\x28\x1e\x45\xec\xef\xa3\x6d\x36\x79\x34\xee\x94\x59\x1d\x0d\x1f\xd3\xac\x73\xb4\xbc\xdd\x1e\xcd\x83\x3e\xdd\x0e\x37\x16\x17\x2f\x9d\xc2\x32\x53\x3c\x5a\x23\x34\xf3\xed\xa1\xd5\xac\x6f\x8b\x43\x7b\x7a\xc9\x09\x5b\x60\x34\x7a\x0d\xed\x60\xe3\x9b\xd1\x86\x94\x6c\xed\x51\xa6\xe0\x4d\x82\xf7\x0d\xe7\xd9\xac\x52\x14\x1e\x4a\x65\x64\x67\xf7\x5e\x55\xb8\x52\x02\x5f\xb2\xd6\x64\xba\x27\x7e\x36\xa5\x5a\xb5\x44\x49\x60\x82\xbe\x98\x50\x4b\xe8\xc9\x5e\xe2\x85\x1c\x0e\xc2\x87\xeb\x6d\x74\xa1\xc9\xb5\x2a\xf6\x9d\xba\xb1\x3a\x81\xaf\x5f\xa1\xb6\xbc\x59\xec\x5b\xce\x00\xc6\xe9\x7d\x88\xcf\x55\x0b\x70\x41\xae\xdd\x3f\x61\x90\xfc\xe3\xe7\x9f\xdf\x4e\xba\x6b\x15\xfc\x0f\xbe\x34\xe4\x11\xbe\x7d\xeb\xab\x10\xb5\xfa\x51\xf8\x47\x61\x5f\xd2\x1b\xe1\x55\xfc\x97\xe1\x9a\x40\x93\x59\xa1\x05\x83\x28\x79\xcf\x72\x9c\x8e\x07\x89\x1e\xbd\x1d\xff\x32\x7e\xf3\x66\xf4\x3a\xde\xae\x86\x16\xdb\xe2\x21\x13\x8a\xa2\x6b\x41\x3b\xf4\xd1\x10\xa6\xd8\x21\x9c\xfc\x14\xf7\xf2\xce\x94\xe1\xd9\x19\x51\x6c\xe8\x2e\xf3\x94\x85\x8c\x3e\xf9\x0f\xc3\xff\x03\x00\x00\xff\xff\xf9\xbe\x22\x8b\x1e\x11\x00\x00")

func masterTmpAnsibleAzureLocalMasterInventoryYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureLocalMasterInventoryYml,
		"master/tmp/ansible/azure-local-master-inventory.yml",
	)
}

func masterTmpAnsibleAzureLocalMasterInventoryYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureLocalMasterInventoryYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-local-master-inventory.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpAnsibleAzureOcpDeployYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x95\x31\x8f\xdb\x38\x10\x85\x7b\xfd\x8a\x87\xbd\xc2\xcd\x79\xbd\x8b\xeb\x04\xdc\x55\x97\x00\x5b\x04\x29\x92\x22\x40\x10\x08\x14\x35\xb6\x08\x53\xa4\xc0\x19\xae\x63\x60\x7f\x7c\x40\x89\x92\x17\x0b\x7b\x6d\x21\x45\x3a\x9b\xd2\xbc\xf7\x71\xe6\x89\x5c\xc3\xa9\x8e\x4a\xfc\x4f\xbd\xf5\x47\x7c\xee\xc9\x7d\x69\xcd\x56\x60\xdc\x36\x28\x96\x10\xb5\xc4\x40\x38\xf8\xb0\xb7\x5e\x35\x05\xd0\x7a\x16\x2e\x61\xbd\x56\xb6\x53\x2c\x14\x0a\x60\xa7\xa4\xa5\x50\x6d\x95\x4e\xcf\xb6\xca\x32\x15\x05\x20\x8a\xf7\x5c\x16\x00\x30\x39\x3d\x75\xbd\x0f\x02\xdf\x93\xe3\xe4\x54\xd5\xde\x0b\x4b\x50\x7d\xa5\xa2\x78\xd5\xf7\xc1\x3f\x53\x40\xf0\x96\xb0\x0d\xbe\x3b\xbd\xba\x56\x8e\x4d\x6d\x09\xe2\xd1\x8c\xc0\xce\x37\x84\x59\x01\x49\x01\x93\xc4\x60\x0b\x98\xc1\xb0\x4a\x7a\x65\x5e\x42\x66\xb9\x06\x51\x9c\x23\x57\xae\x41\x64\x42\xf0\x51\x28\x0c\x5b\xc4\xd6\x5c\x86\x3d\x99\xa4\xce\x51\x33\xec\x6c\x09\xdb\x58\x36\x3f\x1e\x7a\x5a\x25\xb3\x32\x33\xdc\x1f\x3b\xfb\x3e\x2a\xed\x0c\x4b\x38\xfe\x61\xd8\x4c\x71\x11\xf7\xa4\x72\xa0\xba\xd2\xde\x71\xca\xc0\x6d\x41\x38\x50\x8d\x5c\xb1\x04\xf7\x95\xd1\x88\xf4\x17\x3e\x3e\x7d\xfb\xf4\x01\x6b\x7c\x6d\x29\xd0\x8a\xa1\x10\x94\xa6\x24\xde\x18\x31\xde\xe1\x90\x1e\x40\x5a\x1a\x3f\x12\x58\x55\x93\x85\x61\xb7\x92\x94\x3d\x6b\xa8\x81\xf8\xac\x36\x37\x62\x7e\x7d\x88\x6c\x13\x83\x71\x3b\x68\x1b\xd3\x07\x84\x7a\xf8\x17\x7b\x18\xf7\xa6\xee\x5a\x44\xff\x86\xb4\x86\x61\x18\x7d\xf0\xb5\xa5\x4e\x89\xd1\xa8\x49\xab\x34\x78\x69\xe9\xa2\x5e\x1f\x7c\x47\xd2\x52\xe4\xb1\xc5\xba\x25\xbd\xe7\xd4\x52\x72\x1c\xc7\x1d\x06\x4a\xca\x99\xf9\x60\xa4\xbd\xb8\x2b\x26\x4b\x5a\x7c\x40\xec\x37\xea\x59\x19\xab\x6a\x4b\x1b\xd6\x2d\x35\x71\xf8\x7d\x9f\x27\xce\x2d\x59\x5b\x62\xb5\x89\x1c\x36\xb5\x71\x1b\xaf\xb1\x23\x19\x2c\x18\x6b\x8b\xbb\x94\x13\xef\xfe\x1d\x74\xef\xf0\x82\x83\xc6\xda\xae\xf2\x08\xc7\x10\x51\x48\x71\xe2\x68\x25\x2f\x47\x27\xc6\x4e\x6b\xf7\x2c\x8d\x8f\x52\x59\xe3\x88\xbf\x3f\xfc\x78\x31\x4e\xf0\x1f\x1e\x67\x09\x09\x86\xb8\xc4\x3f\x0f\x79\xa5\x21\xab\x8e\x25\x1e\x1f\x8a\x2b\xb9\x7c\xdb\xb3\xab\xb1\x3c\x15\x2c\x49\xe5\xab\xaa\xf7\x79\x98\xc2\xb3\xd1\x54\x69\x25\xca\xfa\xdd\x8d\x50\x69\x6a\xb9\x12\xb9\x72\x09\xdd\x1b\xd3\x0b\x27\xcf\x60\x3a\xbf\x5b\x07\xbf\xbf\xf9\x50\x4f\x7c\xd3\xea\xc4\x39\x0a\x5c\xc7\x3c\x6f\x7c\x96\x51\xa8\xeb\xad\x92\xdf\x80\x9c\x14\x16\x53\x5e\xb0\xbe\x32\x6d\xfa\xa9\xba\xde\xd2\xad\xd9\x4b\x84\x53\xc9\x92\xf9\xce\x35\xef\xd3\x8c\x27\x7d\x35\x6d\x65\x09\x55\xbe\x5b\xe6\xd2\xe5\x17\xcc\xc9\xf6\x2c\xa5\xf6\x7a\xdf\x1b\xa9\xa2\x59\x40\x35\xdf\x92\x37\xdf\x23\xd9\x66\x1d\x4d\xf1\x2b\x00\x00\xff\xff\x57\x93\xda\x47\x49\x09\x00\x00")

func masterTmpAnsibleAzureOcpDeployYmlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpAnsibleAzureOcpDeployYml,
		"master/tmp/ansible/azure-ocp-deploy.yml",
	)
}

func masterTmpAnsibleAzureOcpDeployYml() (*asset, error) {
	bytes, err := masterTmpAnsibleAzureOcpDeployYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/ansible/azure-ocp-deploy.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsComputeConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\x1c\x37\x0c\xbd\xeb\x57\x10\x9b\x6b\x77\x3e\xd6\x4d\x03\x08\xc8\xc1\xf5\x47\x1a\xb4\x89\xdd\xb5\xdb\x6b\xa0\x91\x38\xbb\xea\x6a\x44\x95\x92\xc6\xde\xfe\xfa\x42\x9a\xf5\x17\x7a\x69\x2e\x03\x0c\xf9\xf8\xf8\xf8\x44\x2a\xe7\xe8\xe1\xd2\x46\x35\x38\x34\x97\xa4\x0f\xc8\x12\x46\xe5\x22\x0a\x15\xec\x9f\xc8\xd1\x92\x97\x30\xf7\xc2\xf8\xf8\xb3\xf5\xe6\xdc\x18\xc6\x18\x25\xf4\x9b\x0f\x4d\xd7\x74\x4d\x2f\xdf\x9f\x95\xe4\x16\x75\xe6\x68\x67\xdc\x62\x24\x37\x5f\x90\x1f\x25\xb4\x98\x74\x4b\x6c\x77\xd6\xb7\x9e\x0c\xb6\x5c\x93\x8d\x26\x3f\x96\xa2\x4b\x9a\x94\xf5\x12\xb4\xcb\x31\x21\x37\x8e\xb4\x72\x25\xf1\xf9\x56\x42\xff\x61\xd3\xf4\xa5\x49\x2f\x4c\x55\x56\x38\xed\x4e\x0a\x00\x7c\x44\xfd\x8b\xf2\xc6\x21\x7f\x55\x13\x4a\x58\xad\x84\x0d\xa9\x4c\x11\xef\x8e\x5e\xdf\x22\x5b\x32\x12\x56\x67\x5d\x5c\x09\x3b\xa9\x1d\xbe\x14\x8f\xc4\x93\x4a\x12\xbe\x9c\xdf\xdd\x5f\x6d\xbf\xdd\x6c\xaf\x3e\x7d\xfb\x63\xfb\x9b\x00\x70\x2a\x61\x4c\x12\xae\xab\x01\x07\xeb\x8d\x84\xaf\x64\x4e\xb5\xe2\x90\x07\x74\x98\xce\x79\x97\x27\xf4\x29\x16\xb2\x32\xd5\xda\xa9\x01\x5d\xfd\x5d\x2f\x01\x26\x87\x4d\x81\xb3\xc7\x84\xb1\xb1\xd4\x6a\x9a\x42\x4e\xf8\x31\x71\xc6\x0a\x64\xdc\x59\xf2\x1f\x03\xdb\x49\xf1\x51\x00\x68\x47\xd9\xac\x03\xd3\x6c\x0d\xf2\xc2\xb6\x52\xff\x64\xc6\xd5\x73\x56\x3f\x4f\xb1\x86\x55\x75\xb7\x02\x96\x6f\xb5\x75\x25\x26\x55\xbc\xbc\x70\x16\x7d\xba\x20\xef\x51\x27\x4b\xfe\x66\x46\x66\x6b\xb0\xca\x54\x5a\x63\x28\xc9\x84\x3e\xdd\x1f\x03\x46\x09\x2a\x04\x67\xb5\x2a\xd8\x76\xf6\xe6\xb5\xfc\xc0\x94\x68\xc8\xe3\x0f\xaf\x31\x7f\x45\xf2\x45\xd7\x0b\xc9\xff\xe2\x10\x00\x43\xe6\xe2\xf2\xa6\xeb\x04\xc0\xdf\xa1\x2c\x53\xd7\x9d\x64\xff\x9a\x87\xa7\xa7\xaa\x56\x56\x8a\x65\x6a\xe1\x31\x3d\x10\x1f\x6e\x5d\xde\x59\xbf\xbc\x3b\xa3\xd9\xab\xd4\x52\x40\x1f\xf7\x76\x4c\x6b\x9a\xe3\x3a\xe6\xc1\x63\x12\xef\xe0\x54\xb0\xf0\x41\x4c\x9c\x75\x02\xeb\x13\x93\xc9\x1a\x0d\x58\x0f\xcb\x72\x42\xdf\x74\xcd\x4f\xa0\xbc\x81\x9b\xbb\x2b\x38\x6b\xba\x66\x03\x0f\x7b\xab\xf7\xe2\x1d\x18\x0c\x8c\xba\xac\x06\xfc\x47\x01\xa8\x81\x66\x6c\xe0\x7e\x8f\x90\x1e\x08\xe2\x9e\xb2\x33\x30\xa9\xa4\xf7\x8d\x78\xd3\xbf\xf8\x3e\xa5\x2c\xa1\xff\xf1\x7d\x19\xfc\x3b\xa7\x09\x64\xbe\x28\x6f\x47\x8c\xe9\x89\x2f\x22\xcf\xd6\xef\x3e\xfb\x91\x0a\xf9\xf0\xfa\x3c\xbb\x7a\x9c\x9d\xec\xbb\x4d\xed\xa6\x91\xd3\xb5\x75\x28\xa1\x54\x21\x37\x9a\x53\xdd\xaa\xba\x25\xe7\x12\xb4\x3a\x85\x0e\x78\x7c\x03\x3c\xe0\x51\xcc\xe4\xf2\x84\x97\x96\x51\x27\xe2\xa3\x84\x76\x56\xdc\x3a\x3b\x3c\x1d\xf7\xb3\xe4\xe5\x84\x9b\xa5\x20\x8a\xc0\xf4\x78\x7c\x73\x30\x35\xb2\x9e\xc8\x60\xf9\x83\xb2\xc8\x4f\x97\x7b\x6a\xf3\x62\x57\xe5\xfa\x3d\x53\x52\x0b\x36\x20\x5f\xdf\x7d\x62\xca\x41\x8a\x7f\x03\x00\x00\xff\xff\xbb\x3a\x11\x32\xba\x04\x00\x00")

func masterTmpBootstrapconfigsComputeConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsComputeConfigYaml,
		"master/tmp/bootstrapconfigs/compute-config.yaml",
	)
}

func masterTmpBootstrapconfigsComputeConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsComputeConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/compute-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsInfraConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x8f\x1b\x37\x0c\xbd\xeb\x57\x10\xce\xb5\x9e\x0f\x6f\xd3\x00\x02\x7a\xd8\xee\x47\x1a\xb4\xc9\x6e\xbd\xdb\x5e\x03\x8d\xc4\xb1\x55\x6b\xc8\x29\x25\xcd\xc6\xfd\xf5\x85\x66\xec\xfd\x40\x2f\xed\x45\x80\x44\xf2\x91\xef\x89\xcf\x84\xc0\x4f\xd7\x3e\x9a\x2e\xa0\xbb\x66\x7b\x40\xd1\xd0\x9b\x10\x51\x99\xd1\xff\x81\x12\x3d\x93\x86\xa9\x55\x8e\xe2\x4f\x9e\xdc\xa5\x73\x82\x31\x6a\x68\x37\x1f\xaa\xa6\x6a\xaa\x56\xbf\xbf\x28\xc1\x2d\xda\x2c\xd1\x4f\xb8\xc5\xc8\x61\xba\x62\xea\x35\xd4\x98\x6c\xcd\xe2\x77\x9e\x6a\x62\x87\xb5\xcc\xc1\xca\x32\xf5\xa5\xe8\x9a\x07\xe3\x49\x83\x0d\x39\x26\x94\x2a\xb0\x35\xa1\x04\x3e\xdd\x6b\x68\x3f\x6c\xaa\xb6\x34\x69\x95\x9b\x27\x2b\x98\x7e\xa7\x15\x00\x7e\x43\xfb\xb3\x21\x17\x50\xbe\x98\x01\x35\xac\x56\xca\x8f\xa9\xb0\x88\x0f\x47\xb2\xf7\x28\x9e\x9d\x86\xd5\x45\x13\x57\xca\x0f\x66\x87\x2f\xc5\x3d\xcb\x60\x92\x86\xcf\x97\x0f\x8f\x37\xdb\xaf\x77\xdb\x9b\x8f\x5f\x7f\xdf\xfe\xaa\x00\x82\x49\x18\x93\x86\xdb\x59\x80\x83\x27\xa7\xe1\x0b\xbb\x53\xad\x3a\xe4\x0e\x03\xa6\x4b\xd9\xe5\x01\x29\xc5\x02\x56\x58\xad\x83\xe9\x30\xcc\xd7\x35\x08\xee\x3c\xd3\x8f\x9e\x7a\x31\x0a\xc0\x06\xce\x6e\x3d\x0a\x4f\xde\xa1\x2c\x29\x2b\xf3\x77\x16\x5c\x3d\x47\xed\xf3\x68\x6b\x58\xcd\x92\xcd\x09\xcb\x39\x6b\xb5\x52\x83\x29\x02\x5d\x05\x8f\x94\xae\x98\x08\x6d\xf2\x4c\x77\x13\x8a\x78\x87\x73\x6f\x63\x2d\x8e\x25\x98\x90\xd2\xe3\x71\xc4\xa8\xc1\x8c\x63\xf0\xd6\x94\xdc\x7a\x22\x57\x15\x0a\x42\x98\x30\x56\xa3\x70\xe2\x2e\xf7\xdf\xbd\xce\xf9\x33\x32\x95\xb9\x5e\x40\xfe\x13\x86\x02\xe8\xb2\x14\xe9\x36\x4d\xa3\x00\xfe\x1a\xcb\x86\x34\xcd\x69\xec\x5f\x72\x77\xd6\x7f\x16\x6c\x86\x58\x58\x2b\xc2\xf4\xc4\x72\xb8\x0f\x79\xe7\x69\xf9\x4c\x41\xb7\x37\xa9\xe6\x11\x29\xee\x7d\x9f\xd6\x3c\xc5\x75\xcc\x1d\x61\x52\xef\xe0\x54\xb0\xe0\x41\x4c\x92\x6d\x02\x4f\x49\xd8\x65\x8b\x0e\x3c\xc1\xb2\x71\xd0\x56\x4d\xf5\x03\x18\x72\x70\xf7\x70\x03\x17\x55\x53\x6d\xe0\x69\xef\xed\x5e\xbd\x03\x87\xa3\xa0\x2d\xff\x0d\xff\x9a\x00\x4c\xc7\x13\x56\xf0\xb8\x47\x48\x4f\x0c\x71\xcf\x39\x38\x18\x4c\xb2\xfb\x4a\xbd\xe9\x5f\x74\x1f\x52\xd6\xd0\x7e\xff\xbe\x10\xff\x9f\x6c\x46\x76\x9f\x0d\xf9\x1e\x63\x3a\xe3\x45\x94\xc9\xd3\xee\x13\xf5\x5c\xc0\xbb\xd7\x9e\x6b\x66\xc7\x35\xba\x6d\x36\x73\x37\x8b\x92\x6e\x7d\x40\x0d\xa5\x0a\xa5\xb2\x92\xe6\xad\x9a\xb7\xe4\x52\x83\x35\xa7\xa7\x03\x1e\xdf\x24\x1e\xf0\xa8\x26\x0e\x79\xc0\x6b\x2f\x68\x13\xcb\x51\x43\x3d\x19\xa9\x83\xef\xce\x8e\x7d\x1e\x79\xf1\x65\xb5\x14\x44\x35\x0a\x7f\x3b\xbe\x71\xc1\xfc\xb2\x1e\xd8\x61\xb9\x41\x59\xe4\xb3\x1d\x4f\x6d\x5e\xe4\x9a\xb1\x7e\xcb\x9c\xcc\x92\x3b\xa2\xdc\x3e\x7c\x14\xce\xa3\x56\xff\x04\x00\x00\xff\xff\x74\xc9\xde\x4f\x8f\x04\x00\x00")

func masterTmpBootstrapconfigsInfraConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsInfraConfigYaml,
		"master/tmp/bootstrapconfigs/infra-config.yaml",
	)
}

func masterTmpBootstrapconfigsInfraConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsInfraConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/infra-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _masterTmpBootstrapconfigsMasterConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\x1b\x37\x10\xbd\xf3\x57\x0c\x94\x6b\xb5\x1f\x72\xd3\x00\x04\x72\x70\xfd\x91\x06\x6d\x62\x57\x76\x7b\x0d\xb8\xe4\xac\xc4\x8a\xcb\x61\x87\xe4\xda\xea\xaf\x2f\xc8\x95\xbf\xd0\x4b\x73\x11\xb0\x9c\x37\x6f\xe6\x3d\xbd\x51\xce\xd1\xc3\xa5\x8d\x6a\x70\x68\x2e\x49\x1f\x90\x25\x8c\xca\x45\x14\x2a\xd8\x3f\x91\xa3\x25\x2f\x61\xee\x85\xf1\xf1\x67\xeb\xcd\xb9\x31\x8c\x31\x4a\xe8\x37\x1f\x9a\xae\xe9\x9a\x5e\xbe\x3f\x2b\xc5\x2d\xea\xcc\xd1\xce\xb8\xc5\x48\x6e\xbe\x20\x3f\x4a\x68\x31\xe9\x96\xd8\xee\xac\x6f\x3d\x19\x6c\xb9\x16\x1b\x4d\x7e\x2c\x4d\x97\x34\x29\xeb\x25\x68\x97\x63\x42\x6e\x1c\x69\xe5\x4a\xe1\xf3\xad\x84\xfe\xc3\xa6\xe9\xcb\x90\x5e\x98\xba\x59\xe1\xb4\x3b\x29\x00\xf0\x11\xf5\x2f\xca\x1b\x87\xfc\x55\x4d\x28\x61\xb5\x12\x36\xa4\xa2\x22\xde\x1d\xbd\xbe\x45\xb6\x64\x24\xac\xce\xba\xb8\x12\x76\x52\x3b\x7c\x69\x1e\x89\x27\x95\x24\x7c\x39\xbf\xbb\xbf\xda\x7e\xbb\xd9\x5e\x7d\xfa\xf6\xc7\xf6\x37\x01\xe0\x54\xc2\x98\x24\x5c\x57\x03\x0e\xd6\x1b\x09\x5f\xc9\x9c\x7a\xc5\x21\x0f\xe8\x30\x9d\xf3\x2e\x4f\xe8\x53\x2c\x64\x45\xd5\xda\xa9\x01\x5d\xfd\x5c\x2f\x0f\x4c\x0e\x9b\x02\x67\x8f\x09\x63\x63\xa9\x9d\x54\x51\xf8\x31\x71\xc6\x8a\xa3\x80\x3e\xee\xed\x98\xd6\xd6\x8f\xac\x3e\xaa\x60\x23\xf2\x8c\x2c\x00\xb4\xa3\x6c\xd6\x81\x69\xb6\x06\x79\xe1\x5d\xa9\x7f\x32\xe3\xea\xb9\xaa\x9f\xf5\xac\x61\x55\x7d\xae\x80\xe5\xb7\x1a\xbc\x12\xcb\xcc\x0b\x67\xd1\xa7\x0b\xf2\x1e\x75\xb2\xe4\x6f\x66\x64\xb6\x06\xeb\xc2\x4a\x6b\x0c\xa5\x98\xd0\xa7\xfb\x63\xc0\x28\x41\x85\xe0\xac\x56\x05\xdb\xce\xde\xbc\x16\x12\x98\x12\x0d\x79\xfc\xe1\x35\xe6\xaf\x48\xbe\xec\xf5\x42\xf2\xbf\x38\x04\xc0\x90\xb9\xf8\xbd\xe9\x3a\x01\xf0\x77\x28\xb1\xea\xba\xd3\xda\xbf\xe6\xe1\xe9\x4f\xab\xa6\x56\x8a\x45\xb5\xf0\x98\x1e\x88\x0f\xb7\x2e\xef\xac\x5f\x12\xc0\x68\xf6\x2a\xb5\x2f\xb6\xd2\x1c\xd7\x31\x0f\x1e\x93\x78\x07\xa7\x86\x85\x0f\x62\xe2\xac\x13\x58\x9f\x98\x4c\xd6\x68\xc0\x7a\x58\x62\x0a\x7d\xd3\x35\x3f\x81\xf2\x06\x6e\xee\xae\xe0\xac\xe9\x9a\x0d\x3c\xec\xad\xde\x8b\x77\x60\x30\x30\xea\x12\x12\xf8\xcf\x06\xa0\x06\x9a\xb1\x81\xfb\x3d\x42\x7a\x20\x88\x7b\xca\xce\xc0\xa4\x92\xde\x37\xe2\xcd\xfc\xe2\xfb\x94\xb2\x84\xfe\xc7\xf7\x45\xf8\x77\xaa\x09\x64\xbe\x28\x6f\x47\x8c\xe9\x89\xaf\x24\xc7\xfa\xdd\x67\x3f\x52\x21\x1f\x5e\x1f\x6a\x57\xcf\xb4\x93\x7d\xb7\xa9\xd3\x34\x72\xba\xb6\x0e\x25\x2c\x79\x6b\x34\xa7\x9a\xaa\x9a\x92\x73\x09\x5a\x9d\x9e\x0e\x78\x7c\x03\x3c\xe0\x51\xcc\xe4\xf2\x84\x97\x96\x51\x27\xe2\xa3\x84\x76\x56\xdc\x3a\x3b\x3c\x9d\xf9\xf3\xca\xcb\x31\x37\x4b\x43\x14\x81\xe9\xf1\xf8\xe6\x74\xea\xcb\x7a\x22\x83\xe5\x0b\x4a\x90\x9f\x6e\xf8\x34\xe6\xc5\xae\xca\xf5\x7b\xa6\xa4\x16\x6c\x40\xbe\xbe\xfb\xc4\x94\x83\x14\xff\x06\x00\x00\xff\xff\x9a\x3c\x85\xf3\xc4\x04\x00\x00")

func masterTmpBootstrapconfigsMasterConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_masterTmpBootstrapconfigsMasterConfigYaml,
		"master/tmp/bootstrapconfigs/master-config.yaml",
	)
}

func masterTmpBootstrapconfigsMasterConfigYaml() (*asset, error) {
	bytes, err := masterTmpBootstrapconfigsMasterConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "master/tmp/bootstrapconfigs/master-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcAzureAzureConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x8a\x83\x30\x10\x86\xdf\xf7\x14\x39\x81\x07\xd8\xb7\xa0\xb0\x2c\x2c\xcb\xb2\x7a\x81\x31\x4e\xcb\x40\x4c\xec\x38\x29\x58\xeb\xdd\x4b\xab\x0f\x51\xd3\x42\x9f\xbf\xff\xfb\x87\xf9\x05\x1d\x38\xf9\x6e\x3e\xd5\x38\xaa\x4c\x5f\x02\x63\xee\xdd\x81\x8e\x59\x35\x93\x42\x5d\xd5\x29\x78\x41\x35\x4d\x1f\x7d\xa8\x7b\xc3\xd4\x09\x79\x97\x72\xca\x98\xaf\x4c\x80\x26\xb7\x84\xe9\x53\x5a\x17\x0b\x4c\x3b\x25\x1a\x46\x79\xe1\xcd\x81\x8d\x5b\xbd\xf5\x1a\x63\xef\x03\x1b\xfc\x62\x1f\xba\xbd\xf2\x1f\xe3\xd8\xb3\xde\xc0\xfd\xdd\xbd\xf2\xb3\x90\xd5\x80\x68\x02\x93\x0c\x8f\x9a\x5f\x68\x31\xb1\xe1\x36\x12\xfb\x1d\x53\x0b\x3c\xe8\x33\x90\x85\x9a\x2c\xc9\x50\xa2\xa4\x8b\xfe\x9e\x66\xe3\xc6\x5b\x00\x00\x00\xff\xff\x34\x7d\xff\xaa\x01\x02\x00\x00")

func nodeEtcAzureAzureConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcAzureAzureConf,
		"node/etc/azure/azure.conf",
	)
}

func nodeEtcAzureAzureConf() (*asset, error) {
	bytes, err := nodeEtcAzureAzureConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/azure/azure.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeNodeDnsmasqConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\x4b\x2d\xb2\xd5\xcf\xcc\xd3\x4d\x4c\x49\x29\xd2\x4b\x2c\x2a\x48\xd4\x37\x34\x32\xd7\x33\xd0\x33\xd0\x33\xe4\x82\x49\x27\xe7\x94\x16\x97\xa4\x16\xe9\xe5\xe4\x27\x27\xe6\x20\xc9\x03\x02\x00\x00\xff\xff\x87\xc4\xbf\xc2\x3f\x00\x00\x00")

func nodeEtcOriginNodeNodeDnsmasqConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeNodeDnsmasqConf,
		"node/etc/origin/node/node-dnsmasq.conf",
	)
}

func nodeEtcOriginNodeNodeDnsmasqConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeNodeDnsmasqConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/node-dnsmasq.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeEtcOriginNodeResolvConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4b\xcc\x4d\x2d\x4e\x2d\x2a\x4b\x2d\x52\x30\x34\xb3\xd0\x33\x33\xd6\x33\x34\xb2\xd4\x33\x34\xe3\x02\x04\x00\x00\xff\xff\x77\xaa\x94\x8c\x19\x00\x00\x00")

func nodeEtcOriginNodeResolvConfBytes() ([]byte, error) {
	return bindataRead(
		_nodeEtcOriginNodeResolvConf,
		"node/etc/origin/node/resolv.conf",
	)
}

func nodeEtcOriginNodeResolvConf() (*asset, error) {
	bytes, err := nodeEtcOriginNodeResolvConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node/etc/origin/node/resolv.conf", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"master/etc/etcd/etcd.conf":                           masterEtcEtcdEtcdConf,
	"master/etc/origin/master/htpasswd":                   masterEtcOriginMasterHtpasswd,
	"master/etc/origin/master/master-config.yaml":         masterEtcOriginMasterMasterConfigYaml,
	"master/etc/origin/master/scheduler.json":             masterEtcOriginMasterSchedulerJson,
	"master/etc/origin/master/session-secrets.yaml":       masterEtcOriginMasterSessionSecretsYaml,
	"master/tmp/ansible/ansible.sh":                       masterTmpAnsibleAnsibleSh,
	"master/tmp/ansible/azure-local-master-inventory.yml": masterTmpAnsibleAzureLocalMasterInventoryYml,
	"master/tmp/ansible/azure-ocp-deploy.yml":             masterTmpAnsibleAzureOcpDeployYml,
	"master/tmp/bootstrapconfigs/compute-config.yaml":     masterTmpBootstrapconfigsComputeConfigYaml,
	"master/tmp/bootstrapconfigs/infra-config.yaml":       masterTmpBootstrapconfigsInfraConfigYaml,
	"master/tmp/bootstrapconfigs/master-config.yaml":      masterTmpBootstrapconfigsMasterConfigYaml,
	"node/etc/azure/azure.conf":                           nodeEtcAzureAzureConf,
	"node/etc/origin/node/node-dnsmasq.conf":              nodeEtcOriginNodeNodeDnsmasqConf,
	"node/etc/origin/node/resolv.conf":                    nodeEtcOriginNodeResolvConf,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"master": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"etcd": {nil, map[string]*bintree{
				"etcd.conf": {masterEtcEtcdEtcdConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"master": {nil, map[string]*bintree{
					"htpasswd":             {masterEtcOriginMasterHtpasswd, map[string]*bintree{}},
					"master-config.yaml":   {masterEtcOriginMasterMasterConfigYaml, map[string]*bintree{}},
					"scheduler.json":       {masterEtcOriginMasterSchedulerJson, map[string]*bintree{}},
					"session-secrets.yaml": {masterEtcOriginMasterSessionSecretsYaml, map[string]*bintree{}},
				}},
			}},
		}},
		"tmp": {nil, map[string]*bintree{
			"ansible": {nil, map[string]*bintree{
				"ansible.sh":                       {masterTmpAnsibleAnsibleSh, map[string]*bintree{}},
				"azure-local-master-inventory.yml": {masterTmpAnsibleAzureLocalMasterInventoryYml, map[string]*bintree{}},
				"azure-ocp-deploy.yml":             {masterTmpAnsibleAzureOcpDeployYml, map[string]*bintree{}},
			}},
			"bootstrapconfigs": {nil, map[string]*bintree{
				"compute-config.yaml": {masterTmpBootstrapconfigsComputeConfigYaml, map[string]*bintree{}},
				"infra-config.yaml":   {masterTmpBootstrapconfigsInfraConfigYaml, map[string]*bintree{}},
				"master-config.yaml":  {masterTmpBootstrapconfigsMasterConfigYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"node": {nil, map[string]*bintree{
		"etc": {nil, map[string]*bintree{
			"azure": {nil, map[string]*bintree{
				"azure.conf": {nodeEtcAzureAzureConf, map[string]*bintree{}},
			}},
			"origin": {nil, map[string]*bintree{
				"node": {nil, map[string]*bintree{
					"node-dnsmasq.conf": {nodeEtcOriginNodeNodeDnsmasqConf, map[string]*bintree{}},
					"resolv.conf":       {nodeEtcOriginNodeResolvConf, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

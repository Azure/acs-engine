// Code generated by go-bindata.
// sources:
// ../../translations/default/LC_MESSAGES/acsengine.mo
// ../../translations/default/LC_MESSAGES/acsengine.po
// ../../translations/en_US/LC_MESSAGES/acsengine.mo
// ../../translations/en_US/LC_MESSAGES/acsengine.po
// ../../translations/zh_CN/LC_MESSAGES/acsengine.mo
// ../../translations/zh_CN/LC_MESSAGES/acsengine.po
// DO NOT EDIT!

package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _translationsDefaultLc_messagesAcsengineMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xcf\x6b\x24\xc5\x1b\xc6\x9f\x64\xe6\x9b\x4c\xe6\xeb\xcf\x55\x10\x51\xf1\xdd\xc3\xb8\x2b\xbb\x3d\xf6\x8c\x98\xdd\xed\x35\x8b\x6b\x4c\x34\x9a\x90\x21\x4e\x82\xe0\x41\x6a\xba\xdf\xe9\xa9\x6c\x4f\xd5\x58\x55\x3d\x9b\x59\xf0\x22\xde\x14\x3c\x79\xf6\x26\x08\x1e\x05\xaf\xeb\x51\xf0\xea\xc1\x8b\x07\x41\xff\x0c\x91\xee\xea\xd9\x09\x12\x51\x3c\xa7\x2e\xd5\x5d\xf5\xbc\x4f\x7d\xea\xa9\xa2\x7e\xb9\x50\xff\x02\x00\x9e\x00\xf0\x2c\x80\x6f\x01\x3c\x07\x60\x77\x09\x65\xbb\xbf\x04\x10\x80\xef\x97\x80\x2b\x00\x7e\x5d\x02\xb6\x01\x3c\xb2\x0c\xec\x00\x38\x5c\x06\x6e\x00\xf8\x72\x19\xd8\x00\xf0\xf3\x32\xb0\x09\xe0\xa9\x1a\x70\x11\xc0\xfb\x35\xe0\x32\x80\x8f\x6a\x40\x0b\xc0\x57\x35\xe0\x69\x00\x3f\x56\xfd\xef\x35\xef\x8b\x3a\x70\x0b\xc0\xd5\xba\x5f\xef\x4e\x1d\x78\x1e\xc0\x67\x75\xcf\xf5\x4d\x1d\x78\x06\xc0\x0f\x75\xe0\x93\x25\xe0\xb7\x4a\x77\xbc\xe2\xeb\x3f\x5d\xf1\x5c\xdf\xad\x78\xae\x3f\x56\x3c\xd7\x5b\xab\x9e\xeb\xe3\x55\xcf\x75\x7f\xd5\x73\xd5\x1b\x9e\xeb\x85\x86\xe7\xda\x6f\x78\x9e\xbc\xea\x3f\x6f\x78\xdf\xaf\x1b\x9e\xeb\xa7\x86\x5f\xef\xc9\x35\xcf\xf5\xca\x9a\xe7\x3a\x5c\xf3\x5c\x66\x0d\x28\x22\x7b\x08\xc0\xb2\xdf\x0e\x56\x00\xac\x02\x58\xf3\x51\xe2\x31\x2c\x5a\xb3\xea\x2f\x00\x78\x14\x40\x03\xc0\xe3\x45\xae\x00\xfe\x57\xcd\xd5\xaa\x73\x29\xda\xff\x01\x3c\x8c\x33\xda\x96\x31\xda\x90\x61\x91\x48\x95\xd2\x50\x66\x4c\x2d\x7b\x95\xca\xe1\x88\x5a\xb6\x12\xdc\x1d\x15\x33\x1f\xe6\x6c\x66\x85\xee\xf6\xc1\x1e\x0d\xcb\x3a\xab\x73\x13\xb3\x8d\xa8\x75\x65\x8a\x6d\x9d\xab\x84\xba\x8b\x61\xba\x2b\xdd\x88\xdc\x6c\x52\xb8\x92\x54\xe4\x46\x4c\x8e\xc7\x93\x4c\x38\x6e\x53\x7f\xc4\x86\xc9\x8e\x74\x9e\x25\xa4\x55\x36\xa3\x01\x53\xa7\xb2\x51\xfa\xbf\xf9\x8c\xc4\x94\x69\xc0\xac\xa8\x83\xbe\x76\x22\xa3\x58\xe7\xca\x91\x1e\xd2\x58\x58\xc7\x86\x8e\xf6\x0a\xde\x84\xf8\x24\x66\x4e\xb8\xf8\x98\x70\xec\x38\xf1\xca\x62\x0e\x87\x93\xd4\x88\x84\xc9\x69\x7a\x27\x1f\xb0\x51\xec\xd8\x52\xa7\xbd\xde\xee\x92\xb4\xa4\xb4\x23\x9b\x4f\x26\xda\x14\x65\x43\xa3\xc7\x34\x65\x63\xa5\x56\x65\x68\x67\x57\x9f\x52\xfc\x0b\x0f\x2e\x83\x8f\x0d\x0b\x57\x44\x9e\x48\xc3\xb1\xd3\x66\x46\x97\x5a\xf6\xd2\x29\x05\x9f\x70\x9c\x97\x92\x79\x20\xe5\xd1\x54\x47\x19\x51\x6b\x5a\x09\x53\x56\x6c\xbc\x59\x3e\xe7\xab\x2a\x4e\xd9\x4d\x84\xb1\xa7\xae\xc2\xa9\xfa\xbf\x5c\x92\xb2\x66\x28\x64\xc6\x49\xb1\x4f\xa9\xa4\x93\x22\x93\xf7\x16\xae\xf3\x15\xab\x9b\x24\xd5\x54\x64\x32\x99\x6f\xb2\x48\xa1\x00\x8d\xb5\x9a\x8f\x0c\x44\x7c\xc7\x07\x91\xcf\xc7\x38\x21\x3d\x38\xe6\xd8\x41\x9b\x78\xc4\xd6\x95\x7e\x65\x06\x45\x86\xb9\x7a\x90\x20\x16\xdb\xf7\x80\x94\x68\xf6\x29\xf3\x89\xb4\x0e\xb9\x32\x1c\xeb\x54\xc9\x7b\x9c\xd0\xed\xde\xce\x51\xb5\x6a\xe1\x85\x99\x18\x67\x7f\x57\xd8\x33\xba\x20\x08\x76\x92\xe0\x68\x7e\x40\x22\xb6\xac\x52\xa9\xb8\x79\xc0\xc5\xfa\xc1\x9e\x4d\x65\x12\xbc\x9e\xa7\x36\xe8\xeb\x88\x9a\xbd\xfd\x7e\xb0\x59\x1e\x9e\x56\xc1\x1b\x65\xc6\xdd\xb0\x73\x2d\x08\xd7\x83\xb0\x43\xdd\x97\xa3\xce\xfa\x95\x30\x0c\xc3\x66\x6f\x3f\x38\xe0\xa9\xb4\x67\xea\x3a\xeb\x51\xe7\x46\x10\x5e\x0b\xc3\xe6\xae\xb0\x2e\xe8\x1b\xa1\x6c\xe6\x23\x7d\x5b\x0a\x95\x3a\x29\x14\xed\x4a\x7a\xf5\x78\xfe\x97\xc9\xd7\x46\xda\x8d\x85\xcc\xda\xb1\x1e\xdf\x6a\xee\x0a\x95\xe6\x22\xe5\xa0\xcf\x62\x1c\xd1\x96\x4a\x33\x69\x47\x0f\x86\x23\x62\xf5\xc1\xe1\xbb\xcd\xbd\x9d\xbd\xad\xc5\xf6\x3a\xed\xb0\xb9\xa9\x95\x63\xe5\x82\xfe\x6c\xc2\x11\x39\x3e\x71\x2f\x4d\x32\x21\xd5\x4d\x8a\x47\xc2\x58\x76\x1b\x87\xfd\xed\xe0\xfa\x42\x57\xb0\x0d\xd9\x04\x5b\x2a\xd6\xc5\x4d\x89\xe8\xfa\x40\xba\x66\x2f\xcb\x8d\xc8\x82\x6d\x6d\xc6\x36\x22\x35\x29\x7f\xed\x46\xf7\x26\xf9\xcf\x8d\xcb\x8a\x2e\x6e\x50\xe7\xc5\x9b\xcd\xf7\x82\x37\x17\x57\xa6\xa7\x39\x91\x8e\xba\xed\xb0\xdd\x6d\x9e\x3f\x54\xe7\x0f\xd5\xf9\x43\xf5\x0f\x0f\xd5\x9f\x01\x00\x00\xff\xff\x4b\x51\xd4\xd3\x8e\x09\x00\x00")

func translationsDefaultLc_messagesAcsengineMoBytes() ([]byte, error) {
	return bindataRead(
		_translationsDefaultLc_messagesAcsengineMo,
		"translations/default/LC_MESSAGES/acsengine.mo",
	)
}

func translationsDefaultLc_messagesAcsengineMo() (*asset, error) {
	bytes, err := translationsDefaultLc_messagesAcsengineMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/default/LC_MESSAGES/acsengine.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsDefaultLc_messagesAcsenginePo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x6d\x53\xe3\x36\x10\xfe\x9e\x5f\xb1\x25\xc3\xdc\xdd\x1c\x0e\xb6\x03\x06\x4c\xe9\xf4\x4a\xa1\x43\x7b\x4c\x19\x1a\x6e\xfa\xa1\x33\x1d\x45\xde\xd8\x3a\x6c\xc9\xd5\x4b\x8e\xdc\xaf\xef\x48\xb6\x63\x5e\x1c\x27\x17\xee\x03\x83\x23\xad\x76\x9f\x67\x5f\x1e\x69\x08\x17\x3c\xcd\x99\xca\x40\x4b\xc2\x55\x4e\x34\x13\x5c\xc1\x4c\x48\x20\x54\x21\x4f\x19\x47\x28\x09\xbd\x27\x29\x8e\x06\x43\x38\x17\xe5\x42\xb2\x34\xd3\xf0\xf6\xfc\x1d\x84\x7e\x70\x34\x18\xc2\x24\x63\x0a\x66\x2c\x47\x60\x0a\x12\xa6\xb4\x64\x53\xa3\x31\x01\xc3\x13\x94\xa0\x33\x04\x45\x0a\x84\x9c\x51\xe4\x0a\x81\x28\xb7\xd6\x19\xe0\x77\x46\x78\xaa\x19\xe1\xf0\x91\xc1\x8f\x9f\x9b\x5f\x39\xfb\x39\x13\xba\x20\x2c\x1f\x51\x51\xfc\xb4\xe7\x42\x8f\x06\xc3\x41\xa1\x52\x96\xc0\xce\x8e\xfd\x50\x5a\xda\xaf\x9d\x1b\x29\x3e\x23\xd5\xde\x55\xe2\x7d\x42\xa9\x98\xe0\x71\x1b\xec\x1f\xbe\x33\xd8\xb9\xc5\x52\x48\xed\x5d\xdb\xc3\xde\x2f\x26\x55\xde\x44\xc4\xe0\xb6\x6e\xfe\x9c\x78\xe7\x12\x5d\x22\xbc\x5f\x89\xc6\xd8\xc5\xf2\xfc\xc8\xf3\x03\x08\xc7\x71\x10\xbd\xf7\x7d\xdf\xaf\x8d\xbd\x5b\x9c\x33\xd5\x69\x1b\x44\x71\x70\xe2\xf9\x47\xb5\xed\x47\xa2\xb4\x37\xa9\xb3\x2c\x64\xbc\x21\xd5\xfa\x2c\x4f\x0d\x49\xd1\x9b\x20\x29\xe2\xa6\x66\x4f\xb6\x62\x40\xfe\xef\xdd\x5f\x6e\xed\xfa\xea\xfa\xa2\xa5\x1e\x8c\x2a\x00\xe7\x82\x6b\xe4\xda\x9b\x2c\x4a\x8c\x41\xe3\x83\xde\x2f\x73\xc2\xf8\x29\xd0\x8c\x48\x85\xfa\xec\x6e\x72\xe9\x1d\x3f\xb5\xb5\x78\x67\x28\xbd\x0b\x4e\x45\xc2\x78\x1a\xc3\xf1\x94\xe9\x8a\x7c\x6e\x24\xc9\xbd\x4b\x21\x0b\x15\x03\x2f\xdd\x4f\x75\x16\x9e\x42\xf5\x79\xf6\x96\xc3\x0f\x67\x10\xbc\x3b\x75\xe6\x7f\x7b\xbf\x21\x47\x59\x71\xbf\x11\x98\x30\x0d\xe1\xc8\x1f\x85\x76\x77\x30\x8c\xa1\xbc\x4f\xf7\x97\x65\xda\xaf\xfe\x8d\x52\x11\x87\x61\x34\x18\xee\x01\xf5\x66\x42\x16\x44\x37\x25\xbf\x90\x52\x48\x90\x48\x2c\xac\xaa\xfd\x76\xd5\x1e\xb8\xe5\x18\x76\x55\xdb\x12\xeb\x2d\x9b\xf0\xa2\xb4\x00\xed\x08\xec\xdf\x9b\x29\x4a\x8e\x1a\x95\x29\x53\x49\x12\xdc\xaf\xff\xd3\xdc\x28\x8d\xd2\x22\x8b\x8e\x57\x03\xfb\x92\xd9\x38\xff\x19\x94\x0b\x1b\xf5\xc3\xed\xb5\x9b\x2a\x89\x4a\x18\x49\x51\xc5\xb0\xfb\x7e\xfe\x1c\xe3\x86\x87\x5e\x66\xcb\x4d\xaf\x85\x61\x61\x9d\x1c\x75\xc1\xba\x14\x86\x27\x10\xb6\xce\xe0\x0b\xd3\x19\xe8\x45\x69\xd3\x01\x8c\xbb\xa1\xd4\x58\x94\x39\xd1\x38\x82\x49\x86\x12\x41\x65\xc2\xe4\x09\x08\x9e\x2f\x60\x8a\x10\xb4\x88\xbf\x97\xbf\x35\x64\x82\xd0\x5f\xcd\x86\x8b\xed\xc2\x67\x64\x8e\x30\x45\xe4\x2f\x09\x7d\x17\x97\x1b\xf5\xd3\x3c\x88\xc2\xfa\xdb\x75\x53\xe0\x07\x5d\x4c\x27\x42\x93\x1c\xa8\x30\x5c\x83\x98\x41\x41\x6c\xf7\xc1\xa7\x6b\xdb\x0c\x09\xe0\x03\x45\x4c\xd0\x7e\x94\x48\xad\xe8\x3a\x4b\xbb\xd7\x32\x7b\x85\x8b\xad\x98\x8c\x3b\x4b\x76\x57\x59\x80\x16\xf0\xc7\xd2\x05\x04\xa3\x68\x14\xda\x8b\x83\x0b\x0d\xca\x94\x56\x98\x31\x81\x99\x14\x05\xcc\x1b\x09\x7b\x3c\xcd\xaf\x74\xb3\xe5\xa8\x1f\x8f\x37\xa7\xf4\x28\xde\xeb\x89\x7d\xa3\xb3\x97\xd3\x24\x8c\x2e\x8d\xae\x1a\xec\xa4\x8b\x04\x3a\xe9\xa1\xee\xce\xe3\x29\x24\x4c\x22\xd5\x42\x2e\xe0\xcd\xae\x7a\xf3\x14\xe2\x06\xa6\x7d\x4a\x1e\xf8\xdd\x9d\x51\xb9\xc5\x07\xa4\xc6\xf9\x6d\x46\xcc\x89\x5f\xad\xd7\x31\xec\xce\x9f\x03\xd9\xe4\xc4\x56\x0d\x1c\x45\xdb\x4d\x70\x14\x6c\x75\x2e\x3c\x0c\x57\xa7\x25\xad\x6e\x4d\xcb\xd2\x34\x1d\x52\xb3\xed\x2a\xce\x5a\xf3\xfe\x02\x85\x87\xab\x91\x94\x44\xaa\x47\x37\x68\x57\x45\x3a\x4d\x96\x11\x4b\x66\xff\x72\xb1\xe4\x3d\x5e\xae\xd7\x58\x9f\x6e\xf7\x34\xcb\xb3\xdb\xbc\x2b\x13\x9d\x26\xdb\xd5\xe7\xa0\xf3\x05\x32\x23\x2c\xc7\xc4\xce\x2b\xe3\x4c\x33\x92\xb3\xaf\x6d\xb2\x9b\x42\x3c\x7f\x8c\x7c\xd3\xa1\x95\x99\x0b\xc6\x51\x6f\xea\x8e\x3a\x53\xc7\xf8\x9c\xe4\x2c\x69\x14\xc3\x4a\x8a\x9d\x17\x2a\x78\xb3\x32\x25\xf4\xbe\x52\x15\xd3\xac\x61\x02\x62\x6a\xdf\xd3\x2d\x87\xd7\xfa\xe9\x6b\xc1\xb1\xdf\xf9\x7a\x11\x92\x66\xa8\xb4\xcb\x8d\x53\x1b\x2b\x86\x86\x2f\xa5\xb0\x05\xb7\xde\xb2\x77\x02\x8e\x0e\xba\xc2\xb7\xfa\x52\x35\x13\x24\x02\x2b\x31\xc6\x07\xa6\x1e\xa5\x66\xad\xe1\xca\x92\x1e\x1f\xf4\x56\xf4\xb0\xf3\x71\x60\xb8\x44\x2a\x52\xce\xbe\x62\x02\x1f\x6e\xae\xea\x47\xbf\xe3\xdd\x82\xea\xb7\xea\x17\x84\xa0\xf3\xce\x58\x90\x22\x5f\x9b\x8b\x5e\xa3\xff\x03\x00\x00\xff\xff\x21\x6c\x1f\x71\x7a\x0e\x00\x00")

func translationsDefaultLc_messagesAcsenginePoBytes() ([]byte, error) {
	return bindataRead(
		_translationsDefaultLc_messagesAcsenginePo,
		"translations/default/LC_MESSAGES/acsengine.po",
	)
}

func translationsDefaultLc_messagesAcsenginePo() (*asset, error) {
	bytes, err := translationsDefaultLc_messagesAcsenginePoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/default/LC_MESSAGES/acsengine.po", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsEn_usLc_messagesAcsengineMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xcf\x6b\x24\xc5\x1b\xc6\x9f\x64\xe6\x9b\x4c\xe6\xeb\xcf\x55\x10\x51\xf1\xdd\xc3\xb8\x2b\xbb\x3d\xf6\x8c\x98\xdd\xed\x35\x8b\x6b\x4c\x34\x9a\x90\x21\x4e\x82\xe0\x41\x6a\xba\xdf\xe9\xa9\x6c\x4f\xd5\x58\x55\x3d\x9b\x59\xf0\x22\xde\x14\x3c\x79\xf6\x26\x08\x1e\x05\xaf\xeb\x51\xf0\xea\xc1\x8b\x07\x41\xff\x0c\x91\xee\xea\xd9\x09\x12\x51\x3c\xa7\x2e\xd5\x5d\xf5\xbc\x4f\x7d\xea\xa9\xa2\x7e\xb9\x50\xff\x02\x00\x9e\x00\xf0\x2c\x80\x6f\x01\x3c\x07\x60\x77\x09\x65\xbb\xbf\x04\x10\x80\xef\x97\x80\x2b\x00\x7e\x5d\x02\xb6\x01\x3c\xb2\x0c\xec\x00\x38\x5c\x06\x6e\x00\xf8\x72\x19\xd8\x00\xf0\xf3\x32\xb0\x09\xe0\xa9\x1a\x70\x11\xc0\xfb\x35\xe0\x32\x80\x8f\x6a\x40\x0b\xc0\x57\x35\xe0\x69\x00\x3f\x56\xfd\xef\x35\xef\x8b\x3a\x70\x0b\xc0\xd5\xba\x5f\xef\x4e\x1d\x78\x1e\xc0\x67\x75\xcf\xf5\x4d\x1d\x78\x06\xc0\x0f\x75\xe0\x93\x25\xe0\xb7\x4a\x77\xbc\xe2\xeb\x3f\x5d\xf1\x5c\xdf\xad\x78\xae\x3f\x56\x3c\xd7\x5b\xab\x9e\xeb\xe3\x55\xcf\x75\x7f\xd5\x73\xd5\x1b\x9e\xeb\x85\x86\xe7\xda\x6f\x78\x9e\xbc\xea\x3f\x6f\x78\xdf\xaf\x1b\x9e\xeb\xa7\x86\x5f\xef\xc9\x35\xcf\xf5\xca\x9a\xe7\x3a\x5c\xf3\x5c\x66\x0d\x28\x22\x7b\x08\xc0\xb2\xdf\x0e\x56\x00\xac\x02\x58\xf3\x51\xe2\x31\x2c\x5a\xb3\xea\x2f\x00\x78\x14\x40\x03\xc0\xe3\x45\xae\x00\xfe\x57\xcd\xd5\xaa\x73\x29\xda\xff\x01\x3c\x8c\x33\xda\x96\x31\xda\x90\x61\x91\x48\x95\xd2\x50\x66\x4c\x2d\x7b\x95\xca\xe1\x88\x5a\xb6\x12\xdc\x1d\x15\x33\x1f\xe6\x6c\x66\x85\xee\xf6\xc1\x1e\x0d\xcb\x3a\xab\x73\x13\xb3\x8d\xa8\x75\x65\x8a\x6d\x9d\xab\x84\xba\x8b\x61\xba\x2b\xdd\x88\xdc\x6c\x52\xb8\x92\x54\xe4\x46\x4c\x8e\xc7\x93\x4c\x38\x6e\x53\x7f\xc4\x86\xc9\x8e\x74\x9e\x25\xa4\x55\x36\xa3\x01\x53\xa7\xb2\x51\xfa\xbf\xf9\x8c\xc4\x94\x69\xc0\xac\xa8\x83\xbe\x76\x22\xa3\x58\xe7\xca\x91\x1e\xd2\x58\x58\xc7\x86\x8e\xf6\x0a\xde\x84\xf8\x24\x66\x4e\xb8\xf8\x98\x70\xec\x38\xf1\xca\x62\x0e\x87\x93\xd4\x88\x84\xc9\x69\x7a\x27\x1f\xb0\x51\xec\xd8\x52\xa7\xbd\xde\xee\x92\xb4\xa4\xb4\x23\x9b\x4f\x26\xda\x14\x65\x43\xa3\xc7\x34\x65\x63\xa5\x56\x65\x68\x67\x57\x9f\x52\xfc\x0b\x0f\x2e\x83\x8f\x0d\x0b\x57\x44\x9e\x48\xc3\xb1\xd3\x66\x46\x97\x5a\xf6\xd2\x29\x05\x9f\x70\x9c\x97\x92\x79\x20\xe5\xd1\x54\x47\x19\x51\x6b\x5a\x09\x53\x56\x6c\xbc\x59\x3e\xe7\xab\x2a\x4e\xd9\x4d\x84\xb1\xa7\xae\xc2\xa9\xfa\xbf\x5c\x92\xb2\x66\x28\x64\xc6\x49\xb1\x4f\xa9\xa4\x93\x22\x93\xf7\x16\xae\xf3\x15\xab\x9b\x24\xd5\x54\x64\x32\x99\x6f\xb2\x48\xa1\x00\x8d\xb5\x9a\x8f\x0c\x44\x7c\xc7\x07\x91\xcf\xc7\x38\x21\x3d\x38\xe6\xd8\x41\x9b\x78\xc4\xd6\x95\x7e\x65\x06\x45\x86\xb9\x7a\x90\x20\x16\xdb\xf7\x80\x94\x68\xf6\x29\xf3\x89\xb4\x0e\xb9\x32\x1c\xeb\x54\xc9\x7b\x9c\xd0\xed\xde\xce\x51\xb5\x6a\xe1\x85\x99\x18\x67\x7f\x57\xd8\x33\xba\x20\x08\x76\x92\xe0\x68\x7e\x40\x22\xb6\xac\x52\xa9\xb8\x79\xc0\xc5\xfa\xc1\x9e\x4d\x65\x12\xbc\x9e\xa7\x36\xe8\xeb\x88\x9a\xbd\xfd\x7e\xb0\x59\x1e\x9e\x56\xc1\x1b\x65\xc6\xdd\xb0\x73\x2d\x08\xd7\x83\xb0\x43\xdd\x97\xa3\xce\xfa\x95\x30\x0c\xc3\x66\x6f\x3f\x38\xe0\xa9\xb4\x67\xea\x3a\xeb\x51\xe7\x46\x10\x5e\x0b\xc3\xe6\xae\xb0\x2e\xe8\x1b\xa1\x6c\xe6\x23\x7d\x5b\x0a\x95\x3a\x29\x14\xed\x4a\x7a\xf5\x78\xfe\x97\xc9\xd7\x46\xda\x8d\x85\xcc\xda\xb1\x1e\xdf\x6a\xee\x0a\x95\xe6\x22\xe5\xa0\xcf\x62\x1c\xd1\x96\x4a\x33\x69\x47\x0f\x86\x23\x62\xf5\xc1\xe1\xbb\xcd\xbd\x9d\xbd\xad\xc5\xf6\x3a\xed\xb0\xb9\xa9\x95\x63\xe5\x82\xfe\x6c\xc2\x11\x39\x3e\x71\x2f\x4d\x32\x21\xd5\x4d\x8a\x47\xc2\x58\x76\x1b\x87\xfd\xed\xe0\xfa\x42\x57\xb0\x0d\xd9\x04\x5b\x2a\xd6\xc5\x4d\x89\xe8\xfa\x40\xba\x66\x2f\xcb\x8d\xc8\x82\x6d\x6d\xc6\x36\x22\x35\x29\x7f\xed\x46\xf7\x26\xf9\xcf\x8d\xcb\x8a\x2e\x6e\x50\xe7\xc5\x9b\xcd\xf7\x82\x37\x17\x57\xa6\xa7\x39\x91\x8e\xba\xed\xb0\xdd\x6d\x9e\x3f\x54\xe7\x0f\xd5\xf9\x43\xf5\x0f\x0f\xd5\x9f\x01\x00\x00\xff\xff\x4b\x51\xd4\xd3\x8e\x09\x00\x00")

func translationsEn_usLc_messagesAcsengineMoBytes() ([]byte, error) {
	return bindataRead(
		_translationsEn_usLc_messagesAcsengineMo,
		"translations/en_US/LC_MESSAGES/acsengine.mo",
	)
}

func translationsEn_usLc_messagesAcsengineMo() (*asset, error) {
	bytes, err := translationsEn_usLc_messagesAcsengineMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/en_US/LC_MESSAGES/acsengine.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsEn_usLc_messagesAcsenginePo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x6d\x53\xe3\x36\x10\xfe\x9e\x5f\xb1\x25\xc3\xdc\xdd\x1c\x0e\xb6\x03\x06\x4c\xe9\xf4\x4a\xa1\x43\x7b\x4c\x19\x1a\x6e\xfa\xa1\x33\x1d\x45\xde\xd8\x3a\x6c\xc9\xd5\x4b\x8e\xdc\xaf\xef\x48\xb6\x63\x5e\x1c\x27\x17\xee\x03\x83\x23\xad\x76\x9f\x67\x5f\x1e\x69\x08\x17\x3c\xcd\x99\xca\x40\x4b\xc2\x55\x4e\x34\x13\x5c\xc1\x4c\x48\x20\x54\x21\x4f\x19\x47\x28\x09\xbd\x27\x29\x8e\x06\x43\x38\x17\xe5\x42\xb2\x34\xd3\xf0\xf6\xfc\x1d\x84\x7e\x70\x34\x18\xc2\x24\x63\x0a\x66\x2c\x47\x60\x0a\x12\xa6\xb4\x64\x53\xa3\x31\x01\xc3\x13\x94\xa0\x33\x04\x45\x0a\x84\x9c\x51\xe4\x0a\x81\x28\xb7\xd6\x19\xe0\x77\x46\x78\xaa\x19\xe1\xf0\x91\xc1\x8f\x9f\x9b\x5f\x39\xfb\x39\x13\xba\x20\x2c\x1f\x51\x51\xfc\xb4\xe7\x42\x8f\x06\xc3\x41\xa1\x52\x96\xc0\xce\x8e\xfd\x50\x5a\xda\xaf\x9d\x1b\x29\x3e\x23\xd5\xde\x55\xe2\x7d\x42\xa9\x98\xe0\x71\x1b\xec\x1f\xbe\x33\xd8\xb9\xc5\x52\x48\xed\x5d\xdb\xc3\xde\x2f\x26\x55\xde\x44\xc4\xe0\xb6\x6e\xfe\x9c\x78\xe7\x12\x5d\x22\xbc\x5f\x89\xc6\xd8\xc5\xf2\xfc\xc8\xf3\x03\x08\xc7\x71\x10\xbd\xf7\x7d\xdf\xaf\x8d\xbd\x5b\x9c\x33\xd5\x69\x1b\x44\x71\x70\xe2\xf9\x47\xb5\xed\x47\xa2\xb4\x37\xa9\xb3\x2c\x64\xbc\x21\xd5\xfa\x2c\x4f\x0d\x49\xd1\x9b\x20\x29\xe2\xa6\x66\x4f\xb6\x62\x40\xfe\xef\xdd\x5f\x6e\xed\xfa\xea\xfa\xa2\xa5\x1e\x8c\x2a\x00\xe7\x82\x6b\xe4\xda\x9b\x2c\x4a\x8c\x41\xe3\x83\xde\x2f\x73\xc2\xf8\x29\xd0\x8c\x48\x85\xfa\xec\x6e\x72\xe9\x1d\x3f\xb5\xb5\x78\x67\x28\xbd\x0b\x4e\x45\xc2\x78\x1a\xc3\xf1\x94\xe9\x8a\x7c\x6e\x24\xc9\xbd\x4b\x21\x0b\x15\x03\x2f\xdd\x4f\x75\x16\x9e\x42\xf5\x79\xf6\x96\xc3\x0f\x67\x10\xbc\x3b\x75\xe6\x7f\x7b\xbf\x21\x47\x59\x71\xbf\x11\x98\x30\x0d\xe1\xc8\x1f\x85\x76\x77\x30\x8c\xa1\xbc\x4f\xf7\x97\x65\xda\xaf\xfe\x8d\x52\x11\x87\x61\x34\x18\xee\x01\xf5\x66\x42\x16\x44\x37\x25\xbf\x90\x52\x48\x90\x48\x2c\xac\xaa\xfd\x76\xd5\x1e\xb8\xe5\x18\x76\x55\xdb\x12\xeb\x2d\x9b\xf0\xa2\xb4\x00\xed\x08\xec\xdf\x9b\x29\x4a\x8e\x1a\x95\x29\x53\x49\x12\xdc\xaf\xff\xd3\xdc\x28\x8d\xd2\x22\x8b\x8e\x57\x03\xfb\x92\xd9\x38\xff\x19\x94\x0b\x1b\xf5\xc3\xed\xb5\x9b\x2a\x89\x4a\x18\x49\x51\xc5\xb0\xfb\x7e\xfe\x1c\xe3\x86\x87\x5e\x66\xcb\x4d\xaf\x85\x61\x61\x9d\x1c\x75\xc1\xba\x14\x86\x27\x10\xb6\xce\xe0\x0b\xd3\x19\xe8\x45\x69\xd3\x01\x8c\xbb\xa1\xd4\x58\x94\x39\xd1\x38\x82\x49\x86\x12\x41\x65\xc2\xe4\x09\x08\x9e\x2f\x60\x8a\x10\xb4\x88\xbf\x97\xbf\x35\x64\x82\xd0\x5f\xcd\x86\x8b\xed\xc2\x67\x64\x8e\x30\x45\xe4\x2f\x09\x7d\x17\x97\x1b\xf5\xd3\x3c\x88\xc2\xfa\xdb\x75\x53\xe0\x07\x5d\x4c\x27\x42\x93\x1c\xa8\x30\x5c\x83\x98\x41\x41\x6c\xf7\xc1\xa7\x6b\xdb\x0c\x09\xe0\x03\x45\x4c\xd0\x7e\x94\x48\xad\xe8\x3a\x4b\xbb\xd7\x32\x7b\x85\x8b\xad\x98\x8c\x3b\x4b\x76\x57\x59\x80\x16\xf0\xc7\xd2\x05\x04\xa3\x68\x14\xda\x8b\x83\x0b\x0d\xca\x94\x56\x98\x31\x81\x99\x14\x05\xcc\x1b\x09\x7b\x3c\xcd\xaf\x74\xb3\xe5\xa8\x1f\x8f\x37\xa7\xf4\x28\xde\xeb\x89\x7d\xa3\xb3\x97\xd3\x24\x8c\x2e\x8d\xae\x1a\xec\xa4\x8b\x04\x3a\xe9\xa1\xee\xce\xe3\x29\x24\x4c\x22\xd5\x42\x2e\xe0\xcd\xae\x7a\xf3\x14\xe2\x06\xa6\x7d\x4a\x1e\xf8\xdd\x9d\x51\xb9\xc5\x07\xa4\xc6\xf9\x6d\x46\xcc\x89\x5f\xad\xd7\x31\xec\xce\x9f\x03\xd9\xe4\xc4\x56\x0d\x1c\x45\xdb\x4d\x70\x14\x6c\x75\x2e\x3c\x0c\x57\xa7\x25\xad\x6e\x4d\xcb\xd2\x34\x1d\x52\xb3\xed\x2a\xce\x5a\xf3\xfe\x02\x85\x87\xab\x91\x94\x44\xaa\x47\x37\x68\x57\x45\x3a\x4d\x96\x11\x4b\x66\xff\x72\xb1\xe4\x3d\x5e\xae\xd7\x58\x9f\x6e\xf7\x34\xcb\xb3\xdb\xbc\x2b\x13\x9d\x26\xdb\xd5\xe7\xa0\xf3\x05\x32\x23\x2c\xc7\xc4\xce\x2b\xe3\x4c\x33\x92\xb3\xaf\x6d\xb2\x9b\x42\x3c\x7f\x8c\x7c\xd3\xa1\x95\x99\x0b\xc6\x51\x6f\xea\x8e\x3a\x53\xc7\xf8\x9c\xe4\x2c\x69\x14\xc3\x4a\x8a\x9d\x17\x2a\x78\xb3\x32\x25\xf4\xbe\x52\x15\xd3\xac\x61\x02\x62\x6a\xdf\xd3\x2d\x87\xd7\xfa\xe9\x6b\xc1\xb1\xdf\xf9\x7a\x11\x92\x66\xa8\xb4\xcb\x8d\x53\x1b\x2b\x86\x86\x2f\xa5\xb0\x05\xb7\xde\xb2\x77\x02\x8e\x0e\xba\xc2\xb7\xfa\x52\x35\x13\x24\x02\x2b\x31\xc6\x07\xa6\x1e\xa5\x66\xad\xe1\xca\x92\x1e\x1f\xf4\x56\xf4\xb0\xf3\x71\x60\xb8\x44\x2a\x52\xce\xbe\x62\x02\x1f\x6e\xae\xea\x47\xbf\xe3\xdd\x82\xea\xb7\xea\x17\x84\xa0\xf3\xce\x58\x90\x22\x5f\x9b\x8b\x5e\xa3\xff\x03\x00\x00\xff\xff\x21\x6c\x1f\x71\x7a\x0e\x00\x00")

func translationsEn_usLc_messagesAcsenginePoBytes() ([]byte, error) {
	return bindataRead(
		_translationsEn_usLc_messagesAcsenginePo,
		"translations/en_US/LC_MESSAGES/acsengine.po",
	)
}

func translationsEn_usLc_messagesAcsenginePo() (*asset, error) {
	bytes, err := translationsEn_usLc_messagesAcsenginePoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/en_US/LC_MESSAGES/acsengine.po", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsZh_cnLc_messagesAcsengineMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x5f\x6c\x14\xd5\x17\xfe\xda\xee\xaf\xed\x6f\xfd\x8f\x0f\x6a\xd4\x78\x25\xd9\x80\x29\x53\xa7\x25\x29\xb8\x0a\x11\x2b\x98\x62\x2b\x4d\xb3\xa0\x89\x31\x66\x3a\x73\xbb\x7b\x61\x76\xee\x3a\x73\xa7\xb4\x24\x26\x68\x8a\x6d\x43\x4b\x31\x69\x0b\xfd\x6f\x41\x2c\x41\x64\x8b\x7f\x70\x6d\x21\x68\x4c\x4c\x4c\x7c\x37\xbe\xf8\xa0\x3b\xb3\xdb\x27\xde\x7d\x32\xf3\x67\xbb\x6b\xad\x86\x78\x5f\x66\xf7\x9c\xef\xfb\xee\x39\xdf\x39\xb9\xbf\x6e\x89\x4c\x00\xc0\xc3\x00\x9e\x00\xf0\x25\x80\x27\x01\xb4\x57\xc1\x3f\xdf\x56\x01\x04\xc0\x77\x55\x40\x03\x80\xdf\xaa\x80\x03\x00\xee\xaf\x06\xda\x00\x1c\xae\x06\x9e\x03\xb0\x50\x0d\xec\x01\xf0\x4b\x35\xd0\x0a\xe0\x91\x1a\xe0\x69\x00\x6f\xd6\x00\xdb\x01\xbc\x5b\x03\xc4\x00\x7c\x52\x03\x3c\x06\xe0\xa7\xf0\xeb\xd6\x04\xba\x88\x00\x7b\x01\xec\x88\x04\xf7\x1d\x8b\x00\x4f\x01\x18\x89\x04\x75\x5d\x8d\x00\x8f\x03\xf8\x31\x02\xbc\x55\x05\x38\x91\x40\xaf\xb5\x36\xc0\xb1\xda\xa0\x8e\xe1\x5a\xa0\x05\xc0\xf7\xb5\x80\x0c\xe0\x8f\xda\x40\xbf\xa1\x0e\x90\x00\xbc\x5e\x17\xf4\x77\xaa\x0e\xd8\x0a\xe0\x62\x5d\xc0\xff\x21\x8c\xbb\xe1\x37\x52\x0f\x6c\x03\xb0\xb5\x3e\xd0\x3d\x58\x0f\x3c\x0a\x60\xa0\x3e\xa8\x7b\xae\x3e\xe0\x7d\x1d\xc6\x7f\xae\x07\x3c\xcb\xee\x05\x50\x1d\xb4\x83\x5a\x00\x75\x00\xfe\x1f\x58\x89\x07\x51\x3e\xd1\xf0\xbb\x05\xc0\x03\x00\xea\x01\x3c\xe4\xf9\x0a\xe0\x7f\x61\xae\x26\x9c\x8b\x77\xee\x01\x70\x1f\x36\x39\xfb\x4d\x93\x9b\xc4\xa4\x8a\xc6\x8c\x24\xe9\x61\x3a\x25\x31\x6b\x07\xf1\xc3\x71\x12\xb3\x42\xc0\xf1\x94\x97\x79\xc7\xa6\x66\xbf\x87\xdb\xd7\xd5\x41\x7a\x7c\x9e\xc5\x6d\x53\xa5\x56\x9c\xc4\x1a\x7a\x71\x80\xdb\x86\x46\x9a\xcb\x61\x72\x9c\x89\x14\x11\xfd\x19\x4f\x95\x30\x83\x88\x14\x25\x82\xa6\x33\xba\x22\x68\x23\x49\xa4\xa8\x49\x89\x95\xe2\xb6\xae\x11\x6e\xe8\xfd\xa4\x9b\x92\xa6\x50\xc6\xe0\xff\x4d\x27\xa5\xf4\x52\xd2\x4d\xa9\x41\x9a\x90\xe0\x42\xd1\x89\xca\x6d\x43\x10\xde\x43\xd2\x8a\x25\xa8\x49\x8e\x74\x78\xf5\x6a\x84\xf6\xa9\x94\x6a\xd4\xfb\x91\xa1\xaa\xa0\x5a\x80\xf4\x72\x38\x9c\x49\x9a\x8a\x46\x89\xe0\xe4\x55\xbb\x9b\x9a\x06\x15\xd4\x22\x4d\x8d\x2d\x8d\xcd\x84\x59\xc4\xe0\x82\x58\x76\x26\xc3\x4d\x8f\xd6\x63\xf2\x34\xe9\xa5\xa6\xc5\xb8\xe1\x9b\xb6\x39\xbb\x02\x71\x17\x1a\xd4\x37\x5e\x35\xa9\x22\x3c\xcb\x35\x66\x52\x55\x70\xb3\x9f\x6c\x8b\x59\xdb\x2a\x10\xb4\x8f\xaa\xb6\x0f\x29\x19\xe2\x8f\x26\x1c\x65\x9c\xc4\x7a\x43\x60\x92\x1a\xd4\x0c\xc4\xec\x52\x7d\x21\xa3\x42\x2e\xa3\x98\x56\xc5\x2a\x54\xf0\x37\x2c\x89\xcf\xe9\x51\x98\x4e\x35\xaf\x4f\x66\x30\xc1\x14\x9d\x9d\x28\xab\x96\x6e\x0c\x37\x89\x19\xbd\x8a\xce\xb4\x52\x93\x9e\x0b\x5e\xa1\x2a\x37\x4a\x91\x6e\x45\x3d\x16\x18\x61\x97\x62\x54\x23\xbc\xfb\x28\x55\x05\xb8\xa9\xa6\xa8\x25\x7c\x3d\xdf\x03\xcf\x43\xdb\x58\x77\x10\xe5\xf6\x83\x02\x89\xc6\x69\xe0\x32\xed\x63\x96\x80\x6d\x98\x54\xe5\x49\x83\x9d\xa0\x1a\xd9\xd7\xd9\x76\x24\xbc\xd5\xd3\x42\xbf\x92\xd6\xff\x89\xd8\x69\x72\xaf\x02\xa9\x4d\x93\x8e\x94\x06\x14\xed\xa2\xde\xb5\x52\x87\x95\x64\x9a\xf4\x92\x9d\xb4\xa4\x04\x8f\x93\x68\xe7\xa1\x84\xd4\xea\xcf\x8c\x1b\xd2\xcb\xbe\xb5\xcd\x72\xd3\x2e\x49\x6e\x91\xe4\x26\xd2\xbc\x33\xde\x2c\x37\xc8\xb2\x2c\x47\x3b\x0f\x49\x5d\xb4\x97\x59\x9b\xe2\x9a\x5a\xe2\x3b\x65\x49\xde\x25\xcb\xd1\x76\xc5\x12\x52\xc2\x54\x0c\x4b\x0f\x9c\x3c\xc8\x14\x23\x29\x98\x62\x90\x76\x46\x5e\x38\x5a\xfa\xa7\xb3\x17\x53\x5c\xa4\x15\xa6\x37\xaa\x3c\xbd\x37\xda\xae\x18\x49\x5b\x49\x52\x29\x41\x95\x74\x9c\xb4\xa6\x98\x41\x2d\x4a\xb6\x5b\x2c\x9d\xd1\x59\x0f\xa3\xda\x33\xeb\x98\x38\x39\x91\x7a\xbb\xf5\xb5\x68\x47\x5b\xc7\xfe\x72\x8b\x4d\x8d\x72\xb4\x95\x1b\x82\x1a\x42\x4a\xf4\x67\x68\x9c\x08\xda\x27\x9e\xcd\xe8\x0a\x33\x9e\x27\x6a\x4a\x31\x2d\x2a\xf6\x1c\x4e\x1c\x90\x76\x97\x71\x5e\xa1\x3d\xd4\x94\xf6\x1b\x2a\xf7\xb6\x25\x4e\x76\x77\x33\x11\x7d\x43\x7a\xa5\xbc\x0b\x9d\x9c\x6a\x4c\x90\xe6\x46\xb9\xb1\x39\x0a\x77\x72\x30\xbf\x7a\x83\xc4\xac\x3b\x37\x47\xd6\xc6\xa7\x8a\xd9\x6c\x31\xbb\xea\x8c\x4d\xba\xe7\x6e\x38\x83\x2b\x6b\xe3\x53\xfe\xf2\xb8\x0b\x97\x8a\xd9\x0b\xfb\xba\x3a\x8a\x5f\x0d\xb8\x2b\x67\xd7\x93\x77\x6e\x4e\xfb\x4f\x8f\x7b\x79\xd1\x9d\xbb\xed\x8c\x7d\x58\x38\xb3\x9c\xcf\x7d\x9c\xcf\x5d\x29\x5c\x5f\x75\xe6\x4f\xc7\x2c\x52\x98\x1e\x08\x48\xbf\x9f\x7c\xdf\x59\x19\x2f\x66\x2f\x39\x63\x57\xdc\xd9\xe1\x7c\xee\x64\x3e\x77\x25\x64\xba\x9f\x2f\xba\xb3\xc3\x01\xff\x5f\x98\x65\x5a\x3e\xb7\x5a\x9c\x9a\x76\x4f\x2f\xb8\xb3\x2b\xee\xc9\x55\x77\x62\xd9\x7f\x53\x8a\x37\x4e\x15\x6f\x0f\xba\xb3\x0b\xee\xec\x4c\x61\x7a\xc0\x9d\x58\x2e\xcc\x5c\xf3\x5f\x94\xc2\xf0\x90\x3b\x7b\x35\x66\x91\x7c\x6e\xd4\x1d\xcf\xba\x23\xef\x39\xa3\x83\x85\x95\x25\x67\x68\x79\xe3\x0b\x73\x77\xd8\x12\x08\xce\xd0\x8c\xb3\xba\x52\x98\xb9\xe6\xdc\x9a\xf0\xd6\x77\x83\x73\xc3\x4b\xc5\xc5\x91\x75\x97\x49\xac\x97\x84\x2d\x97\x60\x7f\x83\x6c\xcc\x17\x97\x2e\xba\xf3\x67\xd7\xf3\x71\x5f\xa3\x9c\x0d\xc6\x55\x91\xad\x28\x01\xce\xd0\x9c\xb3\x74\xda\x19\x99\x0c\x44\x0b\xe3\x0b\xee\xd0\x59\x67\xea\xf2\x5f\x27\x68\x21\x9f\x3b\xe3\xcc\xcc\xbb\xe7\xb3\x6b\x73\xf3\x41\x67\xce\xc8\x64\x61\x7a\xc0\xc9\x7e\x53\xbc\xbe\xe8\x4d\xe2\xd6\x55\x77\xf4\x42\x61\x7a\x20\xc8\xba\xe7\x3e\x72\x27\x86\x3c\x66\xcc\x22\x6b\xa7\x46\x3d\xc9\xf3\xd9\x7c\x6e\xd4\x19\x3b\x17\x58\x56\x9a\xec\x7a\x5b\x5e\xf2\xb3\xf3\xce\xec\x65\x78\xe4\x2f\x26\x8a\xd9\x0f\x9c\xa1\x4f\x0b\xd3\x03\x9b\xbf\x06\x9b\x11\xff\x0c\x00\x00\xff\xff\x94\xe2\x35\xc2\xf0\x08\x00\x00")

func translationsZh_cnLc_messagesAcsengineMoBytes() ([]byte, error) {
	return bindataRead(
		_translationsZh_cnLc_messagesAcsengineMo,
		"translations/zh_CN/LC_MESSAGES/acsengine.mo",
	)
}

func translationsZh_cnLc_messagesAcsengineMo() (*asset, error) {
	bytes, err := translationsZh_cnLc_messagesAcsengineMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/zh_CN/LC_MESSAGES/acsengine.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsZh_cnLc_messagesAcsenginePo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x6d\x4f\x1b\xc7\x13\x7f\xcf\xa7\x18\x81\xac\x24\x4a\xce\xd8\x26\x31\xe4\xfe\x0f\x6a\x4a\x93\x2a\x6d\x68\x11\x72\xa2\xbe\xa8\x54\x1d\x77\xe3\xf3\x86\xf3\xee\x75\x77\x8f\x40\x5e\xa5\x15\x29\xa0\x40\x48\x25\x1e\xc2\x43\x20\xa4\x8d\x88\xd2\x34\x26\xad\x1a\x51\x48\x94\x0f\x53\xdf\xd9\xbc\xca\x57\xa8\xf6\xce\x36\x06\x0e\x93\xa2\xbe\x40\x5e\x76\x67\x6f\x7e\xf3\x9b\x99\xdf\x6c\x07\xf4\x16\x08\x45\x81\x20\xb9\x41\x85\x63\x48\xc2\xa8\x80\x3c\xe3\x60\x98\x02\xa9\x4d\x28\x82\x6b\x98\x43\x86\x8d\xc9\xb6\x0e\xe8\x65\xee\x28\x27\x76\x41\xc2\xe9\xde\x33\x90\x49\xa5\xbb\xdb\x3a\x20\x57\x20\x02\xf2\xc4\x41\x20\x02\x2c\x22\x24\x27\x83\x9e\x44\x0b\x3c\x6a\x21\x07\x59\x40\x10\x46\x11\xc1\x21\x26\x52\x81\x60\x88\x70\x2f\xd6\xc1\x67\xc4\xa0\xb6\x24\x06\x85\x6b\x04\xfe\x7b\xb3\xfe\x9f\x43\x3e\x2a\x30\x59\x34\x88\x93\x34\x59\xf1\xff\xe7\x42\xd7\xc9\xb6\x8e\xb6\xa2\xb0\x89\x05\xed\xed\x6a\x21\x24\x57\xab\xf6\x7e\xce\x6e\xa2\x29\xb5\xab\x96\x76\x03\xb9\x20\x8c\xea\xf0\x35\x6d\x6f\x6b\x1f\x40\x97\x71\xa9\xf5\xa9\x3b\xda\xc7\x9e\x2d\xb4\x1c\xab\x1d\xf5\x7f\x99\xd3\x7a\x39\x86\xf1\x6b\x9f\x18\x12\xf5\xd0\x85\x96\xca\x6a\xa9\x34\x64\xba\xf4\x4c\xea\x6c\x2a\x95\x4a\xd5\x8c\xb5\x01\x1c\x26\x22\xd6\x36\x9d\xd5\xbb\x52\x5a\xaa\xbb\x66\x7b\xcd\x10\x52\xcb\xd5\xc8\x65\x5c\xff\xc0\x08\x6b\x77\xa9\xed\x19\x36\x6a\x39\x34\x8a\x7a\x23\x55\xa7\x05\x29\xba\x0e\xc9\x13\xb4\xce\xec\xb3\xd3\xe1\x76\xe1\x9b\xde\x2f\xc2\xbd\xbe\xab\x7d\x97\xf7\xc2\x4f\x27\x23\x34\xbd\x8c\x4a\xa4\x52\xcb\x8d\xba\xa8\x83\xc4\x11\xd9\xe9\x3a\x06\xa1\xff\x01\xb3\x60\x70\x81\xf2\x7f\xd7\x73\x57\xb4\x9e\xfd\xb6\x0a\x7c\x1e\xb9\x76\x99\x9a\xcc\x22\xd4\xd6\xa1\x67\x90\xc8\xd0\xe6\x2b\xed\x53\xa4\xc8\xa3\xc8\xfa\x19\x5a\x44\x42\x26\x99\x4a\x66\xd4\x69\x5b\x87\x0e\xee\x90\xdd\xd9\x48\x74\x67\xf4\x93\xb4\x99\x9e\xc9\x64\xdb\x3a\xce\x81\xa9\xe5\x19\x2f\x1a\xb2\x9e\xc7\xcb\x9c\x33\x0e\x1c\x0d\xe5\x27\xaa\xa9\x84\x38\x07\xe1\xb6\x0e\x09\xb1\x97\xe7\x60\x7e\xbc\xbc\xf3\x1a\x12\xe2\xfd\x9b\xa9\xdd\xd9\xc5\x6a\xa9\x54\x2d\xed\xf8\x33\xf3\xc1\xc2\x6b\x7f\x7c\x7b\x77\x76\x31\x32\xaf\x63\x60\xae\x42\xa9\x8a\xbb\x73\xc8\x1b\x44\x4e\x51\xa2\xf0\x5c\x9b\x1b\x16\x76\xd6\x7e\x4d\xc7\x13\x12\xb9\x82\x97\xed\x39\x1a\xdd\xad\x82\x82\xf5\xad\x87\x7c\x54\x81\xbc\x34\xd0\x17\xf6\x0b\x47\xc1\x3c\x6e\xa2\xd0\x21\x71\x76\xb8\x09\xe8\xda\xd3\x6a\xe9\xc9\xa5\x81\xbe\xea\x1f\x63\xc1\xf6\x83\x06\xbe\xf7\x6f\x96\x22\xc3\xc3\x34\x85\xbd\xa8\x5c\x2b\x28\x17\xbb\xe3\xa0\x5c\x61\x1e\xb5\x20\xb3\xe7\x15\x6e\x11\x59\x00\x39\xea\x2a\xc6\x80\xd0\xb0\xc5\x24\x16\x5d\xc7\x90\x98\x84\x5c\x01\x39\x82\x28\x30\xcf\xb1\x80\x51\x67\x14\x06\x11\xd2\x4d\x28\x9f\xad\x07\x8f\xde\xf9\x33\x3f\x56\xee\x6f\x96\xb7\x7e\x2e\x6f\x3d\xaf\xbc\xda\xf1\x57\xef\x25\x04\x54\x96\xc6\x22\xe8\x7f\xdd\xf9\xde\xdf\x9e\xad\x96\x9e\xfa\x33\xcf\x83\x95\xc9\xf2\xd6\x9d\xf2\xd6\xf3\x63\xf1\xa7\x33\xa9\xa3\x03\xa0\xec\x64\x11\x14\x8c\x61\x84\x41\x44\x7a\x38\x86\xe0\xb7\xf5\x60\x65\x32\x8a\xa4\x45\x0c\x31\x01\xb4\xac\x91\xe1\x74\x36\x53\x5b\x87\x15\x92\x4e\xa5\xe3\xc2\xca\x31\x69\x38\x60\x32\x8f\x4a\x60\x79\x28\x1a\xaa\xa2\xe0\x46\x9f\xaa\x0a\x0b\x70\xc4\x44\xb4\x50\x2d\x5c\x34\x95\x44\x86\x96\xea\x6c\x2f\x8c\xf2\xd6\x4e\x75\x71\x29\xb8\xb7\x16\xac\x6c\x07\x77\x76\x82\xb9\xcd\xf0\x6e\xf5\xf5\xdd\xea\xbb\xf1\x60\x65\x2d\x58\x59\xae\x2c\x8d\x05\x73\x9b\x95\xe5\x97\xd1\xcd\x13\x05\xd0\x15\x9b\x96\xeb\x91\x05\x48\x06\x9f\x37\x3e\x01\xe9\x64\x36\x99\x51\xea\x4e\x99\x04\xe1\xb9\x4a\x46\xd1\x82\x3c\x67\x45\x18\xae\x6b\x4c\x73\x77\x56\x26\x27\x82\x95\x17\x09\x01\xe5\xad\xe9\x60\xb6\x14\x4c\x7d\xe7\x4f\x8f\x57\xb6\x37\xfc\x89\xcd\x83\x9f\x3d\x71\x8f\xf6\x74\x7d\x78\x00\x4d\x20\xff\xf5\x30\xea\x46\x71\x9d\xc0\x3c\xe9\x7a\x32\xaa\x97\x8b\x71\x70\x31\x94\x14\x33\x9c\x3c\xd4\x06\x8b\x70\x34\x25\xe3\xa3\x70\x2a\x21\x4e\xed\x07\xe3\x4f\x2c\xfb\x3b\xdb\x95\xe5\x97\xfe\xdb\x39\x15\xc7\x11\x4a\x17\xa7\xb6\xe9\x54\x7c\xb6\x23\xef\x38\x82\xa6\x17\xba\xaf\x77\x5b\x28\x68\x35\xf5\xd5\x21\xd1\xac\x66\x93\x1b\xd5\xf5\xa9\x86\xf8\x42\x62\x18\x6a\x6d\x57\x47\x73\xc2\x72\xcc\x66\x4f\xd6\x86\xd9\xf4\x89\xee\x65\x2e\x64\x8e\x26\xc4\x8e\x66\x9a\x62\xc4\xab\x97\x53\x8d\x99\x03\x43\xe8\x00\x1b\x47\x52\x11\x9f\x94\xcc\x85\xa3\x31\xb8\x06\x17\x4d\x33\x70\x7f\x16\xaa\x1b\x3f\x05\xab\x0f\x1a\x7e\xf5\x30\x0d\x31\x5e\x5d\xa2\xfe\x1c\xd6\x88\xba\xab\xb1\x5f\x0b\x6c\xff\x71\x8b\x22\x39\x30\x93\xf7\xf3\x50\x1b\xbd\x4d\x78\x44\x1c\x9e\x7f\x96\xa1\xf3\xb1\x2f\x84\xbc\x41\x1c\xb4\x54\x7b\x13\x4a\x24\x31\x1c\x72\x7b\x2f\x3b\xf5\xcc\x1d\x7c\x2c\xf8\x13\x8f\xfc\x8d\x7b\xfe\xd4\x7c\x94\xa0\xca\xec\x5a\x30\xf1\xc0\x5f\x7c\xb6\x7f\x18\x8b\x16\xcc\xa5\xbb\xb2\x2d\xa9\xeb\x8e\xa5\x8e\xd0\x61\xc3\x21\x56\x5d\x5c\x14\x2d\xaa\xb3\x4c\x46\xeb\x3b\x83\x86\x39\x14\x09\x90\x57\xdf\x43\x0b\xd8\xa0\x7a\xc0\x36\x8f\x84\xfb\xfe\xf2\x6a\xf0\xb0\xb4\xfb\x68\x35\x92\x1b\x7f\x6a\xbe\xb2\x34\xe6\x97\xfe\xac\xbe\x5a\x57\xc3\xed\xed\x8b\x60\xfa\x49\x65\x69\x2c\x3a\x0d\x16\x1e\x07\x73\x13\xc7\xca\x42\x57\x2a\xf6\x6d\xc1\xb8\x59\x40\x21\x43\x1e\x43\x1d\x52\x92\xe9\xd1\x86\x60\xee\xe1\x4a\x08\xd8\xbd\x3b\xad\x88\x7c\x58\x2a\x6f\x4d\xfb\x33\x0b\x91\x4a\x1e\x53\xf8\xdd\xe7\xe3\xdc\xee\x89\x4f\x54\x62\x60\x31\x8c\xa4\x1a\x47\x88\x90\x87\xe6\x7c\xa3\xeb\x94\xe7\x5f\x1f\xfa\x2b\xcf\x5a\xe4\xaf\xe7\x7c\xcb\xf4\x5d\x88\x1d\xe6\x1e\xe5\x68\x32\x9b\x92\xdb\x68\xc1\xa5\xfe\xab\xb5\xe7\x74\xc8\x49\x13\x9c\x85\xc7\xc1\xef\x73\xd5\xd2\x0f\xfe\xc4\x2f\x95\xa5\xb1\xc3\x86\xad\x45\x20\x1d\x3b\x17\x46\x8d\xa2\x73\x2c\x11\xa1\x51\x2c\x0f\x7f\x07\x00\x00\xff\xff\x09\x74\xf7\x7e\xd8\x0d\x00\x00")

func translationsZh_cnLc_messagesAcsenginePoBytes() ([]byte, error) {
	return bindataRead(
		_translationsZh_cnLc_messagesAcsenginePo,
		"translations/zh_CN/LC_MESSAGES/acsengine.po",
	)
}

func translationsZh_cnLc_messagesAcsenginePo() (*asset, error) {
	bytes, err := translationsZh_cnLc_messagesAcsenginePoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/zh_CN/LC_MESSAGES/acsengine.po", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"translations/default/LC_MESSAGES/acsengine.mo": translationsDefaultLc_messagesAcsengineMo,
	"translations/default/LC_MESSAGES/acsengine.po": translationsDefaultLc_messagesAcsenginePo,
	"translations/en_US/LC_MESSAGES/acsengine.mo":   translationsEn_usLc_messagesAcsengineMo,
	"translations/en_US/LC_MESSAGES/acsengine.po":   translationsEn_usLc_messagesAcsenginePo,
	"translations/zh_CN/LC_MESSAGES/acsengine.mo":   translationsZh_cnLc_messagesAcsengineMo,
	"translations/zh_CN/LC_MESSAGES/acsengine.po":   translationsZh_cnLc_messagesAcsenginePo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"translations": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"LC_MESSAGES": {nil, map[string]*bintree{
				"acsengine.mo": {translationsDefaultLc_messagesAcsengineMo, map[string]*bintree{}},
				"acsengine.po": {translationsDefaultLc_messagesAcsenginePo, map[string]*bintree{}},
			}},
		}},
		"en_US": {nil, map[string]*bintree{
			"LC_MESSAGES": {nil, map[string]*bintree{
				"acsengine.mo": {translationsEn_usLc_messagesAcsengineMo, map[string]*bintree{}},
				"acsengine.po": {translationsEn_usLc_messagesAcsenginePo, map[string]*bintree{}},
			}},
		}},
		"zh_CN": {nil, map[string]*bintree{
			"LC_MESSAGES": {nil, map[string]*bintree{
				"acsengine.mo": {translationsZh_cnLc_messagesAcsengineMo, map[string]*bintree{}},
				"acsengine.po": {translationsZh_cnLc_messagesAcsenginePo, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata.
// sources:
// ../../translations/default/LC_MESSAGES/acsengine.mo
// ../../translations/default/LC_MESSAGES/acsengine.po
// ../../translations/en_US/LC_MESSAGES/acsengine.mo
// ../../translations/en_US/LC_MESSAGES/acsengine.po
// ../../translations/zh_CN/LC_MESSAGES/acsengine.mo
// ../../translations/zh_CN/LC_MESSAGES/acsengine.po
// DO NOT EDIT!

package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _translationsDefaultLc_messagesAcsengineMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xcd\x8e\x1b\xc5\x17\xc5\x8f\xed\x99\xf1\xfc\xfb\xcf\x67\x90\xf8\x10\x20\x6e\x16\x56\x82\x26\xed\xb4\x8d\x86\x8c\x7a\x98\x40\x08\x33\x68\xc2\x8c\x62\x0d\x9e\x88\x1d\x2a\x77\x5f\xb7\x2b\xb4\xab\x4c\x55\xb5\x33\x0e\x2f\x40\x1e\x00\x89\x07\x80\x0d\xac\x79\x86\x6c\x58\xc3\x8e\x3d\x3b\x56\x28\x4b\xd4\x5d\xed\x78\xc4\xc7\x86\x1d\x52\x7a\x53\xee\xeb\x73\x4f\xfd\xee\xa9\x56\xfd\x72\x61\xed\x2b\x00\x78\x1e\xc0\x6b\x00\xbe\x01\xf0\x12\x80\x2b\x0d\x54\xcf\x97\x0d\x80\x00\x3c\x68\x00\x5b\x00\xbe\x6b\x00\x07\x00\x7e\x6a\x00\x87\x00\x5e\x6f\x02\x7b\x00\xb2\x26\x70\x11\xc0\xb7\x4d\xe0\x32\x80\x87\x4d\xa0\x03\xe0\xb7\x26\xf0\x0a\x80\x17\x5b\x7e\x8d\x5a\xde\xe7\x56\x0b\xb8\x0e\x60\xde\xf2\xfe\x3f\xb4\x80\x37\x4a\xdf\x96\xe7\xf8\xbd\x05\xbc\x0a\xe0\x85\x35\xe0\x8b\x06\x70\x75\xcd\xeb\xbe\x5f\xf7\xfd\x3f\xae\x7b\x8e\x47\xeb\x9e\xe3\xdd\x0d\xcf\xf1\x60\xc3\x73\x3c\xdc\xf0\x1c\xbf\x6e\x78\x8e\x0b\x6d\xbf\xff\x4e\xbd\x9e\xb4\xbd\x4f\xde\xf6\x1c\x5f\xb7\xbd\xff\xcf\x6d\xcf\xf1\xa8\xed\x39\x5e\xde\xf4\x1c\xdb\x9b\x40\x19\xc9\x26\xfe\xfa\xb4\xeb\xb5\x05\xe0\xff\x75\x96\x4f\xd5\xb5\x75\x00\xcf\x01\x08\x00\x3c\x0d\xa0\x09\xe0\x59\x00\xff\x03\xb0\x01\x60\x0d\xc0\x33\xa5\x70\xdf\x18\x6d\xc8\xb0\x48\xa5\xca\x68\x2c\x73\xa6\x8e\xbd\x42\x55\x39\xa6\x8e\xad\x05\xf7\x26\xe5\x3f\x9f\x17\x6c\x16\xa5\xee\xc6\xc9\x31\x8d\xab\x3e\xab\x0b\x93\xb0\x8d\xa9\xb3\x35\xc7\x81\x2e\x54\x4a\xfd\x55\x99\xee\x49\x37\x21\xb7\x98\x95\xae\x24\x15\xb9\x09\x93\xe3\xe9\x2c\x17\x8e\xbb\x34\x9c\xb0\x61\xb2\x13\x5d\xe4\x29\x69\x95\x2f\x68\xc4\xd4\xab\x6d\x94\xfe\x77\x3e\x13\x31\x67\x1a\x31\x2b\xea\xe1\x74\x96\x19\x91\x32\x39\x4d\x1f\x15\x23\x36\x8a\x1d\x5b\xea\x75\xdf\xee\xf6\x49\x5a\x52\xda\x91\x2d\x66\x33\x6d\x1c\xa7\x34\x36\x7a\x4a\x73\x36\x56\x6a\x55\x8d\xce\xd5\xe8\x89\x61\xe1\xca\xa1\x53\x69\x38\x71\xda\x2c\xe8\x52\xc7\x5e\x3a\xa7\xe0\x33\x4e\x8a\x4a\xb2\x44\xaa\xc2\xa9\xc3\x8c\xa9\x33\xaf\x85\x19\x2b\x36\xde\xac\x58\x92\xd5\x1d\xe7\xec\x66\xc2\xd8\x73\x87\x71\xae\xff\x4f\xc7\x54\xf5\x8c\x85\xcc\x39\x2d\x27\x94\x4a\x3a\x29\x72\x79\x7f\xe5\xba\xdc\xb1\x3e\x4b\xa9\xe6\x22\x97\xe9\x72\xc8\x32\xcb\x12\x34\xd1\x6a\x59\x19\x89\xe4\x33\x1f\x44\xb1\xac\x71\x4a\x7a\x74\x97\x13\x07\x6d\x92\x09\x5b\x57\xf9\x55\x19\x94\x19\x16\xea\x71\x82\x58\x8d\xef\x01\x29\xd5\xec\x53\xe6\x33\x69\x1d\x0a\x65\x38\xd1\x99\x92\xf7\x39\xa5\x1b\x83\xc3\x3b\xf5\xae\xa5\x17\x16\x62\x9a\xff\x53\xe3\xc0\xe8\x92\x20\x3c\x4c\xc3\x3b\xcb\x03\x0a\x4e\xb8\xdc\x36\x3c\xb6\x99\x4c\xc3\xf7\x8b\xcc\x86\x43\x1d\x53\x30\xb8\x3d\x0c\x6f\x56\x67\xa6\x55\xf8\x41\x15\x6d\x3f\xea\x5d\x0b\xa3\xed\xb0\xb7\x43\xfd\x7e\x1c\x45\x5b\x51\x14\x45\xc1\xe0\x76\x78\xc2\x73\x69\xff\x56\xd7\xdb\x8e\xa3\xb7\xc2\xe8\x5a\x14\x05\x47\xc2\xba\x70\x68\x84\xb2\xb9\x4f\xf2\x96\x14\x2a\x73\x52\x28\x3a\x92\xf4\xce\xdd\xe5\x5b\x2e\xdf\x9b\x68\x37\x15\x32\xef\x26\x7a\x7a\x3d\x38\x12\x2a\x2b\x44\xc6\xe1\x90\xc5\x34\xa6\x7d\x95\xe5\xd2\x4e\x1e\x97\x63\x62\xf5\xe9\xe9\xc7\xc1\xf1\xe1\xf1\xfe\x6a\xaa\x5e\x37\x0a\x6e\x6a\xe5\x58\xb9\x70\xb8\x98\x71\x4c\x8e\xcf\xdc\xd5\x59\x2e\xa4\xda\xa5\x64\x22\x8c\x65\xb7\x77\x3a\x3c\x08\x77\x56\xba\x92\x6d\xcc\x26\xdc\x57\x89\x2e\x3f\x90\x98\x76\x46\xd2\x05\x83\xbc\x30\x22\x0f\x0f\xb4\x99\xda\x98\xd4\xac\x7a\xb5\x7b\xfd\x5d\xf2\x3f\xf7\x2e\x2b\xba\xb8\x47\xbd\x37\x77\x83\x4f\xc2\x0f\x57\x5f\xca\x40\x73\x2a\x1d\xf5\xbb\x51\xb7\x1f\x3c\xb9\x21\x9e\xdc\x10\xff\x81\x1b\xe2\x8f\x00\x00\x00\xff\xff\x34\x0a\xa1\x2a\x51\x08\x00\x00")

func translationsDefaultLc_messagesAcsengineMoBytes() ([]byte, error) {
	return bindataRead(
		_translationsDefaultLc_messagesAcsengineMo,
		"translations/default/LC_MESSAGES/acsengine.mo",
	)
}

func translationsDefaultLc_messagesAcsengineMo() (*asset, error) {
	bytes, err := translationsDefaultLc_messagesAcsengineMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/default/LC_MESSAGES/acsengine.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsDefaultLc_messagesAcsenginePo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x6d\x4f\xe3\x46\x10\xfe\x9e\x5f\x31\x4d\x14\xdd\x9d\x8e\x35\xb6\x21\x81\x33\xa5\xea\x95\x42\x45\x7b\xa8\x88\x86\xaa\x1f\x2a\x55\x1b\x7b\x62\xef\x61\xef\xba\xfb\x92\x23\xf7\xeb\xab\x5d\xdb\x09\x2f\x9b\x17\x7a\x7c\x40\x38\xeb\x67\x67\x9e\x99\x79\xe6\x49\x06\x70\xce\xf3\x92\xa9\x02\xb4\xa4\x5c\x95\x54\x33\xc1\x15\xcc\x84\x04\x9a\x2a\xe4\x39\xe3\x08\x35\x4d\xef\x68\x8e\x41\x6f\x00\x67\xa2\x5e\x48\x96\x17\x1a\xde\x9e\xbd\x83\x38\x8c\x8e\x7a\x03\x98\x14\x4c\xc1\x8c\x95\x08\x4c\x41\xc6\x94\x96\x6c\x6a\x34\x66\x60\x78\x86\x12\x74\x81\xa0\x68\x85\x50\xb2\x14\xb9\x42\xa0\xca\x9d\x79\x13\xfc\xca\x28\xcf\x35\xa3\x1c\x3e\x31\xf8\xfe\x73\xf7\xa9\x64\x3f\x16\x42\x57\x94\x95\x41\x2a\xaa\x1f\xf6\x5c\xea\xa0\x37\xe8\x55\x2a\x67\x19\xf4\xfb\xf6\x41\x69\x69\x9f\xfa\xd7\x52\x7c\xc6\x54\x93\xcb\x8c\xfc\x89\x52\x31\xc1\x13\xf8\x9b\xf7\x7b\xfd\x1b\xac\x85\xd4\xe4\xca\xde\x21\x3f\x99\x5c\x91\x89\x68\x5f\x5d\xff\x3e\x21\x67\x12\x5d\xfd\xe4\x67\xaa\x31\x71\x29\x48\x38\x22\xd1\x31\xc4\x71\x12\x86\xef\xc3\x30\x0c\x5b\x30\xb9\xc1\x39\x53\x5e\x6c\x34\x4a\xc2\x03\x12\x1e\xb5\xd8\x4f\x54\x69\x32\x69\x9b\x2b\x64\xb2\x63\x85\xed\x5d\x9e\x1b\x9a\x23\x99\x20\xad\x92\x6e\x54\x8f\x5e\x25\x80\xfc\x9f\xdb\x3f\xdc\xd9\xd5\xe5\xd5\xf9\xaa\xe2\x28\x68\x08\x9c\x09\xae\x91\x6b\x32\x59\xd4\x98\x80\xc6\x7b\xbd\x5f\x97\x94\xf1\x13\x48\x0b\x2a\x15\xea\xd3\xdb\xc9\x05\x39\x7e\x8c\xb5\x7c\x67\x28\xc9\x39\x4f\x45\xc6\x78\x9e\xc0\xf1\x94\xe9\xa6\xf8\xd2\x48\x5a\x92\x0b\x21\x2b\x95\x00\xaf\xdd\x47\x75\x1a\x9f\x40\xf3\x78\xfa\x96\xc3\x77\xa7\x10\xbd\x3b\x71\xf0\xbf\xc8\x2f\xc8\x51\x36\xb5\x5f\x0b\xcc\x98\x86\x38\x08\x83\xd8\xbe\xed\x0d\x12\xa8\xef\xf2\xfd\xa5\x14\xf6\x9b\x7f\x41\x2e\x92\x38\x8e\x7a\x83\x3d\x48\xc9\x4c\xc8\x8a\xea\x6e\xd2\xe7\x52\x0a\x09\x12\xa9\xa5\xd5\xa8\x6e\xa8\xf6\xc0\x1d\x27\x30\x54\x2b\x25\x6c\x47\x76\xe9\x45\x6d\x09\x5a\xe5\xef\x9b\x3a\x97\x34\xc3\xb4\x34\x4a\xa3\xb4\x3c\x0e\x3f\xac\xa7\xf1\xa5\xb0\x51\xff\x35\x28\x17\x36\xc7\xc7\x9b\x2b\xb7\x3a\x12\x95\x30\x32\x45\x95\xc0\xf0\xfd\xfc\x29\xa3\x1d\x2f\x3d\xef\x8d\x5b\x51\x4b\xc3\xd2\xfa\x70\xe8\xa3\x75\x21\x0c\xcf\x20\x5e\x05\x83\x2f\x4c\x17\xa0\x17\xb5\x2d\x1e\x18\x77\x9b\xa7\xb1\xaa\x4b\xaa\x31\x80\x49\x81\x12\x41\x15\xc2\x94\x19\x08\x5e\x2e\x60\x8a\x10\xad\x18\xbf\x56\xbc\x2d\xc5\x44\xd6\x47\xd6\x55\xc3\xc5\xff\x4b\x5f\xd0\x39\xc2\x14\x91\x3f\x2f\xe8\x55\x42\x7a\xd4\x73\x67\xa6\x28\x39\x6a\x54\xd1\x38\x6e\xa5\xe4\x44\x14\x8f\x77\xd2\xda\xd8\x3b\xd4\xdb\x06\x07\x5a\xc0\x6f\xcb\x04\x10\x05\xe3\x20\xb6\x8e\xcb\x85\x06\x65\x6a\x6b\x6d\x98\xc1\x4c\x8a\x0a\xe6\x9d\x09\x3c\xdc\x87\x6f\x0c\xf3\x7c\x84\xc2\xe8\xda\x68\x37\xbf\xd0\xbb\x24\xe8\xf4\x9e\x3a\x5b\xe5\x39\x64\x4c\x62\xaa\x85\x5c\xc0\x9b\xa1\x7a\xf3\x98\xdc\x0e\xd0\x4d\x66\x11\x85\xd1\x78\x3d\x03\xbc\xc7\xd4\xb8\xb8\xdd\x5c\xdd\xc6\xb5\x96\x90\xc0\x70\xfe\x94\xc8\x2e\x37\x5e\x32\xff\x51\xbc\x9e\x5d\xde\xf8\xa3\x4d\x66\xba\x11\xb5\x49\x7d\x3d\xda\x0a\xdf\xd2\x27\xaf\xab\x36\xa1\x6b\x2a\xd5\x03\xaf\xf4\x35\xc6\x0b\x59\x66\xac\x99\xfd\x2b\xc5\x52\xf6\x07\xcb\xf3\x96\xeb\xe3\xd7\xe1\x7a\x2e\x4f\x7c\xdb\xd7\x09\x2f\xe4\x25\x53\x39\xf4\x6a\x66\x46\x59\x89\x99\x5d\x13\xc6\x99\x66\xb4\x64\x5f\x57\x2d\xee\xda\xff\xf4\xcb\xe6\x45\x97\xd6\xf6\x2b\x3a\x18\x6f\x6c\xd8\x91\xb7\x61\x8c\xcf\x69\xc9\xb2\x6e\x5d\xad\x8d\x59\xb1\xa6\x82\x77\x27\x53\x9a\xde\x35\x2b\x6d\xba\x33\xcc\x40\x4c\xed\xcf\xa4\x55\x0d\xdf\x1a\x67\x93\xf0\x0e\x42\xef\x06\x08\x99\x16\xa8\xb4\xeb\x8d\x5b\x75\xeb\x44\x86\x2f\x7d\x68\x45\x6e\x3b\x72\xa3\xee\xc7\x5e\x83\x5a\x2d\x77\x23\x21\xc8\x04\x36\x4e\x88\xf7\x4c\x3d\x68\xcd\x56\xe0\xda\x91\x1e\x1f\x6e\x9c\xe8\xc8\xbb\x8e\x86\x4b\x4c\x45\xce\xd9\x57\xcc\xe0\xe3\xf5\x65\xfb\xa3\xce\xd5\xbd\x22\xb5\x19\xb5\xd9\x06\xc2\x91\x2f\xef\x82\x56\xe5\xd6\x5e\x6c\x04\xfd\x17\x00\x00\xff\xff\xeb\xf0\xcc\x89\x51\x0c\x00\x00")

func translationsDefaultLc_messagesAcsenginePoBytes() ([]byte, error) {
	return bindataRead(
		_translationsDefaultLc_messagesAcsenginePo,
		"translations/default/LC_MESSAGES/acsengine.po",
	)
}

func translationsDefaultLc_messagesAcsenginePo() (*asset, error) {
	bytes, err := translationsDefaultLc_messagesAcsenginePoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/default/LC_MESSAGES/acsengine.po", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsEn_usLc_messagesAcsengineMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xcd\x8e\x1b\xc5\x17\xc5\x8f\xed\x99\xf1\xfc\xfb\xcf\x67\x90\xf8\x10\x20\x6e\x16\x56\x82\x26\xed\xb4\x8d\x86\x8c\x7a\x98\x40\x08\x33\x68\xc2\x8c\x62\x0d\x9e\x88\x1d\x2a\x77\x5f\xb7\x2b\xb4\xab\x4c\x55\xb5\x33\x0e\x2f\x40\x1e\x00\x89\x07\x80\x0d\xac\x79\x86\x6c\x58\xc3\x8e\x3d\x3b\x56\x28\x4b\xd4\x5d\xed\x78\xc4\xc7\x86\x1d\x52\x7a\x53\xee\xeb\x73\x4f\xfd\xee\xa9\x56\xfd\x72\x61\xed\x2b\x00\x78\x1e\xc0\x6b\x00\xbe\x01\xf0\x12\x80\x2b\x0d\x54\xcf\x97\x0d\x80\x00\x3c\x68\x00\x5b\x00\xbe\x6b\x00\x07\x00\x7e\x6a\x00\x87\x00\x5e\x6f\x02\x7b\x00\xb2\x26\x70\x11\xc0\xb7\x4d\xe0\x32\x80\x87\x4d\xa0\x03\xe0\xb7\x26\xf0\x0a\x80\x17\x5b\x7e\x8d\x5a\xde\xe7\x56\x0b\xb8\x0e\x60\xde\xf2\xfe\x3f\xb4\x80\x37\x4a\xdf\x96\xe7\xf8\xbd\x05\xbc\x0a\xe0\x85\x35\xe0\x8b\x06\x70\x75\xcd\xeb\xbe\x5f\xf7\xfd\x3f\xae\x7b\x8e\x47\xeb\x9e\xe3\xdd\x0d\xcf\xf1\x60\xc3\x73\x3c\xdc\xf0\x1c\xbf\x6e\x78\x8e\x0b\x6d\xbf\xff\x4e\xbd\x9e\xb4\xbd\x4f\xde\xf6\x1c\x5f\xb7\xbd\xff\xcf\x6d\xcf\xf1\xa8\xed\x39\x5e\xde\xf4\x1c\xdb\x9b\x40\x19\xc9\x26\xfe\xfa\xb4\xeb\xb5\x05\xe0\xff\x75\x96\x4f\xd5\xb5\x75\x00\xcf\x01\x08\x00\x3c\x0d\xa0\x09\xe0\x59\x00\xff\x03\xb0\x01\x60\x0d\xc0\x33\xa5\x70\xdf\x18\x6d\xc8\xb0\x48\xa5\xca\x68\x2c\x73\xa6\x8e\xbd\x42\x55\x39\xa6\x8e\xad\x05\xf7\x26\xe5\x3f\x9f\x17\x6c\x16\xa5\xee\xc6\xc9\x31\x8d\xab\x3e\xab\x0b\x93\xb0\x8d\xa9\xb3\x35\xc7\x81\x2e\x54\x4a\xfd\x55\x99\xee\x49\x37\x21\xb7\x98\x95\xae\x24\x15\xb9\x09\x93\xe3\xe9\x2c\x17\x8e\xbb\x34\x9c\xb0\x61\xb2\x13\x5d\xe4\x29\x69\x95\x2f\x68\xc4\xd4\xab\x6d\x94\xfe\x77\x3e\x13\x31\x67\x1a\x31\x2b\xea\xe1\x74\x96\x19\x91\x32\x39\x4d\x1f\x15\x23\x36\x8a\x1d\x5b\xea\x75\xdf\xee\xf6\x49\x5a\x52\xda\x91\x2d\x66\x33\x6d\x1c\xa7\x34\x36\x7a\x4a\x73\x36\x56\x6a\x55\x8d\xce\xd5\xe8\x89\x61\xe1\xca\xa1\x53\x69\x38\x71\xda\x2c\xe8\x52\xc7\x5e\x3a\xa7\xe0\x33\x4e\x8a\x4a\xb2\x44\xaa\xc2\xa9\xc3\x8c\xa9\x33\xaf\x85\x19\x2b\x36\xde\xac\x58\x92\xd5\x1d\xe7\xec\x66\xc2\xd8\x73\x87\x71\xae\xff\x4f\xc7\x54\xf5\x8c\x85\xcc\x39\x2d\x27\x94\x4a\x3a\x29\x72\x79\x7f\xe5\xba\xdc\xb1\x3e\x4b\xa9\xe6\x22\x97\xe9\x72\xc8\x32\xcb\x12\x34\xd1\x6a\x59\x19\x89\xe4\x33\x1f\x44\xb1\xac\x71\x4a\x7a\x74\x97\x13\x07\x6d\x92\x09\x5b\x57\xf9\x55\x19\x94\x19\x16\xea\x71\x82\x58\x8d\xef\x01\x29\xd5\xec\x53\xe6\x33\x69\x1d\x0a\x65\x38\xd1\x99\x92\xf7\x39\xa5\x1b\x83\xc3\x3b\xf5\xae\xa5\x17\x16\x62\x9a\xff\x53\xe3\xc0\xe8\x92\x20\x3c\x4c\xc3\x3b\xcb\x03\x0a\x4e\xb8\xdc\x36\x3c\xb6\x99\x4c\xc3\xf7\x8b\xcc\x86\x43\x1d\x53\x30\xb8\x3d\x0c\x6f\x56\x67\xa6\x55\xf8\x41\x15\x6d\x3f\xea\x5d\x0b\xa3\xed\xb0\xb7\x43\xfd\x7e\x1c\x45\x5b\x51\x14\x45\xc1\xe0\x76\x78\xc2\x73\x69\xff\x56\xd7\xdb\x8e\xa3\xb7\xc2\xe8\x5a\x14\x05\x47\xc2\xba\x70\x68\x84\xb2\xb9\x4f\xf2\x96\x14\x2a\x73\x52\x28\x3a\x92\xf4\xce\xdd\xe5\x5b\x2e\xdf\x9b\x68\x37\x15\x32\xef\x26\x7a\x7a\x3d\x38\x12\x2a\x2b\x44\xc6\xe1\x90\xc5\x34\xa6\x7d\x95\xe5\xd2\x4e\x1e\x97\x63\x62\xf5\xe9\xe9\xc7\xc1\xf1\xe1\xf1\xfe\x6a\xaa\x5e\x37\x0a\x6e\x6a\xe5\x58\xb9\x70\xb8\x98\x71\x4c\x8e\xcf\xdc\xd5\x59\x2e\xa4\xda\xa5\x64\x22\x8c\x65\xb7\x77\x3a\x3c\x08\x77\x56\xba\x92\x6d\xcc\x26\xdc\x57\x89\x2e\x3f\x90\x98\x76\x46\xd2\x05\x83\xbc\x30\x22\x0f\x0f\xb4\x99\xda\x98\xd4\xac\x7a\xb5\x7b\xfd\x5d\xf2\x3f\xf7\x2e\x2b\xba\xb8\x47\xbd\x37\x77\x83\x4f\xc2\x0f\x57\x5f\xca\x40\x73\x2a\x1d\xf5\xbb\x51\xb7\x1f\x3c\xb9\x21\x9e\xdc\x10\xff\x81\x1b\xe2\x8f\x00\x00\x00\xff\xff\x34\x0a\xa1\x2a\x51\x08\x00\x00")

func translationsEn_usLc_messagesAcsengineMoBytes() ([]byte, error) {
	return bindataRead(
		_translationsEn_usLc_messagesAcsengineMo,
		"translations/en_US/LC_MESSAGES/acsengine.mo",
	)
}

func translationsEn_usLc_messagesAcsengineMo() (*asset, error) {
	bytes, err := translationsEn_usLc_messagesAcsengineMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/en_US/LC_MESSAGES/acsengine.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsEn_usLc_messagesAcsenginePo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x6d\x4f\xe3\x46\x10\xfe\x9e\x5f\x31\x4d\x14\xdd\x9d\x8e\x35\xb6\x21\x81\x33\xa5\xea\x95\x42\x45\x7b\xa8\x88\x86\xaa\x1f\x2a\x55\x1b\x7b\x62\xef\x61\xef\xba\xfb\x92\x23\xf7\xeb\xab\x5d\xdb\x09\x2f\x9b\x17\x7a\x7c\x40\x38\xeb\x67\x67\x9e\x99\x79\xe6\x49\x06\x70\xce\xf3\x92\xa9\x02\xb4\xa4\x5c\x95\x54\x33\xc1\x15\xcc\x84\x04\x9a\x2a\xe4\x39\xe3\x08\x35\x4d\xef\x68\x8e\x41\x6f\x00\x67\xa2\x5e\x48\x96\x17\x1a\xde\x9e\xbd\x83\x38\x8c\x8e\x7a\x03\x98\x14\x4c\xc1\x8c\x95\x08\x4c\x41\xc6\x94\x96\x6c\x6a\x34\x66\x60\x78\x86\x12\x74\x81\xa0\x68\x85\x50\xb2\x14\xb9\x42\xa0\xca\x9d\x79\x13\xfc\xca\x28\xcf\x35\xa3\x1c\x3e\x31\xf8\xfe\x73\xf7\xa9\x64\x3f\x16\x42\x57\x94\x95\x41\x2a\xaa\x1f\xf6\x5c\xea\xa0\x37\xe8\x55\x2a\x67\x19\xf4\xfb\xf6\x41\x69\x69\x9f\xfa\xd7\x52\x7c\xc6\x54\x93\xcb\x8c\xfc\x89\x52\x31\xc1\x13\xf8\x9b\xf7\x7b\xfd\x1b\xac\x85\xd4\xe4\xca\xde\x21\x3f\x99\x5c\x91\x89\x68\x5f\x5d\xff\x3e\x21\x67\x12\x5d\xfd\xe4\x67\xaa\x31\x71\x29\x48\x38\x22\xd1\x31\xc4\x71\x12\x86\xef\xc3\x30\x0c\x5b\x30\xb9\xc1\x39\x53\x5e\x6c\x34\x4a\xc2\x03\x12\x1e\xb5\xd8\x4f\x54\x69\x32\x69\x9b\x2b\x64\xb2\x63\x85\xed\x5d\x9e\x1b\x9a\x23\x99\x20\xad\x92\x6e\x54\x8f\x5e\x25\x80\xfc\x9f\xdb\x3f\xdc\xd9\xd5\xe5\xd5\xf9\xaa\xe2\x28\x68\x08\x9c\x09\xae\x91\x6b\x32\x59\xd4\x98\x80\xc6\x7b\xbd\x5f\x97\x94\xf1\x13\x48\x0b\x2a\x15\xea\xd3\xdb\xc9\x05\x39\x7e\x8c\xb5\x7c\x67\x28\xc9\x39\x4f\x45\xc6\x78\x9e\xc0\xf1\x94\xe9\xa6\xf8\xd2\x48\x5a\x92\x0b\x21\x2b\x95\x00\xaf\xdd\x47\x75\x1a\x9f\x40\xf3\x78\xfa\x96\xc3\x77\xa7\x10\xbd\x3b\x71\xf0\xbf\xc8\x2f\xc8\x51\x36\xb5\x5f\x0b\xcc\x98\x86\x38\x08\x83\xd8\xbe\xed\x0d\x12\xa8\xef\xf2\xfd\xa5\x14\xf6\x9b\x7f\x41\x2e\x92\x38\x8e\x7a\x83\x3d\x48\xc9\x4c\xc8\x8a\xea\x6e\xd2\xe7\x52\x0a\x09\x12\xa9\xa5\xd5\xa8\x6e\xa8\xf6\xc0\x1d\x27\x30\x54\x2b\x25\x6c\x47\x76\xe9\x45\x6d\x09\x5a\xe5\xef\x9b\x3a\x97\x34\xc3\xb4\x34\x4a\xa3\xb4\x3c\x0e\x3f\xac\xa7\xf1\xa5\xb0\x51\xff\x35\x28\x17\x36\xc7\xc7\x9b\x2b\xb7\x3a\x12\x95\x30\x32\x45\x95\xc0\xf0\xfd\xfc\x29\xa3\x1d\x2f\x3d\xef\x8d\x5b\x51\x4b\xc3\xd2\xfa\x70\xe8\xa3\x75\x21\x0c\xcf\x20\x5e\x05\x83\x2f\x4c\x17\xa0\x17\xb5\x2d\x1e\x18\x77\x9b\xa7\xb1\xaa\x4b\xaa\x31\x80\x49\x81\x12\x41\x15\xc2\x94\x19\x08\x5e\x2e\x60\x8a\x10\xad\x18\xbf\x56\xbc\x2d\xc5\x44\xd6\x47\xd6\x55\xc3\xc5\xff\x4b\x5f\xd0\x39\xc2\x14\x91\x3f\x2f\xe8\x55\x42\x7a\xd4\x73\x67\xa6\x28\x39\x6a\x54\xd1\x38\x6e\xa5\xe4\x44\x14\x8f\x77\xd2\xda\xd8\x3b\xd4\xdb\x06\x07\x5a\xc0\x6f\xcb\x04\x10\x05\xe3\x20\xb6\x8e\xcb\x85\x06\x65\x6a\x6b\x6d\x98\xc1\x4c\x8a\x0a\xe6\x9d\x09\x3c\xdc\x87\x6f\x0c\xf3\x7c\x84\xc2\xe8\xda\x68\x37\xbf\xd0\xbb\x24\xe8\xf4\x9e\x3a\x5b\xe5\x39\x64\x4c\x62\xaa\x85\x5c\xc0\x9b\xa1\x7a\xf3\x98\xdc\x0e\xd0\x4d\x66\x11\x85\xd1\x78\x3d\x03\xbc\xc7\xd4\xb8\xb8\xdd\x5c\xdd\xc6\xb5\x96\x90\xc0\x70\xfe\x94\xc8\x2e\x37\x5e\x32\xff\x51\xbc\x9e\x5d\xde\xf8\xa3\x4d\x66\xba\x11\xb5\x49\x7d\x3d\xda\x0a\xdf\xd2\x27\xaf\xab\x36\xa1\x6b\x2a\xd5\x03\xaf\xf4\x35\xc6\x0b\x59\x66\xac\x99\xfd\x2b\xc5\x52\xf6\x07\xcb\xf3\x96\xeb\xe3\xd7\xe1\x7a\x2e\x4f\x7c\xdb\xd7\x09\x2f\xe4\x25\x53\x39\xf4\x6a\x66\x46\x59\x89\x99\x5d\x13\xc6\x99\x66\xb4\x64\x5f\x57\x2d\xee\xda\xff\xf4\xcb\xe6\x45\x97\xd6\xf6\x2b\x3a\x18\x6f\x6c\xd8\x91\xb7\x61\x8c\xcf\x69\xc9\xb2\x6e\x5d\xad\x8d\x59\xb1\xa6\x82\x77\x27\x53\x9a\xde\x35\x2b\x6d\xba\x33\xcc\x40\x4c\xed\xcf\xa4\x55\x0d\xdf\x1a\x67\x93\xf0\x0e\x42\xef\x06\x08\x99\x16\xa8\xb4\xeb\x8d\x5b\x75\xeb\x44\x86\x2f\x7d\x68\x45\x6e\x3b\x72\xa3\xee\xc7\x5e\x83\x5a\x2d\x77\x23\x21\xc8\x04\x36\x4e\x88\xf7\x4c\x3d\x68\xcd\x56\xe0\xda\x91\x1e\x1f\x6e\x9c\xe8\xc8\xbb\x8e\x86\x4b\x4c\x45\xce\xd9\x57\xcc\xe0\xe3\xf5\x65\xfb\xa3\xce\xd5\xbd\x22\xb5\x19\xb5\xd9\x06\xc2\x91\x2f\xef\x82\x56\xe5\xd6\x5e\x6c\x04\xfd\x17\x00\x00\xff\xff\xeb\xf0\xcc\x89\x51\x0c\x00\x00")

func translationsEn_usLc_messagesAcsenginePoBytes() ([]byte, error) {
	return bindataRead(
		_translationsEn_usLc_messagesAcsenginePo,
		"translations/en_US/LC_MESSAGES/acsengine.po",
	)
}

func translationsEn_usLc_messagesAcsenginePo() (*asset, error) {
	bytes, err := translationsEn_usLc_messagesAcsenginePoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/en_US/LC_MESSAGES/acsengine.po", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsZh_cnLc_messagesAcsengineMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x5d\x6c\x14\xd5\x1f\x3d\xed\xf6\xe3\xff\x5f\xbf\x35\xf1\x23\x4a\xbc\x9a\x6c\xc0\xc0\x2c\xb3\x9b\x00\x75\x15\x22\x16\x30\x45\x2a\x4d\xb3\x10\x5f\x8c\x99\xee\xdc\xee\x5e\x9c\xbd\x77\x9d\x3b\xb3\x50\x9e\xd0\x54\xd9\x86\x96\x62\xd2\x16\x28\xa5\x58\x84\x94\x54\x74\x41\x02\x59\x5b\x88\x89\x2f\x3e\x1b\x13\x1f\x7d\x71\x67\x76\xfb\x84\x4f\x3e\x9b\xf9\xd8\xee\x5a\xd0\x07\xe7\xe5\x66\x7e\xbf\x73\xce\xfd\x9d\x73\xef\xfd\xed\xe9\x8e\x69\x00\x78\x0a\xc0\x4b\x00\xae\x00\x78\x0e\xc0\x96\x36\xf8\x5f\xa9\x0d\x20\x00\xc6\xda\x80\xcd\x00\x96\xda\x80\x7d\x00\x7e\x6d\x03\xfa\x00\x6c\x68\x07\x76\x02\xc8\xb6\x03\xaf\x00\xb8\xda\x0e\x6c\x02\xf0\x53\x3b\x10\x03\xf0\x47\x3b\xf0\x02\x80\x67\x23\xc1\xaa\x46\x02\x9d\xfd\x11\x60\x17\x80\x62\x24\xd0\xbf\x1d\x01\x5e\xf6\x74\x23\xc1\x1c\x7f\x46\x80\x17\x01\x3c\xd3\x01\x7c\xd0\x06\x6c\xed\x08\xf4\x26\x3a\x03\xdc\xad\x4e\xe0\x75\x00\xbf\x74\x02\xdb\x01\x3c\xd6\x15\xe8\xee\xe9\x02\x36\x00\x28\x74\x01\xaf\x02\x38\xdd\x15\xe0\x6f\x86\xf5\x9f\xc3\xf5\x7e\x17\xb0\xd1\xe3\x75\x07\x3a\xdb\xba\x81\xe7\x01\x88\xee\x60\xce\x52\x77\xc0\xbb\x1c\xd6\x7f\xec\x06\xbc\x48\xfe\x87\x07\xbf\xee\x70\x8d\x00\x78\x24\xcc\xf2\xd1\xb0\xd6\x09\xe0\x49\x00\x51\x6f\x2f\x00\xed\x00\x9e\x00\xf0\x7f\x00\x5d\x00\x3a\x00\x3c\xee\x01\xf7\x9a\xa6\x30\x89\x49\x35\x9d\xf1\x2c\x19\x66\x06\x25\x31\xb9\x85\xf8\xe5\x14\x89\xc9\x10\x70\x34\xe7\x75\x3e\xb6\xa9\x39\xe2\xe1\x76\x0f\xf6\x93\x61\x9f\x27\x85\x6d\x66\xa8\x4c\x91\xd8\xe6\x22\xf6\x09\x9b\xeb\x24\xd9\x2c\x93\xa3\xcc\xca\x11\x6b\xa4\xe0\xa9\x12\xc6\x89\x95\xa3\xc4\xa2\xf9\x82\xa1\x59\x34\x4e\xd2\x39\x6a\x52\x22\x73\xc2\x36\x74\x22\xb8\x31\x42\x86\x28\x49\x84\x32\x5c\xfc\x37\x9d\x9c\x56\xa4\x64\x88\x52\x4e\x12\x38\x54\xc8\x9a\x9a\x4e\x89\x25\xc8\xbb\xf6\x10\x35\x39\xb5\xa8\x24\x89\xf8\xf6\x78\x92\x30\x49\xb8\xb0\x88\xb4\x0b\x05\x61\x5a\x54\x27\xc3\xa6\xc8\x93\x22\x35\x25\x13\xdc\xb7\x4e\x7d\xeb\x19\x93\x6a\x96\x67\x5a\x67\x26\xcd\x58\xc2\x1c\x21\x1b\x63\x72\x63\x0b\x82\x1e\xa3\x19\xdb\x87\x34\x46\xf2\xc3\x09\xc3\x4c\x91\x58\x31\x04\x66\x29\xa7\x66\x20\x66\x37\x26\x0b\x19\x2d\x72\x05\xcd\x94\x2d\x87\xd1\xc2\x5f\x77\x4c\x3e\x67\x58\x63\x06\xd5\x3d\x87\x8c\x33\x8b\x69\x06\x3b\xde\x54\x6d\xec\x18\x9e\x25\xe3\x45\xcd\x60\x7a\xc3\xa4\x97\xa5\x37\x68\x46\xf0\x46\x65\x48\xcb\x7c\x14\x04\x61\x37\x6a\x54\x27\x62\xe8\x08\xcd\x58\x10\x66\x26\x47\xa5\xe5\xeb\xf9\x19\x78\x19\xda\x7c\x2d\x41\x34\xed\x07\x03\x12\x5d\xd0\x20\x65\x7a\x8c\x49\x0b\x36\x37\x69\x46\x64\x39\x3b\x4e\x75\xb2\x7b\xa0\xef\x70\xb8\xab\xa7\x85\x11\x2d\x6f\xfc\x13\x71\xc0\x14\xde\x04\x4a\x9f\xae\x1c\x6e\x1c\x50\x74\x90\x7a\xdb\x2a\xfd\x32\xcb\x74\xe5\x6d\x3b\x2b\x95\xb4\x48\x91\xe8\xc0\xc1\xb4\xd2\xeb\x9f\x99\xe0\xca\x1e\x3f\xda\xa4\x9a\xd8\xa1\xa8\xdb\x94\x44\x0f\x49\x26\x53\xea\x8e\xcd\xaa\xaa\xaa\xd1\x81\x83\xca\x20\x2d\x32\xf9\x50\x5c\x62\x5b\x2a\xd1\xa3\xa8\x3b\x54\x35\x7a\x40\x93\x96\x92\x36\x35\x2e\x8d\x20\xc9\xfd\x4c\xe3\x59\x8b\x69\x9c\x1c\x60\xe4\xcd\x23\x8d\x3f\x83\xbd\x95\x13\x56\x5e\x63\x46\x3c\x23\xf2\xbb\xa2\x07\x34\x9e\xb5\xb5\x2c\x55\xd2\x54\xcb\xa7\x48\x6f\x8e\x71\x2a\x29\xd9\x24\x59\xbe\x60\xb0\x61\x46\xf5\xd7\xd6\x30\x29\x72\x3c\xf7\x61\xef\x7b\xd1\xfe\xbe\xfe\xbd\x4d\x8b\x89\xb8\x1a\xed\x15\xdc\xa2\xdc\x52\xd2\x23\x05\x9a\x22\x16\x3d\x66\x6d\x2d\x18\x1a\xe3\x6f\x90\x4c\x4e\x33\x25\xb5\x76\x1e\x4a\xef\x53\x7a\x9a\x38\x6f\xd0\x61\x6a\x2a\x7b\x79\x46\x78\xb7\x25\x45\x7a\x86\x98\x15\x7d\x5f\x79\xa7\x79\x17\x06\x04\xd5\x99\x45\x92\x71\x35\x9e\x8c\xc2\x9d\x39\x59\x5d\xb9\x43\x62\xf2\xfe\xdd\xf1\xd5\xa9\xf3\xf5\x72\xb9\x5e\x5e\x71\x26\x67\xdc\xb3\x77\x9c\x93\xcb\xab\x53\xe7\xfd\xcb\xe3\x5e\xba\x5a\x2f\x5f\xde\x3d\xd8\x5f\xbf\x3d\xea\x2e\x9f\x59\x6b\xde\xbf\x3b\xeb\x3f\x7e\xf7\xda\x82\x7b\xf1\x07\x67\xf2\x8b\xda\xe9\x1b\xd5\xca\x95\x6a\x65\xa9\x76\x73\xc5\x99\x3f\x15\x93\xa4\x36\x3b\x1a\x90\x7e\x3f\xf1\xa9\xb3\x3c\x55\x2f\x5f\x75\x26\x97\xdc\xb9\xb1\x6a\xe5\x44\xb5\xb2\x14\x32\xdd\xef\x16\xdc\xb9\xb1\x80\xff\x2f\xcc\x26\xad\x36\x56\x72\xe7\xae\xc7\x24\xa9\x56\x26\xdc\xa9\xb2\x3b\xfe\x89\x33\x71\xb2\xb6\xbc\xe8\x94\x6e\xac\x7f\xec\x70\x4a\x17\x9c\x95\xe5\xda\x85\x6f\x9d\x7b\xd3\xde\xfd\x5a\x67\x6d\x6c\xb1\xbe\x30\xbe\x16\x03\x89\x15\x49\x38\x53\x03\xf6\x00\x64\x7d\xbf\xbe\xf8\x95\x3b\x7f\x66\xad\x9f\xf2\x35\x9a\xdd\x20\xcf\x96\x6e\xcb\x08\x70\x4a\x17\x9d\xc5\x53\xce\xf8\x4c\x20\x5a\x9b\xba\xe4\x96\xce\x38\xe7\xaf\xfd\x3d\x62\x89\x6a\xe5\xb4\x73\x61\xde\x3d\x57\x5e\xbd\x38\x1f\x98\x77\xc6\x67\x6a\xb3\xa3\x4e\xf9\xfb\xfa\xcd\x05\x2f\xaa\x7b\xd7\xdd\x89\xcb\xb5\xd9\xd1\xa0\xeb\x9e\xfd\xd2\x9d\x2e\x79\xcc\x98\x24\xab\x9f\x4d\x78\x92\xe7\xca\xd5\xca\x84\x33\x79\x36\x08\xac\x11\xfd\x9a\x2d\xaf\xf9\xcd\x39\x67\xee\x1a\x3c\xf2\xad\xe9\x7a\xf9\x73\xa7\xf4\x75\x6d\x76\xf4\xe1\xcf\xf5\x61\xc4\xbf\x02\x00\x00\xff\xff\x6b\xf3\x55\xa8\xdb\x07\x00\x00")

func translationsZh_cnLc_messagesAcsengineMoBytes() ([]byte, error) {
	return bindataRead(
		_translationsZh_cnLc_messagesAcsengineMo,
		"translations/zh_CN/LC_MESSAGES/acsengine.mo",
	)
}

func translationsZh_cnLc_messagesAcsengineMo() (*asset, error) {
	bytes, err := translationsZh_cnLc_messagesAcsengineMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/zh_CN/LC_MESSAGES/acsengine.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _translationsZh_cnLc_messagesAcsenginePo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x6d\x4f\x14\xd7\x17\x7f\xcf\xa7\x38\x81\x6c\xd4\xe8\x2c\xb3\x2b\x4f\xce\xff\x21\xb5\x54\x1b\x5b\x69\x09\x59\x9b\xbe\x68\xd2\x0c\x33\x87\xd9\x2b\xb3\xf7\x4e\xef\xbd\x83\xae\xaf\x6c\x43\xeb\x12\x41\x6c\x82\xa0\x88\x28\xb6\x06\x63\x6d\x57\xdb\xd4\x6c\x41\xd3\x0f\xd3\x9d\xd9\xe5\x95\x5f\xa1\xb9\x33\xfb\x08\xb3\x60\xfb\x82\xb0\xdc\x7b\x86\xf3\x3b\xe7\xf7\xb0\x33\x00\xe3\x79\x42\x51\x20\x48\x6e\x52\xe1\x9a\x92\x30\x2a\x60\x86\x71\x30\x2d\x81\xd4\x21\x14\xc1\x33\xad\x59\xd3\xc1\x74\xdf\x00\x8c\x33\xaf\xc8\x89\x93\x97\x70\x7c\xfc\x04\x64\xf5\xcc\x68\xdf\x00\xe4\xf2\x44\xc0\x0c\x71\x11\x88\x00\x9b\x08\xc9\xc9\xb4\x2f\xd1\x06\x9f\xda\xc8\x41\xe6\x11\x84\x59\x40\x70\x89\x85\x54\x20\x98\x22\x3a\x4b\x6c\xf0\x11\x31\xa9\x23\x89\x49\xe1\x22\x81\xff\x5e\x6e\xfe\xe5\x92\xf7\xf2\x4c\x16\x4c\xe2\xa6\x2d\x56\xf8\xff\xa9\xa8\x75\xba\x6f\xa0\xaf\x20\x1c\x62\x43\x7f\xbf\xfa\x20\x24\x57\x9f\xfa\x27\x39\xbb\x8c\x96\xd4\x2e\xd8\xda\x67\xc8\x05\x61\xd4\x80\x2f\x68\x7f\x5f\xff\x14\x7a\x8c\x4b\x6d\x42\x3d\xa3\xbd\xef\x3b\x42\xcb\xb1\xc6\xd5\xe4\xa7\x39\x6d\x9c\x63\x34\xbf\xf6\x81\x29\xd1\x88\x5a\x68\xfa\xb0\x96\x19\x83\x6c\xd6\xd0\x47\x4f\xea\xba\xae\x37\x8a\xb5\x29\x9c\x23\x22\xb1\x36\x33\x6c\x64\xc6\x34\x7d\xb4\x51\x7b\xd1\x14\x52\xcb\x35\x96\xcb\xb8\xf1\x8e\x13\x36\x9e\xa5\x8e\x6f\x3a\xa8\xe5\xd0\x2c\x18\x2d\xaa\x8e\x0b\x52\xf0\x5c\x32\x43\xd0\x3e\xd1\x55\x67\xc0\xb5\xfc\x97\xe3\x9f\x44\x67\x13\x17\x26\xce\xb5\xc7\xcf\xa4\x63\x34\xe3\x8c\x4a\xa4\x52\xcb\x15\x3d\x34\x40\xe2\x55\x39\xe8\xb9\x26\xa1\xff\x01\x2b\x6f\x72\x81\xf2\x7f\x97\x72\xe7\xb5\xb1\xee\x5a\x05\x7e\x06\xb9\x76\x8e\x5a\xcc\x26\xd4\x31\x60\x6c\x9a\xc8\xa8\xe6\x73\xed\x43\xa4\xc8\xe3\xc9\x26\x19\xda\x44\x42\x36\xad\xa7\xb3\xea\xb6\x6f\xc0\x00\x6f\xd6\x19\x6c\x11\x3d\x18\xff\x4a\x3b\xcc\xc8\x66\x33\x7d\x03\xa7\xc0\xd2\x66\x18\x2f\x98\xb2\xc9\xe3\x39\xce\x19\x07\x8e\xa6\xea\x13\x6b\x2a\x25\x4e\x41\x74\x6c\x40\x4a\xb4\x79\x0e\x57\x6f\x54\x77\x5f\x41\x4a\xbc\x7d\xbd\xb8\xb7\x72\xaf\x5e\x2e\xd7\xcb\xbb\xc1\xf2\x6a\xb8\xf6\x2a\xb8\xb1\xb3\xb7\x72\x2f\x2e\x6f\x62\x60\x9e\x42\xa9\xc4\x3d\xe8\x7b\x0e\x37\x6d\xb4\x5c\x5f\x48\xe4\x0a\xcc\xd0\x99\xde\x58\xae\xe4\x15\x88\xaf\x7c\xe4\x45\x05\xe9\xec\xd4\x44\xe4\x0e\x8e\x82\xf9\xdc\x42\x61\x40\xea\xe4\x5c\x07\xac\x87\x4f\xea\xe5\xc7\x67\xa7\x26\xea\xbf\xcf\x87\x3b\xb7\x5b\x68\xde\xbe\x5e\x8f\x0b\x0f\x2e\x25\x72\x9e\x6a\xad\xa0\x9c\x19\x4a\x82\x72\x9e\xf9\xd4\x86\x6c\xbb\x2b\x5c\x21\x32\x0f\xb2\xe8\xa9\xfd\x00\xa1\x91\xa1\x24\x16\x3c\xd7\x94\x98\x86\x5c\x1e\x39\x82\xc8\x33\xdf\xb5\x81\x51\xb7\x08\xd3\x08\x99\x0e\x94\x4f\xb7\xc2\x07\x7f\x06\xcb\xdf\xd7\x6e\xbd\xa8\x56\x7e\xac\x56\x9e\xd5\x5e\xee\x06\x9b\x37\x53\x02\x6a\xeb\xf3\x31\xf4\xbf\xae\x7f\x13\xec\xac\xd4\xcb\x4f\x82\xe5\x67\xe1\xc6\x42\xb5\x72\xbd\x5a\x79\x76\x24\xfe\x8c\x4a\x84\x5e\x03\x50\xf6\xef\x26\xc8\x9b\x73\x08\xd3\x88\xf4\xe0\x0c\xe1\xaf\x5b\xe1\xc6\x42\x3c\xc9\x21\x33\x24\x0c\xd0\xa1\x88\x59\x7f\x1a\x39\x45\x89\x22\x33\x92\x6d\xc8\x23\x12\x46\x76\xe4\x9d\xf4\x33\x92\x48\xda\xa5\xb8\x0e\x24\x83\x8f\x5b\x0d\x20\x93\x1e\x49\x67\x55\x50\x52\x26\x41\xf8\x9e\x4a\x24\xb4\x61\x86\xb3\x02\xcc\x35\xed\xda\x29\xf4\xda\x42\x29\xdc\x78\x9e\x12\x50\xad\x2c\x85\x2b\xe5\x70\xf1\xeb\x60\xe9\x46\x6d\x67\x3b\x28\xbd\xd8\xff\x6f\x93\xd8\x61\xbe\xf4\x7c\x19\x51\xa3\x27\xca\x1c\x23\x99\x5b\x51\xf6\x51\x07\x6c\xc2\xd1\x92\x8c\x17\xe1\x58\x4a\x1c\xeb\x86\x12\x94\xee\x07\xbb\x3b\xb5\xfb\xbf\x04\x6f\xee\x28\xd6\x7a\x78\x2d\xc9\xef\x19\x3d\x33\xd2\xbb\x3b\x5e\x45\xcb\x8f\xda\x37\x15\x10\x99\xac\xe1\x7f\x03\x52\x9d\x0e\x5b\xd8\xae\x6f\x2d\xb6\xec\x0f\xa9\x39\x68\x48\xa1\x89\xe6\x9f\x71\x3c\x9c\xed\x8d\xcb\x89\xc3\x4d\x01\xf3\x9b\x6c\x36\x00\xee\x4b\xa3\x7d\xa0\x7a\x22\xea\xb1\x9b\xc4\x30\x8c\x31\x78\x26\x17\x1d\x61\xd8\xbd\x8c\xfa\xf6\x0f\xe1\xe6\xed\x56\x5f\x23\xda\x46\x42\x57\x8f\xa8\x1f\x97\xb5\x84\x7d\xba\x75\xde\x18\xac\xfb\x5a\xef\x8d\x67\x5f\x38\x77\xef\xa1\x91\xc1\x1d\x78\x44\x12\x9e\x77\xe1\x65\x28\x51\x2f\x33\x26\x71\xd1\x56\x9e\x22\x94\x48\x62\xba\xe4\x5a\x9b\x93\x26\x5f\xfb\xbf\x2b\x82\xd2\x83\x60\xfb\x66\xb0\xb8\x1a\xd3\x52\x5b\x79\x18\x96\x6e\x07\xf7\x9e\x76\xa7\xb3\x38\x64\x5f\x99\xd3\x23\x87\x2e\x6c\x34\x71\x61\x84\xce\x99\x2e\xb1\x9b\xbe\x56\xcb\x50\xb2\xb6\x18\x6d\x9e\x4c\x9b\xd6\x6c\xec\x7d\xbf\x79\x86\x36\xb0\x69\xf5\xfe\xd2\xc6\x5f\xad\xdc\x0a\xee\x6f\x86\x77\xcb\x7b\x0f\x36\xe3\x38\x08\x16\x57\x6b\xeb\xf3\x41\xf9\x8f\xfa\xcb\x2d\x95\x76\x6f\x9e\x87\x4b\x8f\x6b\xeb\xf3\xf1\x6d\xb8\xf6\x28\xbc\x53\x3a\xd2\x93\xa7\xf5\x44\xe9\x33\x6e\xe5\x51\xc8\x68\x8f\x51\x08\xa8\xb4\xf2\x69\x2b\xab\xda\xb8\x52\x02\xf6\xbe\x5d\x52\x8b\xbc\x5b\xae\x56\x96\x82\xe5\xb5\x38\xa0\x8e\x90\xfb\x48\x62\x0e\xb5\x9d\x1f\x0b\x0b\x6c\x86\x71\x4a\xe2\x55\x22\xe4\x81\xe0\x6f\x79\x4d\x75\xfe\xf9\x6e\xb0\xf1\xf4\x10\xfe\xc6\x86\x0e\xa5\x6f\x38\xd1\x7f\x3e\xe5\x68\x31\x87\x92\x6b\x68\xc3\xd9\xc9\x0b\x8d\xb7\xa9\x68\x27\x1d\x70\xd6\x1e\x85\xbf\xdd\xa9\x97\xbf\x0b\x4a\x3f\xd5\xd6\xe7\x0f\x16\x1e\x6e\x7d\x7d\x38\xa9\x75\xd1\x2c\xb8\x47\x2e\x22\x2a\x4a\xdc\xc3\xdf\x01\x00\x00\xff\xff\xdb\xce\xf0\x12\xd7\x0b\x00\x00")

func translationsZh_cnLc_messagesAcsenginePoBytes() ([]byte, error) {
	return bindataRead(
		_translationsZh_cnLc_messagesAcsenginePo,
		"translations/zh_CN/LC_MESSAGES/acsengine.po",
	)
}

func translationsZh_cnLc_messagesAcsenginePo() (*asset, error) {
	bytes, err := translationsZh_cnLc_messagesAcsenginePoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "translations/zh_CN/LC_MESSAGES/acsengine.po", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"translations/default/LC_MESSAGES/acsengine.mo": translationsDefaultLc_messagesAcsengineMo,
	"translations/default/LC_MESSAGES/acsengine.po": translationsDefaultLc_messagesAcsenginePo,
	"translations/en_US/LC_MESSAGES/acsengine.mo":   translationsEn_usLc_messagesAcsengineMo,
	"translations/en_US/LC_MESSAGES/acsengine.po":   translationsEn_usLc_messagesAcsenginePo,
	"translations/zh_CN/LC_MESSAGES/acsengine.mo":   translationsZh_cnLc_messagesAcsengineMo,
	"translations/zh_CN/LC_MESSAGES/acsengine.po":   translationsZh_cnLc_messagesAcsenginePo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"translations": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"LC_MESSAGES": {nil, map[string]*bintree{
				"acsengine.mo": {translationsDefaultLc_messagesAcsengineMo, map[string]*bintree{}},
				"acsengine.po": {translationsDefaultLc_messagesAcsenginePo, map[string]*bintree{}},
			}},
		}},
		"en_US": {nil, map[string]*bintree{
			"LC_MESSAGES": {nil, map[string]*bintree{
				"acsengine.mo": {translationsEn_usLc_messagesAcsengineMo, map[string]*bintree{}},
				"acsengine.po": {translationsEn_usLc_messagesAcsenginePo, map[string]*bintree{}},
			}},
		}},
		"zh_CN": {nil, map[string]*bintree{
			"LC_MESSAGES": {nil, map[string]*bintree{
				"acsengine.mo": {translationsZh_cnLc_messagesAcsengineMo, map[string]*bintree{}},
				"acsengine.po": {translationsZh_cnLc_messagesAcsenginePo, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

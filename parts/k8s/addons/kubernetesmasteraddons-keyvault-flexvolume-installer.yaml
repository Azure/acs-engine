apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: kv
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: keyvault-flexvolume
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: keyvault-flexvolume
  namespace: kv
spec:
  template:
    metadata:
      labels:
        app: keyvault-flexvolume
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: "EnsureExists"
    spec:
      tolerations:
      containers:
      - name: keyvault-flexvolume
        image: "ritazh/kv-flexvol-installer:v0.0.3"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: <kubernetesKeyVaultFlexVolumeInstallerCPURequests>
            memory: <kubernetesKeyVaultFlexVolumeInstallerMemoryRequests>
          limits:
            cpu: <kubernetesKeyVaultFlexVolumeInstallerCPULimit>
            memory: <kubernetesKeyVaultFlexVolumeInstallerMemoryLimit>
        env:
        - name: TARGET_DIR
          value: "/etc/kubernetes/volumeplugins"
        volumeMounts:
        - mountPath: "/etc/kubernetes/volumeplugins"
          name: volplugins
      volumes:
      - hostPath:
          path: "/etc/kubernetes/volumeplugins"
        name: volplugins
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: blobfuse-flexvolume
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: blobfuse-flexvolume
  namespace: kv
spec:
  template:
    metadata:
      labels:
        app: blobfuse-flexvolume
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: "EnsureExists"
    spec:
      tolerations:
      containers:
      - name: blobfuse-flexvolume
        image: "ritazh/kv-flexvol-installer:v0.0.3"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: <kubernetesKeyVaultFlexVolumeInstallerCPURequests>
            memory: <kubernetesKeyVaultFlexVolumeInstallerMemoryRequests>
          limits:
            cpu: <kubernetesKeyVaultFlexVolumeInstallerCPULimit>
            memory: <kubernetesKeyVaultFlexVolumeInstallerMemoryLimit>
        env:
        - name: TARGET_DIR
          value: "/etc/kubernetes/volumeplugins"
        volumeMounts:
        - mountPath: "/etc/kubernetes/volumeplugins"
          name: volplugins
      volumes:
      - hostPath:
          path: "/etc/kubernetes/volumeplugins"
        name: volplugins
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: smb-flexvolume
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: smb-flexvolume
  namespace: kv
spec:
  template:
    metadata:
      labels:
        app: smb-flexvolume
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: "EnsureExists"
    spec:
      tolerations:
      containers:
      - name: smb-flexvolume
        image: "ritazh/kv-flexvol-installer:v0.0.3"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: <kubernetesKeyVaultFlexVolumeInstallerCPURequests>
            memory: <kubernetesKeyVaultFlexVolumeInstallerMemoryRequests>
          limits:
            cpu: <kubernetesKeyVaultFlexVolumeInstallerCPULimit>
            memory: <kubernetesKeyVaultFlexVolumeInstallerMemoryLimit>
        env:
        - name: TARGET_DIR
          value: "/etc/kubernetes/volumeplugins"
        volumeMounts:
        - mountPath: "/etc/kubernetes/volumeplugins"
          name: volplugins
      volumes:
      - hostPath:
          path: "/etc/kubernetes/volumeplugins"
        name: volplugins
      nodeSelector:
        beta.kubernetes.io/os: linux